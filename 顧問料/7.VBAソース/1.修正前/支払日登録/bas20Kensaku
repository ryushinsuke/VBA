Attribute VB_Name = "bas20Kensaku"
Option Explicit

'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー算出システム・支払日登録
'
'オブジェクト名：bas20Kensaku
'
'機能概要　：検索ボタン処理
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'
'*************************************************************************

Const MODULE_NAME = "bas20Kensaku"

'*************************************************************************
'関数名　　：検索処理メイン処理
'
'引　数　　：objTarget           I           対象のシート
'　　　　　　blnRefresh          I           画面再表示指定(True:再表示する)
'
'戻り値　　：なし
'
'機能説明　：検索処理メイン
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'更新履歴　：2008/08/08 SRA Y.Azuma    変更   連結障害対応(No.24)
'
'*************************************************************************
Public Sub gsub_KensakuMain(ByRef objTarget As Object _
                          , ByVal blnRefresh As Boolean)

On Error GoTo ErrorSection

    Dim blnRet As Boolean
    Dim lngCnt As Long
    
    '画面クリア処理
    Call g_subKeisanIniScreenH(objTarget)   'ヘッダー部
    Call g_subKeisanIniScreenD(objTarget)   '明細部
    
    '入力チェック処理(検索時)
    blnRet = gfuncShiharai_SearchInputCheck(objTarget)
    
    If blnRet = False Then
        Exit Sub
    End If
    
    If blnRefresh Then
        With Application
'------------<Modify Start azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
            lngCnt = DATA_TOP_ROW  '明細先頭行取得
'            lngCnt = lngDataTopRow  '明細先頭行取得
'------------<Modify End   azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
            
            objTarget.Range(Cells(lngCnt, DTCol.支払Chk), Cells(lngCnt, DTCol.支払Chk)).Select
            .ScreenUpdating = True
            objTarget.Cells(lngCnt, DTCol.支払Chk).Activate
            .ScreenUpdating = False
        End With
    End If
    
    '検索処理とデータ設定
    blnRet = gfuncShiharai_DoSearch(objTarget)
    
    If blnRet = False Then
        'システムエラー
        Call gfunc_ErrorMsg(4, 1, "", "")
        objTarget.cmdSearch.Activate   'フォーカスを検索ボタンに戻す
        Exit Sub
    End If
        
'------------<Modify Start azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
    lngCnt = DATA_TOP_ROW  '明細先頭行取得
'    lngCnt = lngDataTopRow  '明細先頭行取得
'------------<Modify End   azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
    objTarget.Cells(lngCnt, DTCol.支払Chk).Activate
    Exit Sub
    
ErrorSection:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gsub_KensakuMain", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Sub

'*************************************************************************
'関数名　　：入力チェック処理(検索時)
'
'引　数　　：TargetSheets        I           チェック対象のシート
'
'戻り値　　：Boolean
'
'機能説明　：日付関連の入力チェック
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'
'*************************************************************************
Public Function gfuncShiharai_SearchInputCheck(ByRef TargetSheets As Object) As Boolean

On Error GoTo ErrorSection
    
    Dim strDateNm       As String
    
    gfuncShiharai_SearchInputCheck = False
    
'１．【支払期間FROM,TO】
    strDateNm = "支払期間"
    If Not func_DateRangeChk(Trim(TargetSheets.Range(strDateNm & "FROM")) _
                           , Trim(TargetSheets.Range(strDateNm & "TO")) _
                                       , strDateNm, TargetSheets) Then Exit Function

'２．【送付日FROM,TO】
    strDateNm = "送付日"
    If Not func_DateRangeChk(Trim(TargetSheets.Range(strDateNm & "FROM")) _
                           , Trim(TargetSheets.Range(strDateNm & "TO")) _
                                       , strDateNm, TargetSheets) Then Exit Function

'３．【支払予定日FROM,TO】
    strDateNm = "支払予定日"
    If Not func_DateRangeChk(Trim(TargetSheets.Range(strDateNm & "FROM")) _
                           , Trim(TargetSheets.Range(strDateNm & "TO")) _
                                       , strDateNm, TargetSheets) Then Exit Function

'４．【支払日FROM,TO】
    strDateNm = "支払日"
    If Not func_DateRangeChk(Trim(TargetSheets.Range(strDateNm & "FROM")) _
                           , Trim(TargetSheets.Range(strDateNm & "TO")) _
                                       , strDateNm, TargetSheets) Then Exit Function

'５．【支払日FROM,TO】と「送付済だけを表示」の関連チェック
    strDateNm = "支払日"
    Select Case True
    Case Trim(TargetSheets.Range(strDateNm & "FROM")) & _
         Trim(TargetSheets.Range(strDateNm & "TO")) = ""        '支払日入力なしならチェック不要
    Case TargetSheets.OptionButton1
        subCmnSetFocus TargetSheets.Range("送付済だけを表示")    'フォーカス位置付け
        Call gfunc_ErrorMsg(3, 23001, "", "")                   '"「送付済だけを表示」の選択と支払日範囲の指定は矛盾してます。"
        Exit Function
    End Select

    gfuncShiharai_SearchInputCheck = True

    Exit Function
    
ErrorSection:
    gfuncShiharai_SearchInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncShiharai_SearchInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：日付範囲の指定チェック処理
'
'引　数　　：strDateFm    I       開始日付
'　　　　　　strDateTo    I       終了日付
'　　　　　　strDateNm    I       データ表記名
'　　　　　　TargetSheets I       対象シート
'
'戻り値　　：Boolean
'
'機能説明　：日付範囲の指定チェック
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'
'*************************************************************************
Private Function func_DateRangeChk(ByRef strDateFm As String _
                                 , ByRef strDateTo As String _
                                 , ByRef strDateNm As String _
                                 , ByRef TargetSheets As Object) As Boolean

    func_DateRangeChk = False       'エラーで初期化
    
    '①開始日付カレンダーﾁｪｯｸ
    If Trim(strDateFm) <> "" Then
    '入力あり
        If gfunc_CheckDate(strDateFm) = False Then
            '"日付(開始)：入力に誤りがあります。"
            subCmnSetFocus TargetSheets.Range(strDateNm & "FROM") 'フォーカス位置付け
            Call gfunc_ErrorMsg(3, 3, strDateNm & "(開始)", "")
            Exit Function
        End If
    End If
    
    '②終了日付カレンダーﾁｪｯｸ　＆　大小判定
    If Trim(strDateTo) <> "" Then
    '入力あり
        If gfunc_CheckDate(strDateTo) = False Then
            '"日付(終了)：入力に誤りがあります。"
            subCmnSetFocus TargetSheets.Range(strDateNm & "TO") 'フォーカス位置付け
            Call gfunc_ErrorMsg(3, 3, strDateNm & "(終了)", "")
            Exit Function
        End If
        
        If strDateTo < strDateFm Then
            '"日付(開始/終了)：期間の指定に誤りがあります。"
            subCmnSetFocus (TargetSheets.Range(strDateNm & "FROM"))
            Call gfunc_ErrorMsg(3, 5, strDateNm & "(開始/終了)", "")
            Exit Function
        End If
    End If

    func_DateRangeChk = True       '異常なし

End Function

'*************************************************************************
'関数名　　：検索処理とデータ設定処理
'
'引　数　　：TargetSheets       I       対象シート
'
'戻り値　　：Boolean
'
'機能説明　：検索処理とデータ設定
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'
'*************************************************************************
Public Function gfuncShiharai_DoSearch(ByRef TargetSheets As Object) As Boolean

On Error GoTo Error_Section
    
    Dim blnRet          As Boolean
    Dim vDatShiharai()  As Variant      '支払情報データ
    Dim lngShiharaiCnt  As Long         '支払情報データ件数
    
    Erase vDatShiharai
    
    gfuncShiharai_DoSearch = False

'1.支払情報の取得
    blnRet = func_GetShiharaiInfo(TargetSheets, vDatShiharai, lngShiharaiCnt)
    Select Case True
    Case Not blnRet           '例外エラー発生
        Exit Function
    Case lngShiharaiCnt = 0   '該当データなし
        Call gfunc_ErrorMsg(3, 9, "", "")
        gfuncShiharai_DoSearch = True
        Exit Function
    End Select

'2.取得データの表示
    If func_SetShiharaiInfo(TargetSheets, vDatShiharai, lngShiharaiCnt) = False Then
        Exit Function
    End If
    
    '取得データをメモリーから破棄
    Erase vDatShiharai
    
'3.変更有無計算式の設定
'------------<Modify Start azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
    TargetSheets.Range("変更比較FLAG合計").Formula = "=SUM(" & _
    fncCmnCellAdrCnv(DTCol.変更比較Flag) & Trim(Str(DATA_TOP_ROW)) & ":" & _
    fncCmnCellAdrCnv(DTCol.変更比較Flag) & Trim(Str(DATA_TOP_ROW + lngShiharaiCnt - 1)) & ")"
'    TargetSheets.Range("変更比較FLAG合計").Formula = "=SUM(" & _
'    fncCmnCellAdrCnv(DTCol.変更比較Flag) & Trim(Str(lngDataTopRow)) & ":" & _
'    fncCmnCellAdrCnv(DTCol.変更比較Flag) & Trim(Str(lngDataTopRow + lngShiharaiCnt - 1)) & ")"
'------------<Modify End   azuma 2008/08/08 > 連結障害対応(No.24)-----------------------

    '全部支払ボタンを使用可能とする。
    TargetSheets.CmdAll.Enabled = True
    
    gfuncShiharai_DoSearch = True

    Exit Function

Error_Section:
    gfuncShiharai_DoSearch = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncShiharai_DoSearch", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vDatShiharai

End Function

'*************************************************************************
'関数名　　：支払情報取得処理
'
'引　数　　：TargetSheets    I       処理対象ワークシート
'　　　　　　vdata()         O       取得結果
'　　　　　　lngRow          O       取得件数
'
'戻り値　　：Boolean
'
'機能説明　：支払情報を取得する
'
'更新履歴　：2008/06/12 SRA吉井   新規作成
'
'*************************************************************************
Private Function func_GetShiharaiInfo(ByRef TargetSheets As Object _
                                   , ByRef vData() As Variant _
                                   , ByRef lngRow As Long) As Boolean
On Error GoTo ErrHandler

    Dim strSql       As String
    Dim strSqlWhere  As String
    Dim strWhereItem As String
    Dim lngCol       As Long
    Dim strErrCode   As String
    
    func_GetShiharaiInfo = False

    strSql = ""
    strSql = strSql & "SELECT" & vbCrLf
    strSql = strSql & "    DECODE(A.STATUS,'2','TRUE','FALSE')," & vbCrLf
    strSql = strSql & "    NVL(A.SHIHARAI_YMD,NVL(A.SHIHARAI_YOTEI_YMD,TO_CHAR(SYSDATE,'YYYYMMDD')))," & vbCrLf
    strSql = strSql & "    A.SHIHARAI_YOTEI_YMD," & vbCrLf
    strSql = strSql & "    A.GI_NO || ':' || TRIM(B.VALUE_NAME)," & vbCrLf
    strSql = strSql & "    C.GI_SHIHARAI_KIKAN_FROM," & vbCrLf
    strSql = strSql & "    C.GI_SHIHARAI_KIKAN_TO," & vbCrLf
    strSql = strSql & "    A.SOUFU_YMD," & vbCrLf
    strSql = strSql & "    TRUNC(DECODE(D.SHUUSEIGAKU_SAIYOU_FLG,'1', D.KAZEI_GO_SHUUSEIGAKU, D.SHOHIZEI_KAZEI_GO_GAKU))," & vbCrLf
    strSql = strSql & "    TRUNC(DECODE(D.SHUUSEIGAKU_SAIYOU_FLG,'1', D.SHOHIZEI_SHUUSEIGAKU, D.SHOHIZEI_GAKU))," & vbCrLf
    strSql = strSql & "    A.GI_SHIHARAI_KIKAN_ID," & vbCrLf
    strSql = strSql & "    A.SHIHARAI_FLG" & vbCrLf
    strSql = strSql & "FROM" & vbCrLf
    strSql = strSql & "    KYK_GI_SHIHARAI_KANRI      A," & vbCrLf
    strSql = strSql & "    KYK_CODE_VALUE             B," & vbCrLf
    strSql = strSql & "    KYK_GI_SHIHARAI_KIKAN      C," & vbCrLf
    strSql = strSql & "    KYK_GI_SHIHARAI_KEISAN_SUM D" & vbCrLf
    strSql = strSql & "WHERE" & vbCrLf

    strSqlWhere = ""
    With TargetSheets
        strWhereItem = Left(.Range("外部委託先"), 1)
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND A.GI_NO = '" & func_ChkQuoteshon(strWhereItem, "'") & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払期間FROM"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND C.GI_SHIHARAI_KIKAN_FROM = '" & strWhereItem & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払期間TO"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND C.GI_SHIHARAI_KIKAN_TO = '" & strWhereItem & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("送付日FROM"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND A.SOUFU_YMD >= '" & strWhereItem & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("送付日TO"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND A.SOUFU_YMD <= '" & strWhereItem & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払予定日FROM"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND (A.SHIHARAI_YOTEI_YMD >= '" & strWhereItem & "'" & vbCrLf
            strSqlWhere = strSqlWhere & " OR  A.SHIHARAI_YOTEI_YMD IS NULL)" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払予定日TO"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND A.SHIHARAI_YOTEI_YMD <= '" & strWhereItem & "'" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払日FROM"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND (A.SHIHARAI_YMD >= '" & strWhereItem & "'" & vbCrLf
            strSqlWhere = strSqlWhere & " OR A.SHIHARAI_YMD IS NULL)" & vbCrLf
        End If
    
        strWhereItem = Trim(.Range("支払日TO"))
        If strWhereItem <> "" Then
            strSqlWhere = strSqlWhere & "AND A.SHIHARAI_YMD <= '" & strWhereItem & "'" & vbCrLf
        End If
    
        If .OptionButton1 Then
            strSqlWhere = strSqlWhere & "AND A.STATUS = '1'" & vbCrLf
        Else
            strSqlWhere = strSqlWhere & "AND A.STATUS >= '1'" & vbCrLf
        End If
    
        strSqlWhere = strSqlWhere & "AND A.SAKUJO_FLG           = '0'" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.SHIHARAI_FLG         = '1'" & vbCrLf
        strSqlWhere = strSqlWhere & "AND '56'                   = B.CODE_NO" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.GI_NO                = B.CODE_VALUE" & vbCrLf
        strSqlWhere = strSqlWhere & "AND '0'                    = B.SAKUJO_FLG" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.GI_NO                = C.GI_NO" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.GI_SHIHARAI_KIKAN_ID = C.GI_SHIHARAI_KIKAN_ID" & vbCrLf
        strSqlWhere = strSqlWhere & "AND '0'                    = C.SAKUJO_FLG" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.GI_NO                = D.GI_NO" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.GI_SHIHARAI_KIKAN_ID = D.GI_SHIHARAI_KIKAN_ID" & vbCrLf
        strSqlWhere = strSqlWhere & "AND A.SHIHARAI_FLG         = D.SHIHARAI_FLG" & vbCrLf
        strSqlWhere = strSqlWhere & "AND C.GI_SHIHARAI_KIKAN_TO = D.KEISAN_TO_YMD" & vbCrLf
        strSqlWhere = strSqlWhere & "AND '0'                    = D.SAKUJO_FLG" & vbCrLf

        If Mid(strSqlWhere, 1, 3) = "AND" Then
            strSqlWhere = "    " & Mid(strSqlWhere, 5)
        End If
    
    End With
    
    strSql = strSql & strSqlWhere
    strSql = strSql & "ORDER BY" & vbCrLf
    strSql = strSql & "    A.GI_NO," & vbCrLf
    strSql = strSql & "    C.GI_SHIHARAI_KIKAN_FROM," & vbCrLf
    strSql = strSql & "    C.GI_SHIHARAI_KIKAN_TO" & vbCrLf
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        Exit Function
    End If
    
    func_GetShiharaiInfo = True
    
    Exit Function

ErrHandler:
    func_GetShiharaiInfo = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetShiharaiInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    MsgBox "Error:func_GetShiharaiInfo" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：ワークシートに支払情報を設定する
'
'引　数　　：TargetSheets    I/O     処理対象ワークシート
'　　　　　　vdata()         I       設定データ
'　　　　　　lngRow          I       設定データ件数
'
'戻り値　　：Boolean
'
'機能説明　：処理対象ワークシートにデータを設定する。
'
'更新履歴　：2008/06/13 SRA吉井   新規作成
'更新履歴　：2008/08/08 SRA Y.Azuma    変更   連結障害対応(No.24)
'
'*************************************************************************
Private Function func_SetShiharaiInfo(ByRef TargetSheets As Object _
                                    , ByVal vData As Variant _
                                    , ByVal lngRow As Long) As Boolean
On Error GoTo ErrHandler

    Dim lngStartRow  As Long        '明細開始行
    Const lngCopyRow As Long = 4    '複写元行
    Dim lngCnt       As Long
    
    func_SetShiharaiInfo = False
    
    '明細行の追加
    With TargetSheets
'------------<Modify Start azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
        lngStartRow = DATA_TOP_ROW '明細開始行取得
'        lngStartRow = lngDataTopRow '明細開始行取得
'------------<Modify End   azuma 2008/08/08 > 連結障害対応(No.24)-----------------------
        
        '明細行の追加
        Call gKsC_fncKsCmnInsRow(Worksheets(MAIN_SHEETNAME), lngStartRow, lngCopyRow, lngRow)

        '支払情報のデータ表示
        For lngCnt = 0 To lngRow - 1
                
            'データの設定
            .Cells(lngStartRow + lngCnt, DTCol.支払ChkLink) = vData(0, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.支払日) = Trim(vData(1, lngCnt))      'この項目は変更比較をするのでTrim付きでｾｯﾄ
            .Cells(lngStartRow + lngCnt, DTCol.支払予定日) = vData(2, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.外部委託先) = vData(3, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.支払期間FROM) = vData(4, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.支払期間TO) = vData(5, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.送付日) = vData(6, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.外部委託支払計算額) = vData(7, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.内消費税) = vData(8, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.支払期間ID) = vData(9, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.支払フラグ) = vData(10, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.更新前支払Chk) = vData(0, lngCnt)
            .Cells(lngStartRow + lngCnt, DTCol.更新前支払日) = Trim(vData(1, lngCnt)) 'この項目は変更比較をするのでTrim付きでｾｯﾄ
            
        Next lngCnt
        
        With .Range("外部委託支払計算額合計")
            Call subCmnSumEX(TargetSheets, .Row, .Column, lngStartRow, DTCol.外部委託支払計算額, lngStartRow + lngRow - 1)
        End With
        With .Range("消費税合計")
            Call subCmnSumEX(TargetSheets, .Row, .Column, lngStartRow, DTCol.内消費税, lngStartRow + lngRow - 1)
        End With
    End With
    
    func_SetShiharaiInfo = True

    Exit Function

ErrHandler:
    func_SetShiharaiInfo = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SetShiharaiInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function
