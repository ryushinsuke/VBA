Attribute VB_Name = "basClickRunBtn1600"
Option Explicit

'*************************************************************************
'プロジェクト名：新契約管理システム・業務帳票作成指示
'オブジェクト名：basClickRunBtn1600
'機能概要　：メイン画面
'更新履歴　：2007/01/17 SRA 金          信託時価一覧表出力追加
'
'*************************************************************************

Const MODULE_NAME = "basClickRunBtn1600"

Private Const cSTART_RAW = 8
Private Const cBaseFile = gc帳票Base6
Private Const cPreFName = gc帳票名6


'*************************************************************************
'関数名　　：信託時価一覧表(帳票作成)
'引　　数　：
'           objTarget        I           対象のシート
'戻り値　　：
'機能説明　：
'更新履歴　：2007/01/17 SRA             新規作成
'
'*************************************************************************
Public Function fncClickRunBtn1600(ByRef objTarget As Object) As Boolean
    
    Const PROCEDURE_NAME As String = "fncClickRunBtn1600"

On Error GoTo ErrSection

    Dim strDay          As String
    Dim strOutFName     As String
    Dim strData()       As String
    
    Call subBeginProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    fncClickRunBtn1600 = False
   
    With objTarget

        ' 作成選択の場合
        If .chkMake.Value = True Then
        
            strDay = Trim(.Range("基準日2").Value)

            ' データ取得
            If fncGetDBData1600(strDay, strData()) = False Then
                GoTo RtnErrSection
            End If
        
            ' 帳票ファイル取得
            If fncGetFile1600(strDay, strOutFName) = False Then
                GoTo RtnErrSection
            End If
        
            ' フォルダをつける。
            strOutFName = .Range("保存フォルダ").Value & "\" & strOutFName
            
            ' ファイルコピー
            If fncCopyBook(cBaseFile, strOutFName) = False Then
                GoTo RtnErrSection
            End If
            
            ' ファイル作成
            If fncMakeBook1600(strOutFName, strDay, strData()) = False Then
                ' ファイル削除
                fncDeleteFile (strOutFName)
                
                GoTo RtnErrSection
            End If
        End If
    
        ' 印刷選択の場合
        If .chkPrint.Value = True Then
            ' ファイル印刷
            If fncPrintBook(cPreFName, .Range("保存フォルダ").Value) = False Then
                GoTo RtnErrSection
            End If
        End If
    
    End With
   
    fncClickRunBtn1600 = True
    Erase strData
    
    Call subEndProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                     *
'*******************************************************
ErrSection:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'   Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
'*******************************************************
'* リターンエラーセクション                              *
'*******************************************************
RtnErrSection:
                
    fncClickRunBtn1600 = False
    Erase strData
    
End Function

'*************************************************************************
'関数名　　：信託時価一覧表(帳票ファイル取得)
'引　　数　：
'           strDay             I           基準日
'           strOutFName        O           出力ファイル名
'戻り値　　：処理結果
'機能説明　：信託時価一覧表を出力するファイルを取得する。
'更新履歴　：2007/01/17 SRA             新規作成
'
'*************************************************************************
Public Function fncGetFile1600(ByVal strDay As String, _
                               ByRef strOutFName As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncGetFile1600"

On Error GoTo ErrSection

    Dim strDate         As String
    Dim strTime         As String

    strOutFName = ""
    
    fncGetFile1600 = False
    
    Call gfunc_GetSvDateTime(strDate, strTime)
       
    ' 出力帳票ファイル
    strOutFName = cPreFName
    strOutFName = strOutFName & "_" & strDate
    strOutFName = strOutFName & "_" & strTime
    strOutFName = strOutFName & "-(" & strDay
    strOutFName = strOutFName & ")"
    strOutFName = strOutFName & ".xls"
    
    fncGetFile1600 = True
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    fncGetFile1600 = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'   Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

'*************************************************************************
'関数名　　：信託時価一覧表(帳票データ取得)
'引　　数　：
'           strDay             I           基準日
'           strData()          O           取得データ
'戻り値　　：処理結果
'機能説明　：信託時価一覧表のデータを取得する。
'更新履歴　：2007/01/17 SRA             新規作成
'            2007/01/19 SRA大辻         資産名称を表示するよう修正
'
'*************************************************************************
Public Function fncGetDBData1600(ByVal strDay As String, ByRef strData() As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncGetDBData1600"

On Error GoTo ErrSection

    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngRowCnt   As Long
    Dim lngColCnt   As Long
    
    fncGetDBData1600 = False
    
'*******************************************************
'* SQL文作成                                           *
'*******************************************************

    strSql = ""
    strSql = strSql & " select "
    strSql = strSql & "   n.sintaku_bank_cd  コード, "
    strSql = strSql & "   k.name_j  信託名, "
    strSql = strSql & "   s.kijun_ymd  基準日, "
    strSql = strSql & "   s.kohza_no  口座ＮＯ, "
    strSql = strSql & "   n.name_rj  口座名, "
    strSql = strSql & "   DECODE(s.shisan_bunrui, '0', '一般', 'A', '調整資産+', "
    strSql = strSql & "    'B', '調整資産-', s.shisan_bunrui)  資産分類, "
    strSql = strSql & "   s.shisan_code  資産コード, "

'------------- < (20070119)Otsuji addStart > ---------------------------
    strSql = strSql & "   RTRIM(a.shisan_name)  資産名称, "
'------------- < (20070119)Otsuji addEnd > -----------------------------
    
    strSql = strSql & "   s.jika   信託時価 "
    strSql = strSql & " from kyk_shisan_betsu_shintaku_jika s, "
    strSql = strSql & "      VW_DT301D  k, "
    strSql = strSql & "      VW_DT001D  n, "

'------------- < (20070119)Otsuji addStart > ---------------------------
    strSql = strSql & "      kyk_shisan a "
'------------- < (20070119)Otsuji addEnd > -----------------------------

    strSql = strSql & " where k.cd_kbn = '15' "
    strSql = strSql & "  and  k.cd_1   = n.sintaku_bank_cd "
    strSql = strSql & "  and  s.kijun_ymd = " & strDay & " "
    strSql = strSql & "  and  n.prtcd = s.kohza_no "
    
'------------- < (20070119)Otsuji addStart > ---------------------------
    strSql = strSql & "  and  a.shisan_code = s.shisan_code "
    strSql = strSql & "  and  a.shisan_bunrui = s.shisan_bunrui "
'------------- < (20070119)Otsuji addEnd > -----------------------------

'------------- < (20070129) Otsuji addStart > ---------------------------
    strSql = strSql & "  and  s.sakujo_flg = '0'"
'------------- < (20070129) Otsuji addEnd > -----------------------------

    strSql = strSql & " order by n.sintaku_bank_cd, s.kohza_no, "
    strSql = strSql & "       s.shisan_bunrui, s.shisan_code "
   
    'データ取得
    Call gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    If lngRow > 0 Then
        ' 動的配列変数に対するメモリ領域の再割り当てを行います
        ReDim strData(lngRow, lngCol)
        
        '取得データを配列に設定
        For lngRowCnt = 0 To lngRow - 1
            For lngColCnt = 0 To UBound(strData, 2) - 1
                strData(lngRowCnt, lngColCnt) = CStr(vData(lngColCnt, lngRowCnt))
            Next
        Next lngRowCnt
        fncGetDBData1600 = True
    Else
        ' 該当データが存在しません。
        Call gfunc_ErrorMsg(gcMsgKbn_3, gcMsgId3001, cPreFName, "")
    End If
    
    Erase vData
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    fncGetDBData1600 = False

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'   Err.Raise lng
'---- エラーログ出力 End  ---------------------------------

    Erase vData
    Erase strData
   
End Function


'*************************************************************************
'関数名　　：信託時価一覧表(帳票作成)
'引　　数　：
'           strOutFName        I           出力ファイル名
'           strDay             I           基準日
'           strData()          I           出力データ
'戻り値　　：処理結果
'機能説明　：信託時価一覧表の作成を取得する。
'更新履歴　：2007/01/17 SRA             新規作成
'            2007/01/19 SRA大辻         資産名称を表示するように修正
'
'*************************************************************************
Public Function fncMakeBook1600(ByVal strOutFName As String, ByVal strDay As String, _
                                ByRef strData() As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncMakeBook1600"

On Error GoTo ErrSection

    Dim strTitleDate   As String
    Dim lngRowCnt      As Long
    Dim lngColCnt      As Long
    Dim strSrcRange    As String
    Dim strDesRange    As String
    Dim lngRow         As Long
    
    Call subBeginProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    ' ファイルOpen
    Workbooks.Open Filename:=strOutFName
    
    lngRow = UBound(strData, 1)
    fncMakeBook1600 = False
    
    strSrcRange = "A" & cSTART_RAW & ":Z" & cSTART_RAW
    strDesRange = "A" & (cSTART_RAW + 1) & ":Z" & (cSTART_RAW + lngRow - 1)
    
    strTitleDate = gfunc_YmdFormat(strDay)
    
    With Workbooks(Workbooks.Count).Worksheets(1)
        
        ' タイトル日付
        .Range("タイトル").Value = strTitleDate
      
        If lngRow > 1 Then
            .Range(strSrcRange).Copy Destination:=.Range(strDesRange)
        End If

        ' 一覧出力
        For lngRowCnt = 0 To lngRow - 1
            .Cells(cSTART_RAW + lngRowCnt, 1).Value = strData(lngRowCnt, 0)
            .Cells(cSTART_RAW + lngRowCnt, 2).Value = strData(lngRowCnt, 1)
'            .Cells(cSTART_RAW + lngRowCnt, 3).Value = strData(lngRowCnt, 2)
            If Len(strData(lngRowCnt, 3)) = 8 Then
                .Cells(cSTART_RAW + lngRowCnt, 3).Value = gfunc_YmdFormat(strData(lngRowCnt, 2))
            Else
                .Cells(cSTART_RAW + lngRowCnt, 3).Value = strData(lngRowCnt, 2)
            End If
            
            .Cells(cSTART_RAW + lngRowCnt, 4).Value = strData(lngRowCnt, 3)
            .Cells(cSTART_RAW + lngRowCnt, 5).Value = strData(lngRowCnt, 4)
            .Cells(cSTART_RAW + lngRowCnt, 6).Value = strData(lngRowCnt, 5)
            .Cells(cSTART_RAW + lngRowCnt, 7).Value = strData(lngRowCnt, 6)
            .Cells(cSTART_RAW + lngRowCnt, 8).Value = strData(lngRowCnt, 7)
            
'------------- < (20070119)Otsuji addStart > -----------------
            .Cells(cSTART_RAW + lngRowCnt, 9).Value = strData(lngRowCnt, 8)
'------------- < (20070119)Otsuji addEnd > -------------------
            
            
        Next lngRowCnt
         
        ' カソル位置を異動する。
        .Activate     ' シートが２個以上の場合要る。
        .Range("A1").Activate
        
    End With
    
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    Workbooks(Workbooks.Count).Close SaveChanges:=True
    fncMakeBook1600 = True
    
    Call subEndProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    Workbooks(Workbooks.Count).Close SaveChanges:=True
    fncMakeBook1600 = False

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'   Err.Raise lng
'---- エラーログ出力 End  ---------------------------------
   
End Function




