Attribute VB_Name = "basClickRunBtn5600"
Option Explicit

'*************************************************************************
'プロジェクト名：顧問料計算システム・業務帳票作成指示
'オブジェクト名：basClickRunBtn5600
'機能概要　：RAFI基礎データ作成
'更新履歴　：2010/12/15 SRA t.mizutani  新規作成
'
'*************************************************************************
Const MODULE_NAME = "basClickRunBtn5600"

Private Const cBaseFile = gc帳票Base56
Private Const cPreFName = gc帳票名56

'*************************************************************************
'関数名　　：RAFI基礎データ(帳票作成)
'引数　    ：objTarget       I           対象のシート
'戻り値　　：処理結果
'機能説明　：メイン処理
'更新履歴　：2010/12/15 SRA t.mizutani  新規作成
'
'*************************************************************************
Public Function fncClickRunBtn5600(ByRef objTarget As Object) As Boolean
    
    Const PROCEDURE_NAME As String = "fncClickRunBtn5600"

On Error GoTo ErrSection

    Dim strKikanFrom    As String
    Dim strKikanTo      As String
    Dim strOutFName     As String
    Dim vKekka_R()      As Variant
    Dim vKekka_T()      As Variant
    Dim lngRow          As Long
    Dim lngRowCnt       As Long
   
    Call subBeginProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    fncClickRunBtn5600 = False
   
    With objTarget
        
        'マウスポインターをWAITにする
        ThisWorkbook.Application.Cursor = xlWait

        ' 作成選択の場合
        If .chkMake.Value = True Then
        
            strKikanFrom = Trim(.Range("基準年月5600From").Value)
            strKikanTo = Trim(.Range("基準年月5600To").Value)
            
            ' データ取得
            If fncGetDBData5600(strKikanFrom & "01", strKikanTo & "01", vKekka_R, vKekka_T) = False Then
                GoTo RtnErrSection
            End If
        
            ' 帳票ファイル取得
            If fncGetFile5600(strKikanFrom, strKikanTo, strOutFName) = False Then
                GoTo RtnErrSection
            End If
        
            ' フォルダパスをつける。
            strOutFName = .Range("保存フォルダ").Value & "\" & strOutFName
            
            ' ファイルコピー
            If fncCopyBook(cBaseFile, strOutFName) = False Then
                GoTo RtnErrSection
            End If
            
            ' 帳票作成
            If fncMakeBook5600(strKikanFrom, strKikanTo, _
                                 strOutFName, vKekka_R, vKekka_T) = False Then
                ' ファイル削除
                fncDeleteFile (strOutFName)

                GoTo RtnErrSection
            End If
            
        End If
    
        ' 印刷選択の場合
        If .chkPrint.Value = True Then
            ' ファイル印刷
            If fncPrintBook(cPreFName, .Range("保存フォルダ").Value) = False Then
                GoTo RtnErrSection
            End If
        End If
        
        'マウスポインターを戻す
        ThisWorkbook.Application.Cursor = xlDefault
        
    End With
    
    fncClickRunBtn5600 = True
    Erase vKekka_R
    Erase vKekka_T
    
    Call subEndProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                    *
'*******************************************************
ErrSection:

    'マウスポインターを戻す
    ThisWorkbook.Application.Cursor = xlDefault
    
    Erase vKekka_R
    Erase vKekka_T
    
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    
'*******************************************************
'* リターンエラーセクション                            *
'*******************************************************
RtnErrSection:

    'マウスポインターを戻す
    ThisWorkbook.Application.Cursor = xlDefault
    
    Erase vKekka_R
    Erase vKekka_T
    
    fncClickRunBtn5600 = False
    
End Function

'*************************************************************************
'関数名　　：RAFI基礎データ(帳票ファイル名取得)
'引　　数　：
'           strKikanFrom       I        基準年月From
'           strKikanTo         I        基準年月To
'           strOutFName        O        出力ファイル名
'戻り値　　：処理結果
'機能説明　：RAFI基礎データを出力するファイル名を取得する。
'更新履歴　：2010/12/15 SRA t.mizutani  新規作成
'
'*************************************************************************
Private Function fncGetFile5600(ByVal strKikanFrom As String, _
                               ByVal strKikanTo As String, _
                               ByRef strOutFName As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncGetFile5600"

On Error GoTo ErrSection

    Dim strDate         As String
    Dim strTime         As String

    strOutFName = ""
    
    fncGetFile5600 = False
    
    Call gfunc_GetSvDateTime(strDate, strTime)
       
    ' 出力帳票ファイル
    strOutFName = cPreFName
    strOutFName = strOutFName & "_" & strDate
    strOutFName = strOutFName & "_" & strTime
    strOutFName = strOutFName & "-(" & strKikanFrom
    
    If strKikanFrom <> strKikanTo Then
        strOutFName = strOutFName & "-" & strKikanTo
    End If
    
    strOutFName = strOutFName & ")"
    strOutFName = strOutFName & ".xls"
    
    fncGetFile5600 = True
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　 *
'*******************************************************
ErrSection:

    fncGetFile5600 = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    
End Function

'*************************************************************************
'関数名　　：RAFI基礎データ(帳票データ取得)
'引　　数　：
'           strKikanFrom      I         基準年月From
'           strKikanTo        I         基準年月To
'           vKekkaR()         O         取得データ(RAFI)
'           vKekkaT()         O         取得データ(TotalNAV)
'戻り値　　：処理結果
'機能説明　：RAFI基礎データを取得する。
'更新履歴　：2010/12/15 SRA t.mizutani  新規作成
'
'*************************************************************************
Private Function fncGetDBData5600(ByVal strKikanFrom As String, _
                                 ByVal strKikanTo As String, _
                                 ByRef vKekkaR() As Variant, _
                                 ByRef vKekkaT() As Variant) As Boolean
    
    Const PROCEDURE_NAME As String = "fncGetDBData5600"

On Error GoTo ErrSection

    Dim strSql        As String
    Dim strKijyunbi() As String
    Dim strMeigara()  As String
    Dim vData()       As Variant
    Dim lngCol        As Long
    Dim lngRow        As Long
    Dim lngCnt        As Long
    Dim lngTsuki      As Long
    Dim bFlgR         As Boolean
    Dim bFlgT         As Boolean
    Dim blnRtn        As Boolean
    
    fncGetDBData5600 = False
    blnRtn = False
    
'*******************************************************
'* SQL文作成・実行(期間内月数・基準日取得)             *
'*******************************************************
    lngRow = 0
    lngCol = 0
    lngCnt = 0
    lngTsuki = 0
    
    '月数を取得
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     MONTHS_BETWEEN(ADD_MONTHS(TO_DATE(" & strKikanTo & "), 1), TO_DATE(" & strKikanFrom & "))"
    strSql = strSql & " FROM DUAL"
    
    'データ取得
    blnRtn = gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    If blnRtn = False Then
        Erase vData
        Exit Function
    End If
        
    If lngRow > 0 Then
        lngTsuki = CStr(vData(0, 0))
    End If
    
    Erase vData
    
    ReDim strKijyunbi(lngTsuki)
    
    '基準日(月末日)を取得
    For lngCnt = 0 To UBound(strKijyunbi) - 1
    
        strSql = ""
        strSql = strSql & " SELECT"
        strSql = strSql & "     TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(" & strKikanFrom & "), " & lngCnt & ")), 'YYYYMMDD')"
        strSql = strSql & " FROM DUAL"
    
        'データ取得
        blnRtn = gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
        
        If blnRtn = False Then
            Erase vData
            Exit Function
        End If
    
        If lngRow > 0 Then
            strKijyunbi(lngCnt) = CStr(vData(0, 0))
        End If
    
    Next lngCnt

'*******************************************************
'* SQL文作成・実行(PX銘柄コード取得)                   *
'*******************************************************
    lngCnt = 0
        
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "    DISTINCT ISSCD"
    strSql = strSql & " FROM KYK_GI_KEISAN_KIKAN"
    strSql = strSql & " WHERE ISSCD LIKE 'Z.%'"
    strSql = strSql & "   AND ("
    
    For lngCnt = 0 To UBound(strKijyunbi) - 1
        
        If lngCnt > 0 Then
            strSql = strSql & "   OR"
        End If
        
        strSql = strSql & "   (GI_KEISAN_KIKAN_FROM <= " & strKijyunbi(lngCnt)
        strSql = strSql & "   AND GI_KEISAN_KIKAN_TO >= " & strKijyunbi(lngCnt) & ")"
        
    Next lngCnt
    
    strSql = strSql & " )  AND SAKUJO_FLG = '0'"
    strSql = strSql & " ORDER BY ISSCD"
    
    'データ取得
    blnRtn = gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    If blnRtn = False Then
        Erase vData
        Exit Function
    End If
    
    If lngRow > 0 Then
        '結果格納配列の作成
        ReDim strMeigara(lngRow)
        
        For lngCnt = 0 To lngRow - 1
            '結果格納配列に格納
            strMeigara(lngCnt) = CStr(vData(0, lngCnt))
        Next lngCnt
    
    Else
        ' 該当データが存在しません。
        Call gfunc_ErrorMsg(gcMsgKbn_3, gcMsgId3001, cPreFName, "")
        Erase vData
        Exit Function
        
    End If
    
'*******************************************************
'* SQL文作成・実行(RAFI残高取得)                       *
'*******************************************************
    lngCnt = 0
    bFlgR = False
    Erase vData
    
    strSql = ""
    strSql = strSql & " SELECT ITAKUCD"
    strSql = strSql & "       ,KIJYUN_DATE"
    strSql = strSql & "       ,ISSCD"
    strSql = strSql & "       ,SURYO"
    strSql = strSql & "       ,LC_JIKAZAN"
    strSql = strSql & " FROM VW_DT500R01"
    strSql = strSql & " WHERE KIJYUN_DATE IN ("
    
    For lngCnt = 0 To UBound(strKijyunbi) - 1
    
        If lngCnt > 0 Then
            strSql = strSql & ","
        End If
        
        strSql = strSql & strKijyunbi(lngCnt)
        
    Next lngCnt
    
    strSql = strSql & " )"
    strSql = strSql & "   AND MKTCD = 'JPY'"
    strSql = strSql & "   AND YAKU_UKE_KBN = '1'"
    strSql = strSql & "   AND ISSCD IN ("
    
    lngCnt = 0
    
    For lngCnt = 0 To UBound(strMeigara) - 1
        
        If lngCnt > 0 Then
            strSql = strSql & ","
        End If
        
        strSql = strSql & "'" & strMeigara(lngCnt) & "'"
        
    Next lngCnt
    
    strSql = strSql & " )"
    strSql = strSql & " ORDER BY ITAKUCD, KIJYUN_DATE, ISSCD"
        
    'データ取得
    blnRtn = gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    If blnRtn = False Then
        Erase vData
        Exit Function
    End If
    
    If lngRow > 0 Then
        
        '結果格納配列の作成
        ReDim vKekkaR(lngRow, 4)

        For lngCnt = 0 To lngRow - 1
            '結果格納配列に格納
            vKekkaR(lngCnt, 0) = vData(0, lngCnt) '口座番号
            vKekkaR(lngCnt, 1) = vData(1, lngCnt) '基準日
            vKekkaR(lngCnt, 2) = vData(2, lngCnt) '銘柄コード
            vKekkaR(lngCnt, 3) = vData(3, lngCnt) '数量
            vKekkaR(lngCnt, 4) = vData(4, lngCnt) 'LC時価残高
            
        Next lngCnt
        
        bFlgR = True
        
    End If
    
'*******************************************************
'* SQL文作成・実行(TotalNAV取得)                       *
'*******************************************************
    lngCnt = 0
    bFlgT = False
    Erase vData
    
    strSql = ""
    strSql = strSql & " SELECT KIJYUN_YMD"
    strSql = strSql & "       ,PRTCD"
    strSql = strSql & "       ,SETTEI_DATE"
    strSql = strSql & "       ,CALLOFF_DATE"
    strSql = strSql & "       ,BC_JIKA_TOTAL_KOKUNAI"
    strSql = strSql & " FROM KYK_VW_KEIEI_CHOUHYOU"
    strSql = strSql & " WHERE KIJYUN_YMD IN ("
    
    For lngCnt = 0 To UBound(strKijyunbi) - 1
    
        If lngCnt > 0 Then
            strSql = strSql & ","
        End If
        
        strSql = strSql & "'" & strKijyunbi(lngCnt) & "'"
    Next lngCnt
    
    strSql = strSql & " )"
    strSql = strSql & "   AND MNGCD = 'JPY'"
    strSql = strSql & "   AND SETTEI_KBN = '1'"
    strSql = strSql & " ORDER BY PRTCD, KIJYUN_YMD"

    'データ取得
    blnRtn = gclsDB.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    If blnRtn = False Then
        Erase vData
        Exit Function
    End If
    
    If lngRow > 0 Then
        
        '結果格納配列の作成
        ReDim vKekkaT(lngRow, 4)

        For lngCnt = 0 To lngRow - 1
            '結果格納配列に格納
            vKekkaT(lngCnt, 0) = vData(0, lngCnt) '基準日
            vKekkaT(lngCnt, 1) = vData(1, lngCnt) '口座番号
            vKekkaT(lngCnt, 2) = vData(2, lngCnt) '開設日
            vKekkaT(lngCnt, 3) = vData(3, lngCnt) '閉鎖日
            vKekkaT(lngCnt, 4) = vData(4, lngCnt) '口座トータルNAV
            
        Next lngCnt
        
        bFlgT = True
        
    End If
    
    If bFlgR = False Or bFlgT = False Then
        ' 該当データが存在しません。
        Call gfunc_ErrorMsg(gcMsgKbn_3, gcMsgId3001, cPreFName, "")
        Erase vData
        Exit Function
        
    End If
    
    Erase vData
    fncGetDBData5600 = True
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　 *
'*******************************************************
ErrSection:

    fncGetDBData5600 = False

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'---- エラーログ出力 End  ---------------------------------

    Erase vData
   
End Function

'*************************************************************************
'関数名　　：RAFI基礎データ(帳票作成)
'引　　数　：
'           strKikanFrom      I         基準年月From
'           strKikanTo        I         基準年月To
'           strOutFName       I         出力ファイル名
'           vKekkaR()         I         出力データ(RAFI)
'           vKekkaT()         I         出力データ(TotalNAV)
'戻り値　　：処理結果
'機能説明　：シートの作成を行う。
'更新履歴　：2010/12/15 SRA t.mizutani  新規作成
'
'*************************************************************************
Private Function fncMakeBook5600(ByVal strKikanFrom As String, _
                                  ByVal strKikanTo As String, _
                                  ByVal strOutFName As String, _
                                  ByRef vKekkaR() As Variant, _
                                  ByRef vKekkaT() As Variant) As Boolean
    
    Const PROCEDURE_NAME As String = "fncMakeBook5600"

On Error GoTo ErrSection

    Dim lngRowCnt           As Long
    Dim strDesRange         As String
    Dim lngStartRow         As Long
    
    Call subBeginProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    lngRowCnt = 0
    strDesRange = ""
    
    fncMakeBook5600 = False
    
    'ファイルOpen
    Workbooks.Open Filename:=strOutFName
    
    Application.DisplayAlerts = False
    
    lngRowCnt = UBound(vKekkaR)
    
    'RAFI残高
    With Workbooks(Workbooks.Count).Worksheets("RAFI残高")
        .Activate
        
        lngStartRow = 4
        strDesRange = Cells(lngStartRow, 1).Address & ":" & Cells(lngStartRow + lngRowCnt - 1, 5).Address
        
        '行を追加
        .Rows(lngStartRow & ":" & lngStartRow).Copy
        .Rows(lngStartRow & ":" & lngStartRow + lngRowCnt - 1).Insert Shift:=xlDown
        
        'タイトル
        .Range("A1").Value = Format(strKikanFrom, "@@@@/@@")
        
        If strKikanFrom <> strKikanTo Then
            .Range("A1").Value = .Range("A1").Value & "-" & Format(strKikanTo, "@@@@/@@")
        End If
        
        'シートにデータをセット
        .Range(strDesRange) = vKekkaR
         
        '不要な行を削除
        .Range(lngStartRow + lngRowCnt & ":" & lngStartRow + lngRowCnt).Delete
        
        'カーソル位置を移動する。
        .Range("A1").Activate
    End With
    
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    lngRowCnt = UBound(vKekkaT)
    
    '口座Total
    With Workbooks(Workbooks.Count).Worksheets("口座トータルNAV")
        .Activate
        
        lngStartRow = 4
        strDesRange = Cells(lngStartRow, 1).Address & ":" & Cells(lngStartRow + lngRowCnt - 1, 5).Address
        
        '行を追加
        .Rows(lngStartRow & ":" & lngStartRow).Copy
        .Rows(lngStartRow & ":" & lngStartRow + lngRowCnt - 1).Insert Shift:=xlDown
        
        'タイトル
        .Range("A1").Value = Format(strKikanFrom, "@@@@/@@")
        
        If strKikanFrom <> strKikanTo Then
            .Range("A1").Value = .Range("A1").Value & "-" & Format(strKikanTo, "@@@@/@@")
        End If
        
        'シートにデータをセット
        .Range(strDesRange) = vKekkaT
         
        '不要な行を削除
        .Range(lngStartRow + lngRowCnt & ":" & lngStartRow + lngRowCnt).Delete
        
        'カーソル位置を移動する。
        .Range("A1").Activate
    End With
    
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    Workbooks(Workbooks.Count).Worksheets("RAFI残高").Activate
    Workbooks(Workbooks.Count).Close SaveChanges:=True
    
    Application.DisplayAlerts = True
    
    fncMakeBook5600 = True
    
    Call subEndProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　 *
'*******************************************************
ErrSection:

    Application.DisplayAlerts = True

    Workbooks(Workbooks.Count).Close SaveChanges:=True
    fncMakeBook5600 = False

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'---- エラーログ出力 End  ---------------------------------
   
End Function











