VERSION 5.00
Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} frm_ParamSet 
   Caption         =   "パラメータ設定"
   ClientHeight    =   3585
   ClientLeft      =   45
   ClientTop       =   435
   ClientWidth     =   6945
   OleObjectBlob   =   "frm_ParamSet.frx":0000
   StartUpPosition =   1  'オーナー フォームの中央
End
Attribute VB_Name = "frm_ParamSet"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
'=========================================================================
'プロジェクト　　　：国内顧問料ユーザアカウント管理
'プログラム名　　　：パラメータ設定画面
'プログラムＩＤ　　：frm_ParamSet
'機能概要　　　　　：パラメータの設定変更登録
'
'日付　　　　　　　作成者　　　　　　　　　　修正内容
'-------------------------------------------------------------------------
'2008/07/16       K.Furuya<SRA>　　　　　　新規作成
'
'=========================================================================
Option Explicit

'パラメータ値格納変数_変更前
Dim strPswdKigen_OLD                As String   'パスワード有効期限
Dim strKigenFlg_OLD                 As String   'パスワード期限の有無フラグ
Dim strTutiNisu_OLD                 As String   'パスワード有効期限の通知日数
Dim strLockKaisu_OLD                As String   'ユーザロックの間違い規定回数
Dim strLockFlg_OLD                  As String   'ロックアウトなしフラグ
Dim strRireki_OLD                   As String   'パスワードの履歴
'パラメータ値格納変数_変更後
Dim strPswdKigen_NEW                As String   'パスワード有効期限
Dim strKigenFlg_NEW                 As String   'パスワード期限の有無フラグ
Dim strTutiNisu_NEW                 As String   'パスワード有効期限の通知日数
Dim strLockKaisu_NEW                As String   'ユーザロックの間違い規定回数
Dim strLockFlg_NEW                  As String   'ロックアウトなしフラグ
Dim strRireki_NEW                   As String   'パスワードの履歴
Dim bolOpenFlg                      As Boolean

'DB接続用変数
Dim Conn           As New ADODB.Connection        '# Connection
Dim RS             As New ADODB.Recordset         '# Recordset
Dim strDBConnect   As String

'パラメータの登録時のログメッセージ
Const CON_LOMSG_PARA                As String = "パラメータ設定登録"
'色
Const CON_BKCOLOR_ROOK = &H8000000F         '非アクティブ時のバックカラー
Const CON_BKCOLOR_DEFAULT = &H80000005      'アクティブ時のバックカラー
'規定項目値定数
Const CON_KIGEN_NISU                As String = "90"  'パスワード有効期限
Const CON_TUTI_NISU                 As String = "14"  '通知日数
Const CON_PWDMISU_CNT               As String = "3"   'パスワードミス回数
Const CON_PWD_RIREKI                As String = "3"   'パスワード履歴
'固定値
Const CON_PGM_ID                As String = "国内顧問料計算システム　アカウント管理者画面"    'プログラムID
Const CON_TANTO_ID              As String = "管理者ユーザ"   'テーブル登録担当者名

Private Sub chk_LockOut_AfterUpdate()
    'ロックアウトなしがチェックされた場合
    If chk_LockOut.Value = True Then
        'ユーザロックアウトクリア
        txt_Kaisu.Text = ""
        'パックカラー非アクティブ
        txt_Kaisu.BackColor = CON_BKCOLOR_ROOK
        'フレームを非アクティブにより入力不可にする
        Frame3.Enabled = False
    Else
    'ロックアウトなしがチェックを外された場合
        'パックカラーアクティブ
        txt_Kaisu.BackColor = CON_BKCOLOR_DEFAULT
        'フレームをアクティブにより入力不可にする
        Frame3.Enabled = True
    End If

End Sub

Private Sub chk_Pwd_AfterUpdate()
    'パスワードの有効期限の有無がチェックされた場合
    If chk_Pwd.Value = True Then
        'パスワード期限と通知日数クリア
        txt_Pwd.Text = ""
        txt_Kigen.Text = ""
        'パックカラー非アクティブ
        txt_Pwd.BackColor = CON_BKCOLOR_ROOK
        txt_Kigen.BackColor = CON_BKCOLOR_ROOK
        'フレームを非アクティブにより入力不可にする
        Frame1.Enabled = False
        Frame2.Enabled = False
    Else
    'パスワードの有効期限の有無がチェックを外された場合
        'パックカラー非アクティブ
        txt_Pwd.BackColor = CON_BKCOLOR_DEFAULT
        txt_Kigen.BackColor = CON_BKCOLOR_DEFAULT
        'フレームを非アクティブにより入力不可にする
        Frame1.Enabled = True
        Frame2.Enabled = True
    End If

End Sub

Private Sub cmd_Cancel_Click()
    Unload Me
    
End Sub

Private Sub cmd_OK_Click()
    Dim Ret             As Variant
    
    Const CON_TBL_NM    As String = "KYK_USER_KANRI_PARAM_ZOKUSEI" 'パラメータテーブル名
    
    'マウスカーソルを砂時計にする
    MousePointer = fmMousePointerHourGlass
    '自ボタンを非アクティブにする
    cmd_OK.Enabled = False

    'パラメータ設定値格納変数初期化
    strPswdKigen_NEW = ""
    strKigenFlg_NEW = ""
    strTutiNisu_NEW = ""
    strLockKaisu_NEW = ""
    strLockFlg_NEW = ""
    strRireki_NEW = ""
    
    '===== 項目値を変数に格納する ======================
    'パスワード有効期限を変数に格納する
    strPswdKigen_NEW = Trim(txt_Pwd.Text)
    
    'パスワード有効期限の有無を変数に格納する
    If chk_Pwd.Value = True Then
        '有効期限なしの場合
         strKigenFlg_NEW = "0"
    Else
        '有効期限ありの場合
        strKigenFlg_NEW = "1"
    End If
    
    '通知日数を変数に格納する
    strTutiNisu_NEW = Trim(txt_Kigen.Text)
    
    'ユーザのロックアウト回数を変数に格納する
    strLockKaisu_NEW = Trim(txt_Kaisu.Text)
    
    'ユーザのロックアウトの有無を変数に格納する
    If chk_LockOut.Value = True Then
        'ロックアウトなしの場合
        strLockFlg_NEW = "0"
    Else
        'ロックアウトありの場合
        strLockFlg_NEW = "1"
    End If
    
    'パスワード履歴を変数に格納する
    strRireki_NEW = Trim(txt_Generation.Text)
    '===== 項目値を変数に格納する ======================
    
    '項目チェックを行う
    If fncChckParam(strPswdKigen_NEW, strKigenFlg_NEW, strTutiNisu_NEW, _
                        strLockKaisu_NEW, strLockFlg_NEW, strRireki_NEW) = False Then
        '自ボタンをアクティブにする
        cmd_OK.Enabled = True
        'マウスカーソルを通常にする
        MousePointer = fmMousePointerDefault
        Exit Sub
    End If
            
    'パラメータ登録実行メッセージ表示
    Ret = MsgBox(gfncGetMsgText(413), gfncGetMsgParam(2, 2, 2), gfncGetMsgTitle(13))
    'キャンセルが押下されたら登録を中止する
    If Ret = vbCancel Then
        '自ボタンをアクティブにする
        cmd_OK.Enabled = True
        'マウスカーソルを通常にする
        MousePointer = fmMousePointerDefault
        Exit Sub
    End If
    
    'DB接続文字列作成---------------------------------------------------------------------------------------------
    Ret = DBAccessString(strDBConnect)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
        'コマンドボタンをクリック可にする
        cmd_OK.Enabled = True
        'フォーカスを自ボタンに戻す
        cmd_OK.SetFocus
        'マウスカーソルを通常にする
        MousePointer = fmMousePointerDefault
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'DB接続-------------------------------------------------------------------------------------------------------
    Ret = DBOpen(strDBConnect, Conn)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
        'コマンドボタンをクリック可にする
        cmd_OK.Enabled = True
        'フォーカスを自ボタンに戻す
        cmd_OK.SetFocus
        'マウスカーソルを通常にする
        MousePointer = fmMousePointerDefault
        Exit Sub
    End If
            
    'トランザクションを開始する
    If Not gblnDbBeginTrans(Conn, RS) Then
        GoTo ErrorExit
    End If
    
    'パラメータテーブルのアップデート処理
    If fncParamTorokuAdd(strPswdKigen_NEW, strKigenFlg_NEW, strTutiNisu_NEW, _
                        strLockKaisu_NEW, strLockFlg_NEW, strRireki_NEW) = False Then
        MsgBox gfncGetMsgText(415), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
        GoTo ErrorExit
    End If
    
    '成功の場合はコミットする
    If Not gblnDbCommitTrans(Conn, RS) Then
        GoTo ErrorExit
    End If
    
    '登録終了メッセージを表示する
    MsgBox gfncGetMsgText(414), gfncGetMsgParam(1, 4), gfncGetMsgTitle(13)
    
    'ログ出力関数を呼びだす
    If gfncLogOutPut(CON_TANTO_ID, CON_LOMSG_PARA, CON_PGM_ID, Conn, RS) = False Then
        MsgBox gfncGetMsgText(105), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
        GoTo ErrorExit
    End If
    
            
    'DBクローズ処理
    Ret = DBClose(Conn, RS)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
    End If
    
    '自ボタンをアクティブにする
    cmd_OK.Enabled = True
    'マウスカーソルを通常にする
    MousePointer = fmMousePointerDefault
            
            
    Exit Sub
ErrorExit:
    'DBクローズ処理
    Ret = DBClose(Conn, RS)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
    End If
    
    '自ボタンをアクティブにする
    cmd_OK.Enabled = True
    'マウスカーソルを通常にする
    MousePointer = fmMousePointerDefault
    
    
End Sub


Private Sub UserForm_Activate()
    'パラメータが取得できない場合は画面終了
    If bolOpenFlg = False Then
        MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
        Unload Me
    End If
End Sub

Private Sub UserForm_Initialize()
    
    'テキストボックスのIMEモードを半角入力専用に設定する
    txt_Pwd.IMEMode = fmIMEModeDisable
    txt_Kigen.IMEMode = fmIMEModeDisable
    txt_Kaisu.IMEMode = fmIMEModeDisable
    txt_Generation.IMEMode = fmIMEModeDisable
    
    bolOpenFlg = True
    
    'パラメータテーブルを読込む
    If fncGetParamAll() = False Then
        GoTo ErrorExit
    End If
    
    '画面にセットする
    Call subParamSet
    
    Exit Sub
ErrorExit:
    bolOpenFlg = False


End Sub



'=====================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   fncGetParamAll
'機能            :   全パラメータを取得する
'
'
'戻り値          :   fncGetParamAll = -1(True):正常終了
'　　　          :   fncGetParamAll =  0(False):異常終了
'
'日付         担当               内容
'------------ ----------------- --------------------------------------
'2008/07/16   K.Furuya<SRA>     新規作成
'=====================================================================
Private Function fncGetParamAll() As Integer
    Dim sSql            As String
    Dim Ret             As Integer
    Dim intIdx          As Integer
    Const CON_PARAM_CNT As Integer = 7
    
    fncGetParamAll = False
    
    
    'パラメータ変数を初期化する
    strPswdKigen_OLD = ""
    strKigenFlg_OLD = ""
    strTutiNisu_OLD = ""
    strLockKaisu_OLD = ""
    strLockFlg_OLD = ""
    strRireki_OLD = ""
    
    
    'DB接続文字列作成---------------------------------------------------------------------------------------------
    Ret = DBAccessString(strDBConnect)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
        Exit Function
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'DB接続-------------------------------------------------------------------------------------------------------
    Ret = DBOpen(strDBConnect, Conn)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
        Exit Function
    End If

    
    'パラメータの数ループ
    For intIdx = 0 To CON_PARAM_CNT - 1
        Select Case intIdx
            Case 0
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO010)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strPswdKigen_OLD = IIf(IsNull(RS.Fields("NUM_PARAM")), "", _
                                                RS.Fields("NUM_PARAM"))
                'レコードセットを閉じる
                RS.Close
            Case 1
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO020)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strKigenFlg_OLD = IIf(IsNull(RS.Fields("STR_PARAM")), "", _
                                                RS.Fields("STR_PARAM"))
                'レコードセットを閉じる
                RS.Close
            Case 2
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO030)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strTutiNisu_OLD = IIf(IsNull(RS.Fields("NUM_PARAM")), "", _
                                                RS.Fields("NUM_PARAM"))
                'レコードセットを閉じる
                RS.Close
            Case 3
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO040)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strLockKaisu_OLD = IIf(IsNull(RS.Fields("NUM_PARAM")), "", _
                                                RS.Fields("NUM_PARAM"))
                'レコードセットを閉じる
                RS.Close
            Case 4
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO050)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strLockFlg_OLD = IIf(IsNull(RS.Fields("STR_PARAM")), "", _
                                            RS.Fields("STR_PARAM"))
                'レコードセットを閉じる
                RS.Close
            Case 5
                'コード"060"はなし
            Case 6
                'パラメータを取得する
                sSql = gstrGetParam_ForSelect(CON_PARA_CODE_NO070)
                'レコードセットの作成
                If (gfncDyCreate(sSql, Conn, RS) = False) Then
                    GoTo ErrorExit
                End If
                
                'レコード件数取得してゼロ件の場合は処理終了
                If RS.EOF = True Then
'                    MsgBox gfncGetMsgText(401), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    GoTo ErrorExit
                End If
                'パラメータを変数に格納する
                strRireki_OLD = IIf(IsNull(RS.Fields("NUM_PARAM")), "", _
                                            RS.Fields("NUM_PARAM"))

                'レコードセットを閉じる
                RS.Close
        End Select
    Next intIdx
    
    
    
    'DBクローズ処理
    Ret = DBClose(Conn, RS)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
    End If
    
    fncGetParamAll = True
    
    Exit Function
ErrorExit:
    'DBクローズ処理
    Ret = DBClose(Conn, RS)
    If Ret = False Then
        Set Conn = Nothing
        Set RS = Nothing
    End If

End Function

'=====================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   subParamSet
'機能            :   全パラメータを画面にセットする
'
'戻り値          :  なし
'
'日付         担当               内容
'------------ ----------------- --------------------------------------
'2008/07/16   K.Furuya<SRA>     新規作成
'=====================================================================
Private Sub subParamSet()
        
    'パスワード有効期限の有無がなしの場合
    If Trim(strKigenFlg_OLD) = "0" Then
        '有効期限の有無チェックをＯＮにする
        chk_Pwd.Value = True
        'パスワード期限と通知日数クリア
        txt_Pwd.Text = ""
        txt_Kigen.Text = ""
        'パックカラー非アクティブ
        txt_Pwd.BackColor = CON_BKCOLOR_ROOK
        txt_Kigen.BackColor = CON_BKCOLOR_ROOK
        'フレームを非アクティブにより入力不可にする
        Frame1.Enabled = False
        Frame2.Enabled = False
    ElseIf Trim(strKigenFlg_OLD) = "1" Then
    'パスワード有効期限の有無がありの場合
        '有効期限の有無チェックをＯＦＦにする
        chk_Pwd.Value = False
        '有効期限をセットする
        txt_Pwd.Text = Trim(strPswdKigen_OLD)
        '通知日数をセットする
        txt_Kigen.Text = Trim(strTutiNisu_OLD)
    End If
    
    'ユーザロックなしの場合
    If Trim(strLockFlg_OLD) = "0" Then
        'ユーザロックなしをＯＮにする
        chk_LockOut.Value = True
        'ユーザロックアウトクリア
        txt_Kaisu.Text = ""
        'パックカラー非アクティブ
        txt_Kaisu.BackColor = CON_BKCOLOR_ROOK
        'フレームを非アクティブにより入力不可にする
        Frame3.Enabled = False
    ElseIf Trim(strLockFlg_OLD) = "1" Then
        'ユーザロックなしをＯＦＦにする
        chk_LockOut.Value = False
        'ロックアウト回数をセットする
        txt_Kaisu.Text = Trim(strLockKaisu_OLD)
    End If
    
    'パスワード履歴をセットする
    txt_Generation.Text = Trim(strRireki_OLD)
    
    
End Sub

'=====================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   fncChckParam
'機能            :   パラメータの設定値をチェックする
'
'
'戻り値          :   fncChckParam = -1(True):正常終了
'　　　          :   fncChckParam =  0(False):異常終了
'
'日付         担当               内容
'------------ ----------------- --------------------------------------
'2008/07/16   K.Furuya<SRA>     新規作成
'=====================================================================
Private Function fncChckParam(ByVal strPswdKigen As String, _
                              ByVal strKigenFlg As String, _
                              ByVal strTutiNisu As String, _
                              ByVal strLockKaisu As String, _
                              ByVal strLockFlg As String, _
                              ByVal strRireki As String) As Integer
    Dim Ret         As Integer
    Dim ColIdx          As Integer
    Dim GetTxt          As String
    
    fncChckParam = False
    
    'パスワード有効期限の有無がありの場合は有効期限と通知日数をチェックする
    If strKigenFlg = "1" Then
        'パスワード有効期限の桁数チェック
        Ret = LenB(StrConv(strPswdKigen, vbFromUnicode))
        If Ret < 1 Or Ret > 3 Then
            MsgBox gfncGetMsgText(402), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
            Exit Function
        End If
        'パスワード有効期限の数字チェック
        Ret = Len(strPswdKigen)      '文字の文字数を取得
        For ColIdx = 1 To Ret        '先頭から１文字づつ検査する
            GetTxt = Mid(strPswdKigen, ColIdx, 1)
            Select Case GetTxt
                Case 0 To 9
                    'ＯＫ
                Case Else
                    'ＮＧ
                    MsgBox gfncGetMsgText(403), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    Exit Function
            End Select
        Next ColIdx
        'パスワード有効期限の数値チェック(先頭がゼロに成っていないか)
        Ret = Len(strPswdKigen)      '文字の文字数を取得
        'パスワード有効期限の桁数が１桁を超えている場合で先頭文字がゼロはエラー
        If Ret > 1 Then
            If Mid(strPswdKigen, 1, 1) = "0" Then
                MsgBox gfncGetMsgText(403), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                Exit Function
            End If
        End If
        
        '有効期限通知日数の桁数チェック
        Ret = LenB(StrConv(strTutiNisu, vbFromUnicode))
        If Ret < 1 Or Ret > 3 Then
            MsgBox gfncGetMsgText(404), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
            Exit Function
        End If
        '有効期限通知日数の数字チェック
        Ret = Len(strTutiNisu)      '文字の文字数を取得
        For ColIdx = 1 To Ret        '先頭から１文字づつ検査する
            GetTxt = Mid(strTutiNisu, ColIdx, 1)
            Select Case GetTxt
                Case 0 To 9
                    'ＯＫ
                Case Else
                    'ＮＧ
                    MsgBox gfncGetMsgText(405), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    Exit Function
            End Select
        Next ColIdx
        '有効期限通知日数の数値チェック(先頭がゼロに成っていないか)
        Ret = Len(strTutiNisu)      '文字の文字数を取得
        '有効期限通知日数の桁数が１桁を超えている場合で先頭文字がゼロはエラー
        If Ret > 1 Then
            If Mid(strTutiNisu, 1, 1) = "0" Then
                MsgBox gfncGetMsgText(405), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                Exit Function
            End If
        End If
    
        '有効期限日数と通知日数の日付前後関係のチェック
        If CInt(strPswdKigen) < CInt(strTutiNisu) Then
            MsgBox gfncGetMsgText(406), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
            Exit Function
        End If
    End If
    
    'パスワードミスによるロックアウト有無がありの場合はユーザのパスワードミス回数をチェックする
    If strLockFlg = "1" Then
        'パスワードミス回数の桁数チェック
        Ret = LenB(StrConv(strLockKaisu, vbFromUnicode))
        If Ret < 1 Or Ret > 3 Then
            MsgBox gfncGetMsgText(407), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
            Exit Function
        End If
        'パスワードミス回数の数字チェック
        Ret = Len(strLockKaisu)      '文字の文字数を取得
        For ColIdx = 1 To Ret        '先頭から１文字づつ検査する
            GetTxt = Mid(strLockKaisu, ColIdx, 1)
            Select Case GetTxt
                Case 0 To 9
                    'ＯＫ
                Case Else
                    'ＮＧ
                    MsgBox gfncGetMsgText(408), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                    Exit Function
            End Select
        Next ColIdx
        'パスワードミス回数の数値チェック(先頭がゼロに成っていないか)
        If Mid(strLockKaisu, 1, 1) = "0" Then
            MsgBox gfncGetMsgText(409), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
            Exit Function
        End If
    End If
    
    'パスワード履歴の桁数チェック
    Ret = LenB(StrConv(strRireki, vbFromUnicode))
    If Ret < 1 Or Ret > 3 Then
        MsgBox gfncGetMsgText(410), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
        Exit Function
    End If
    'パスワード履歴の数字チェック
    Ret = Len(strRireki)      '文字の文字数を取得
    For ColIdx = 1 To Ret        '先頭から１文字づつ検査する
        GetTxt = Mid(strRireki, ColIdx, 1)
        Select Case GetTxt
            Case 0 To 9
                'ＯＫ
            Case Else
                'ＮＧ
                MsgBox gfncGetMsgText(411), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
                Exit Function
        End Select
    Next ColIdx
    'パスワード履歴の数値チェック(先頭がゼロに成っていないか)
    If Mid(strRireki, 1, 1) = "0" Then
        MsgBox gfncGetMsgText(412), gfncGetMsgParam(1, 1), gfncGetMsgTitle(13)
        Exit Function
    End If
        
        
    'エラーなし
    fncChckParam = True
        
End Function

'=====================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   fncParamTorokuAdd
'機能            :   パラメータテーブル変更登録処理
'
'引数            :   strPswdKigen:パスワード有効期限
'　　            :   strKigenFlg:パスワード有効期限の有無フラグ
'　　            :   strTutiNisu:通知日数
'　　            :   strLockKaisu:パスワードミスロック回数
'　　            :   strLockFlg:ユーザロックの有無フラグ
'　　            :   strRireki:パスワード履歴
'
'戻り値          :   fncParamTorokuAdd = -1(True):正常終了
'　　　          :   fncParamTorokuAdd =  0(False):異常終了
'
'日付         担当               内容
'------------ ----------------- --------------------------------------
'2008/07/17   K.Furuya<SRA>     新規作成
'=====================================================================
Private Function fncParamTorokuAdd(ByRef strPswdKigen As String, _
                                   ByVal strKigenFlg As String, _
                                   ByRef strTutiNisu As String, _
                                   ByRef strLockKaisu As String, _
                                   ByVal strLockFlg As String, _
                                   ByVal strRireki As String) As Integer
    Dim sSql                    As String
    Dim arryParamCd()           As String           'パラメータコードの配列
    Dim arryParam()             As String           'パラメータの配列
    Dim intIdx                  As Integer
    Dim intParamCnt             As Integer
    
    Const CON_PARAMCD_010       As String = "010"   'パラメータコードt定数
    Const CON_PARAMCD_020       As String = "020"   'パラメータコードt定数
    Const CON_PARAMCD_030       As String = "030"   'パラメータコードt定数
    Const CON_PARAMCD_040       As String = "040"   'パラメータコードt定数
    Const CON_PARAMCD_050       As String = "050"   'パラメータコードt定数
    Const CON_PARAMCD_070       As String = "070"   'パラメータコードt定数
    Const CON_REC_CNT_3         As Integer = 3      'パラメータ値の個数その1
    Const CON_REC_CNT_4         As Integer = 4      'パラメータ値の個数その2
    Const CON_REC_CNT_5         As Integer = 5      'パラメータ値の個数その3
    Const CON_REC_CNT_6         As Integer = 6      'パラメータ値の個数その4
        
    fncParamTorokuAdd = False
        
    '配列をクリアする
    ReDim arryParamCd(0)
    ReDim arryParam(0)
    
    'パラメータのカウントを初期化する
    intParamCnt = 0
    
    'パスワードの有効期限の有無がなし且つパスワードミスの有無がなしの場合
    If strKigenFlg = "0" And strLockFlg = "0" Then
        '各パラメータのコードを配列に格納する
        For intIdx = 0 To CON_REC_CNT_3 - 1
            ReDim Preserve arryParamCd(intIdx)
            Select Case intIdx
                Case 0
                    arryParamCd(intIdx) = CON_PARAMCD_020
                Case 1
                    arryParamCd(intIdx) = CON_PARAMCD_050
                Case 2
                    arryParamCd(intIdx) = CON_PARAMCD_070
            End Select
        
            intParamCnt = intParamCnt + 1
        
        Next intIdx
        
        '各パラメータを配列に格納する
        For intIdx = 0 To CON_REC_CNT_3 - 1
            ReDim Preserve arryParam(intIdx)
            Select Case intIdx
                Case 0
                    arryParam(intIdx) = strKigenFlg
                Case 1
                    arryParam(intIdx) = strLockFlg
                Case 2
                    arryParam(intIdx) = strRireki
            End Select
        Next intIdx
    ElseIf strKigenFlg = "1" And strLockFlg = "0" Then
    'パスワードの有効期限の有無があり且つパスワードミスの有無がなしの場合
        '各パラメータのコードを配列に格納する
        For intIdx = 0 To CON_REC_CNT_5 - 1
            ReDim Preserve arryParamCd(intIdx)
            Select Case intIdx
                Case 0
                    arryParamCd(intIdx) = CON_PARAMCD_010
                Case 1
                    arryParamCd(intIdx) = CON_PARAMCD_020
                Case 2
                    arryParamCd(intIdx) = CON_PARAMCD_030
                Case 3
                    arryParamCd(intIdx) = CON_PARAMCD_050
                Case 4
                    arryParamCd(intIdx) = CON_PARAMCD_070
            End Select
            
            intParamCnt = intParamCnt + 1
        
        Next intIdx
        
        '各パラメータを配列に格納する
        For intIdx = 0 To CON_REC_CNT_5 - 1
            ReDim Preserve arryParam(intIdx)
            Select Case intIdx
                Case 0
                    arryParam(intIdx) = strPswdKigen
                Case 1
                    arryParam(intIdx) = strKigenFlg
                Case 2
                    arryParam(intIdx) = strTutiNisu
                Case 3
                    arryParam(intIdx) = strLockFlg
                Case 4
                    arryParam(intIdx) = strRireki
            End Select
        Next intIdx
    ElseIf strKigenFlg = "0" And strLockFlg = "1" Then
    'パスワードの有効期限の有無がなし且つパスワードミスの有無がありの場合
        '各パラメータのコードを配列に格納する
        For intIdx = 0 To CON_REC_CNT_4 - 1
            ReDim Preserve arryParamCd(intIdx)
            Select Case intIdx
                Case 0
                    arryParamCd(intIdx) = CON_PARAMCD_020
                Case 1
                    arryParamCd(intIdx) = CON_PARAMCD_040
                Case 2
                    arryParamCd(intIdx) = CON_PARAMCD_050
                Case 3
                    arryParamCd(intIdx) = CON_PARAMCD_070
            End Select
            
            intParamCnt = intParamCnt + 1
        
        Next intIdx
        
        '各パラメータを配列に格納する
        For intIdx = 0 To CON_REC_CNT_4 - 1
            ReDim Preserve arryParam(intIdx)
            Select Case intIdx
                Case 0
                    arryParam(intIdx) = strKigenFlg
                Case 1
                    arryParam(intIdx) = strLockKaisu
                Case 2
                    arryParam(intIdx) = strLockFlg
                Case 3
                    arryParam(intIdx) = strRireki
            End Select
        Next intIdx
    ElseIf strKigenFlg = "1" And strLockFlg = "1" Then
    'パスワードの有効期限の有無があり且つパスワードミスの有無がありの場合
        '各パラメータのコードを配列に格納する
        For intIdx = 0 To CON_REC_CNT_6 - 1
            ReDim Preserve arryParamCd(intIdx)
            Select Case intIdx
                Case 0
                    arryParamCd(intIdx) = CON_PARAMCD_010
                Case 1
                    arryParamCd(intIdx) = CON_PARAMCD_020
                Case 2
                    arryParamCd(intIdx) = CON_PARAMCD_030
                Case 3
                    arryParamCd(intIdx) = CON_PARAMCD_040
                Case 4
                    arryParamCd(intIdx) = CON_PARAMCD_050
                Case 5
                    arryParamCd(intIdx) = CON_PARAMCD_070
            End Select
        
            intParamCnt = intParamCnt + 1
        
        Next intIdx
        
        '各パラメータを配列に格納する
        For intIdx = 0 To CON_REC_CNT_6 - 1
            ReDim Preserve arryParam(intIdx)
            Select Case intIdx
                Case 0
                    arryParam(intIdx) = strPswdKigen
                Case 1
                    arryParam(intIdx) = strKigenFlg
                Case 2
                    arryParam(intIdx) = strTutiNisu
                Case 3
                    arryParam(intIdx) = strLockKaisu
                Case 4
                    arryParam(intIdx) = strLockFlg
                Case 5
                    arryParam(intIdx) = strRireki
            End Select
        Next intIdx
    End If
        
    
        
        
    'パラメータ属性インサートSQLを生成する
    For intIdx = 0 To intParamCnt - 1

            
        sSql = gstrParamZokusei_ForUpdate(arryParamCd(intIdx), arryParam(intIdx), _
                                            CON_PGM_ID, CON_TANTO_ID)
        
        'ユーザテーブルに新規登録する
        If Not gblnDbExec(sSql, Conn, RS) Then
            '登録失敗の場合はロールバックする
            If Not gblnDbRollback(Conn, RS) Then
            End If
            GoTo ErrorExit
        End If
    Next intIdx
        
    
    '配列を消去する
    Erase arryParamCd
    Erase arryParam
    
    
    fncParamTorokuAdd = True
    
    Exit Function
ErrorExit:
    
    '配列を消去する
    Erase arryParamCd
    Erase arryParam
    

End Function

'=====================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   fncTblTruncate
'機能            :   テーブルの表削除処理
'
'引数            :   strTblName:テーブル名
'
'戻り値          :   fncTblTruncate = -1(True):正常終了
'　　　          :   fncTblTruncate =  0(False):異常終了
'
'日付         担当               内容
'------------ ----------------- --------------------------------------
'2008/07/15   K.Furuya<SRA>     新規作成
'=====================================================================
Private Function fncTblTruncate(ByVal strTblName As String) As Integer
    Dim sSql            As String
        
    fncTblTruncate = False
        
        
    'トランザクションを開始する
    If Not gblnDbBeginTrans(Conn, RS) Then
        GoTo ErrorExit
    End If
        
    'パラメータ属性トランケートSQLを生成する
    sSql = gstrTBL_ForTruncate(strTblName)
    
    'パラメータ属性トランケートする
    If Not gblnDbExec(sSql, Conn, RS) Then
        '登録失敗の場合はロールバックする
        If Not gblnDbRollback(Conn, RS) Then
        End If
        GoTo ErrorExit
    End If
        
        
    '成功の場合はコミットする
    If Not gblnDbCommitTrans(Conn, RS) Then
        GoTo ErrorExit
    End If
    
    
    
    fncTblTruncate = True
    
    Exit Function
ErrorExit:
    

End Function

