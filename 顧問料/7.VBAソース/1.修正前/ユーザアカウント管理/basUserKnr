Attribute VB_Name = "basUserKnr"
'=========================================================================
'プロジェクト　　　：国内顧問料ユーザアカウント管理
'プログラム名　　　：ユーザ管理の共通モジュール
'プログラムＩＤ　　：basUserKnr
'機能概要　　　　　：ユーザ管理の構造体宣言／実行ロジック
'
'日付　　　　　　　作成者　　　　　　　　　　修正内容
'-------------------------------------------------------------------------
'2008/05/16       K.Furuya<SRA>　　　　　　新規作成
'
'=========================================================================
Option Explicit
Private Const MODULE_NAME As String = "mdlProcess"
Private Const PROCESS_LOG As String = "Process.log"

'------------<Modify Start azuma 2006/11/08 > -----------------------
Public strMyDocPath As String
'------------<Modify End   azuma 2006/11/08 > -----------------------

Dim xlApp                   As Excel.Application
Dim xlBook                  As Excel.Workbook
Dim xlSheet                 As Excel.Worksheet
Dim xlWindow                As Excel.Window
'ログ参照タイトル
Const CON_LOG_TITLE         As String = "ログ参照"
'一覧表タイトル
Const CON_USER_TITLE        As String = "ユーザ一覧"

'ログ参照項目名定義
Const CON_HEAD1_001         As String = "日時"
Const CON_HEAD1_002         As String = "連番"
Const CON_HEAD1_003         As String = "操作ユーザID"
Const CON_HEAD1_004         As String = "操作ログ"
Const CON_HEAD1_005         As String = "更新プログラム"
'一覧表項目名定数
Const CON_HEAD2_001         As String = "ユーザID"
Const CON_HEAD2_001_2       As String = "管理者区分"
Const CON_HEAD2_002         As String = "姓"
Const CON_HEAD2_003         As String = "名"
Const CON_HEAD2_004         As String = "削除"
Const CON_HEAD2_005         As String = "最終ログイン日"
Const CON_HEAD2_006         As String = "最終パスワード"
Const CON_HEAD2_007         As String = "更新日"
Const CON_HEAD2_008         As String = "パスワード"
Const CON_HEAD2_009         As String = "間違い回数"
Const CON_HEAD2_010         As String = "ロック"
Const CON_HEAD2_011         As String = "状態"
Const CON_HEAD2_012         As String = "ロック日付"
Const CON_HEAD2_013         As String = "登録日"
Const CON_HEAD2_014         As String = "更新日"
Const CON_HEAD2_015         As String = "更新者"
Const CON_ERROR_DISCRIPTION          As String = "エラーコード："    '実行時エラーの文言


'ログインパスワード管理構造体
Public Type typLoginPWDKnrTbl
    KYK_USER_ID                     As String   'ユーザＩＤ
    KYK_SEDAI_NO                    As Integer  '世代番号
    KYK_PSWD                        As String   'パスワード
    KYK_SHOKI_PSWD_FLG              As String   '初期パスワードフラグ
    '登録日は sysdate で取得する
    KYK_KOHSHIN_PGM_ID              As String   '更新プログラムID
    KYK_KOHSHIN_TANTOHSHA           As String   '更新担当者
End Type
'ログインパスワードテーブル格納構造体
Public gtypeLoginPWDKnr             As typLoginPWDKnrTbl

'ログインパラメータ管理構造体
Public Type typParamKnrTbl
    KYK_PARAMETER_CD                As String   'パラメータコード
    KYK_NUM_PARAM                   As Integer  '実数値パラメータ
    KYK_STR_PARAM                   As String   '文字パラメータ
    '登録日は sysdate で取得する
    KYK_KOHSHIN_PGM_ID              As String   '更新プログラムID
    KYK_KOHSHIN_TANTOHSHA           As String   '更新担当者
End Type
'ログインパラメータ格納構造体
Public gtypParamKnr                 As typParamKnrTbl

Public Const HKEY_LOCAL_MACHINE = &H8000001
Public Const HKEY_CURRENT_USER = &H80000001
Public Const ERROR_SUCCESS = 0&
Public Const KEY_QUERY_VALUE = &H1
Public Const KEY_ENUMERATE_SUB_KEYS = &H8
Public Const KEY_NOTIFY = &H10

Public Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias "RegOpenKeyExA" ( _
                                                                    ByVal hKey As Long, ByVal lpSubKey As String, _
                                                                    ByVal ulOptions As Long, ByVal samDesired As Long, _
                                                                    phkResult As Long) As Long

Public Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long

Public Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" ( _
                                                                    ByVal hKey As Long, ByVal lpValueName As String, _
                                                                    ByVal lpReserved As Long, lpType As Long, _
                                                                    ByVal lpData As Any, lpcbData As Long) As Long


'===============================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   gfncMakeExcelLogKnr
'機能            :   ログ参照エクセルファイルの作成
'パラメータ      ：   1．シート名、2．パス付きシート名、3．取得レコード数
'
'戻り値　　      ：   成功=True、失敗=False
'
'日付               担当　              修正内容
'-------------------------------------------------------------------------------
'2008/05/19         K.Furuya<SRA>       新規作成
'===============================================================================
Public Function gfncMakeExcelLogKnr( _
                                    ByVal strxlsNm As String, _
                                    ByVal strFilePathNm As String, _
                                    ByVal lngRecCnt As Long, _
                                    ByVal intFldCnt As Integer, _
                                    ByRef RS As ADODB.Recordset) As Integer
    
    Dim intSheetsCount  As Integer
    Dim intLoopCount    As Integer
    Const GetaCnt       As Integer = 2   'データ開始行の下駄
    Dim strRange        As String
    Dim strErrorTxt     As String
    
    gfncMakeExcelLogKnr = False
    
On Error GoTo ErrorExit

    

    Set xlApp = CreateObject("Excel.Application")
    Set xlBook = xlApp.Workbooks.Add
    Set xlSheet = xlBook.Sheets(1)
    Set xlWindow = xlBook.Windows(1)
    
    '変数初期化
    intSheetsCount = 0
    strRange = ""
    
    'bookのシート数を1枚にする
    If xlBook.Worksheets.Count >= 2 Then
        xlApp.DisplayAlerts = False
        intSheetsCount = xlBook.Worksheets.Count
        For intLoopCount = intSheetsCount To 2 Step -1
            xlBook.Worksheets(intLoopCount).Delete
        Next intLoopCount
        xlApp.DisplayAlerts = True
    End If

    'シートのテンプレートを作る
    '-- シート内容の初期設定
    '-- 枠線の非表示
    'xlWindow.DisplayGridlines = False
    '-- 全セルの書式を文字列にする
    xlSheet.Cells.NumberFormatLocal = "@"
    
    With xlSheet.Cells.Font
        .Name = "ＭＳ Ｐゴシック"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
    End With
    
    With xlSheet.Cells
        .VerticalAlignment = xlVAlignCenter
        .HorizontalAlignment = xlHAlignGeneral
        .ColumnWidth = 8.38
    End With
    
    '-- タイトル行幅
    xlSheet.Rows("1:1").RowHeight = 19.5

    '-- タイトル以降行幅
    xlSheet.Rows("2:65536").RowHeight = 13.5
    
    '-- 列幅
    With xlSheet
        .Columns("A:A").ColumnWidth = 25
        .Columns("B:B").ColumnWidth = 10
        .Columns("C:C").ColumnWidth = 32
        .Columns("D:D").ColumnWidth = 77
        .Columns("E:E").ColumnWidth = 53
    End With
    
      
    '-- ページ設定
    With xlSheet.PageSetup
        .Orientation = xlLandscape
        .LeftMargin = Application.InchesToPoints(0.39)
        .RightMargin = Application.InchesToPoints(0.28)
        .Zoom = 85
        .PrintTitleRows = "$1:$2"
    End With
    
    With xlWindow
        .Zoom = 85
    End With
    
    '-- ヘッダ行の作成
    With xlSheet
        'タイトル
        .Range("A1").Value = CON_LOG_TITLE
        .Range("A1").Font.Size = 16
        .Range("A1").Font.Bold = True
        .Range("A1").Font.Underline = xlUnderlineStyleSingle
        .Range("A1").VerticalAlignment = xlHAlignCenter
        .Range("A1").HorizontalAlignment = xlHAlignLeft
        '項目(日時)
        .Range("A2").Value = CON_HEAD1_001
        .Range("A2").Interior.ColorIndex = 36                  '薄黄色
        .Range("A2").Interior.Pattern = xlSolid                '罫線バック
        .Range("A2").VerticalAlignment = xlHAlignCenter
        .Range("A2").HorizontalAlignment = xlHAlignCenter
        '項目(連番)
        .Range("B2").Value = CON_HEAD1_002
        .Range("B2").Interior.ColorIndex = 36                  '薄黄色
        .Range("B2").Interior.Pattern = xlSolid                '罫線バック
        .Range("B2").VerticalAlignment = xlHAlignCenter
        .Range("B2").HorizontalAlignment = xlHAlignCenter
        '項目(操作ユーザID)
        .Range("C2").Value = CON_HEAD1_003
        .Range("C2").Interior.ColorIndex = 36                  '薄黄色
        .Range("C2").Interior.Pattern = xlSolid                '罫線バック
        .Range("C2").VerticalAlignment = xlHAlignCenter
        .Range("C2").HorizontalAlignment = xlHAlignCenter
        '項目(操作ログ)
        .Range("D2").Value = CON_HEAD1_004
        .Range("D2").Interior.ColorIndex = 36                  '薄黄色
        .Range("D2").Interior.Pattern = xlSolid                '罫線バック
        .Range("D2").VerticalAlignment = xlHAlignCenter
        .Range("D2").HorizontalAlignment = xlHAlignCenter
        '項目(更新プログラム)
        .Range("E2").Value = CON_HEAD1_005
        .Range("E2").Interior.ColorIndex = 36                  '薄黄色
        .Range("E2").Interior.Pattern = xlSolid                '罫線バック
        .Range("E2").VerticalAlignment = xlHAlignCenter
        .Range("E2").HorizontalAlignment = xlHAlignCenter
    End With
    '-- シート名
    With xlSheet
        .Name = strxlsNm
    End With
    
    '-- データの貼り付け
    With xlSheet
        .Range("A3").CopyFromRecordset RS, lngRecCnt, intFldCnt
    End With
    
    '-- 列属性
    With xlSheet
        .Range("A3:A65536").VerticalAlignment = xlHAlignCenter
        .Range("A3:A65536").HorizontalAlignment = xlHAlignLeft
        .Range("A3:A65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("B3:B65536").VerticalAlignment = xlHAlignCenter
        .Range("B3:B65536").HorizontalAlignment = xlHAlignRight
        .Range("C3:C65536").VerticalAlignment = xlHAlignCenter
        .Range("C3:C65536").HorizontalAlignment = xlHAlignLeft
        .Range("D3:D65536").VerticalAlignment = xlHAlignCenter
        .Range("D3:D65536").HorizontalAlignment = xlHAlignLeft
        .Range("E3:E65536").VerticalAlignment = xlHAlignCenter
        .Range("E3:E65536").HorizontalAlignment = xlHAlignLeft
    End With
        
    '-- レンジ位置の設定
    strRange = "A" & CStr(2) & ":" & "E" & CStr(lngRecCnt + GetaCnt)
    
    '-- 罫線描画
    With xlSheet.Range(strRange)
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThin
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThin
    End With
    
    '-- ウインドウ枠の固定
    xlSheet.Range("A3").Select
    xlWindow.FreezePanes = True
    
    '-- Excelファイルの保存
    xlBook.SaveAs strFilePathNm
    xlBook.Close
    xlApp.Quit

    '-- Excelオブジェクトの解放
    Set xlWindow = Nothing
    Set xlSheet = Nothing
    Set xlBook = Nothing
    Set xlApp = Nothing

    gfncMakeExcelLogKnr = True
    
    Exit Function

ErrorExit:
    'キャンセルの場合終了
    If Err.Number = 1004 Then
        xlApp.DisplayAlerts = False
        xlBook.Close
        xlApp.DisplayAlerts = True
        xlApp.Quit
        Set xlWindow = Nothing
        Set xlSheet = Nothing
        Set xlBook = Nothing
        Set xlApp = Nothing
        Exit Function
    End If
    'エラーの場合エラーメッセージ表示
    MsgBox gfncGetMsgText(205), gfncGetMsgParam(1, 1), _
            gfncGetMsgTitle(11)
   
    xlApp.DisplayAlerts = False
    xlBook.Close
    xlApp.DisplayAlerts = True
    xlApp.Quit
    Set xlWindow = Nothing
    Set xlSheet = Nothing
    Set xlBook = Nothing
    Set xlApp = Nothing

End Function

'===============================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   gfncMakeExcelUsrKnr
'機能            :   ユーザ一覧エクセルファイルの作成
'パラメータ      ：   1．シート名、2．パス付きシート名、3．取得レコード数
'
'戻り値　　      ：   成功=True、失敗=False
'
'日付               担当　              修正内容
'-------------------------------------------------------------------------------
'2008/05/22         K.Furuya<SRA>       新規作成
'===============================================================================
Public Function gfncMakeExcelUsrKnr( _
                                    ByVal strxlsNm As String, _
                                    ByVal strFilePathNm As String, _
                                    ByVal lngRecCnt As Long, _
                                    ByVal intFldCnt As Integer, _
                                    ByRef RS As ADODB.Recordset) As Integer
    
    Dim intSheetsCount  As Integer
    Dim intLoopCount    As Integer
    Const GetaCnt       As Integer = 2   'データ開始行の下駄
    Dim strRange        As String
    Dim strErrorTxt     As String
    
    gfncMakeExcelUsrKnr = False
        
On Error GoTo ErrorExit

    Set xlApp = CreateObject("Excel.Application")
    Set xlBook = xlApp.Workbooks.Add
    Set xlSheet = xlBook.Sheets(1)
    Set xlWindow = xlBook.Windows(1)
    
    '変数初期化
    intSheetsCount = 0
    strRange = ""
    
    'bookのシート数を1枚にする
    If xlBook.Worksheets.Count >= 2 Then
        xlApp.DisplayAlerts = False
        intSheetsCount = xlBook.Worksheets.Count
        For intLoopCount = intSheetsCount To 2 Step -1
            xlBook.Worksheets(intLoopCount).Delete
        Next intLoopCount
        xlApp.DisplayAlerts = True
    End If

    'シートのテンプレートを作る
    '-- シート内容の初期設定
    '-- 枠線の非表示
    'xlWindow.DisplayGridlines = False
    '-- 全セルの書式を文字列にする
    xlSheet.Cells.NumberFormatLocal = "@"
    
    With xlSheet.Cells.Font
        .Name = "ＭＳ Ｐゴシック"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
    End With
    
    With xlSheet.Cells
        .VerticalAlignment = xlVAlignCenter
        .HorizontalAlignment = xlHAlignGeneral
        .ColumnWidth = 8.38
    End With
    
    '-- タイトル行幅
    xlSheet.Rows("1:1").RowHeight = 18.75
    '-- 項目行幅
    xlSheet.Rows("2:2").RowHeight = 27
    '-- タイトル以降行幅
    xlSheet.Rows("3:65536").RowHeight = 13.5
    
    '-- 列幅
    With xlSheet
        .Columns("A:A").ColumnWidth = 22
        .Columns("B:B").ColumnWidth = 17
        .Columns("C:C").ColumnWidth = 10.5
        .Columns("D:D").ColumnWidth = 10.5
        .Columns("E:E").ColumnWidth = 25
        .Columns("F:F").ColumnWidth = 25
        .Columns("G:G").ColumnWidth = 14.5
        .Columns("H:H").ColumnWidth = 32
        .Columns("I:I").ColumnWidth = 25
        .Columns("J:J").ColumnWidth = 25
        .Columns("K:K").ColumnWidth = 25
        .Columns("L:L").ColumnWidth = 53
        .Columns("M:M").ColumnWidth = 19
    End With
    
      
    '-- ページ設定
    With xlSheet.PageSetup
        .Orientation = xlLandscape
        .LeftMargin = Application.InchesToPoints(0.39)
        .RightMargin = Application.InchesToPoints(0.28)
        .Zoom = 60
        .PrintTitleRows = "$1:$2"
    End With
    
    With xlWindow
        .Zoom = 75
    End With
    
    'ヘッダ行の作成
    With xlSheet
        'タイトル
        .Range("A1").Value = CON_USER_TITLE
        .Range("A1").Font.Size = 16
        .Range("A1").Font.Bold = True
        .Range("A1").Font.Underline = xlUnderlineStyleSingle
        .Range("A1").VerticalAlignment = xlHAlignCenter
        .Range("A1").HorizontalAlignment = xlHAlignLeft
        '項目(ユーザID)
        .Range("A2").Value = CON_HEAD2_001
        .Range("A2").Interior.ColorIndex = 34                  '空色
        .Range("A2").Interior.Pattern = xlSolid                '罫線バック
        .Range("A2").VerticalAlignment = xlHAlignCenter
        .Range("A2").HorizontalAlignment = xlHAlignCenter
        '項目(管理者区分)
        .Range("B2").Value = CON_HEAD2_001_2
        .Range("B2").Interior.ColorIndex = 34                  '空色
        .Range("B2").Interior.Pattern = xlSolid                '罫線バック
        .Range("B2").VerticalAlignment = xlHAlignCenter
        .Range("B2").HorizontalAlignment = xlHAlignCenter
        '項目(姓)
        .Range("C2").Value = CON_HEAD2_002
        .Range("C2").Interior.ColorIndex = 34                  '空色
        .Range("C2").Interior.Pattern = xlSolid                '罫線バック
        .Range("C2").VerticalAlignment = xlHAlignCenter
        .Range("C2").HorizontalAlignment = xlHAlignCenter
        '項目(名)
        .Range("D2").Value = CON_HEAD2_003
        .Range("D2").Interior.ColorIndex = 34                  '空色
        .Range("D2").Interior.Pattern = xlSolid                '罫線バック
        .Range("D2").VerticalAlignment = xlHAlignCenter
        .Range("D2").HorizontalAlignment = xlHAlignCenter
        '項目(最終ログイン日)
        .Range("E2").Value = CON_HEAD2_005
        .Range("E2").Interior.ColorIndex = 34                  '空色
        .Range("E2").Interior.Pattern = xlSolid                '罫線バック
        .Range("E2").VerticalAlignment = xlHAlignCenter
        .Range("E2").HorizontalAlignment = xlHAlignCenter
        '項目(最終パスワード更新日)
        .Range("F2").FormulaR1C1 = CON_HEAD2_006 & Chr(10) & CON_HEAD2_007
        .Range("F2").Interior.ColorIndex = 34                  '空色
        .Range("F2").Interior.Pattern = xlSolid                '罫線バック
        .Range("F2").VerticalAlignment = xlHAlignCenter
        .Range("F2").HorizontalAlignment = xlHAlignCenter
        '項目(パスワード間違い回数)
        .Range("G2").FormulaR1C1 = CON_HEAD2_008 & Chr(10) & CON_HEAD2_009
        .Range("G2").Interior.ColorIndex = 34                  '空色
        .Range("G2").Interior.Pattern = xlSolid                '罫線バック
        .Range("G2").VerticalAlignment = xlHAlignCenter
        .Range("G2").HorizontalAlignment = xlHAlignCenter
        '項目(ロック状態)
        .Range("H2").FormulaR1C1 = CON_HEAD2_010 & Chr(10) & CON_HEAD2_011
        .Range("H2").Interior.ColorIndex = 34                  '空色
        .Range("H2").Interior.Pattern = xlSolid                '罫線バック
        .Range("H2").VerticalAlignment = xlHAlignCenter
        .Range("H2").HorizontalAlignment = xlHAlignCenter
        '項目(ロック日付)
        .Range("I2").Value = CON_HEAD2_012
        .Range("I2").Interior.ColorIndex = 34                  '空色
        .Range("I2").Interior.Pattern = xlSolid                '罫線バック
        .Range("I2").VerticalAlignment = xlHAlignCenter
        .Range("I2").HorizontalAlignment = xlHAlignCenter
        '項目(登録日)
        .Range("J2").Value = CON_HEAD2_013
        .Range("J2").Interior.ColorIndex = 34                  '空色
        .Range("J2").Interior.Pattern = xlSolid                '罫線バック
        .Range("J2").VerticalAlignment = xlHAlignCenter
        .Range("J2").HorizontalAlignment = xlHAlignCenter
        '項目(更新日)
        .Range("K2").Value = CON_HEAD2_014
        .Range("K2").Interior.ColorIndex = 34                  '空色
        .Range("K2").Interior.Pattern = xlSolid                '罫線バック
        .Range("K2").VerticalAlignment = xlHAlignCenter
        .Range("K2").HorizontalAlignment = xlHAlignCenter
        '項目(更新プログラム)
        .Range("L2").Value = CON_HEAD1_005
        .Range("L2").Interior.ColorIndex = 34                  '空色
        .Range("L2").Interior.Pattern = xlSolid                '罫線バック
        .Range("L2").VerticalAlignment = xlHAlignCenter
        .Range("L2").HorizontalAlignment = xlHAlignCenter
        '項目(更新者)
        .Range("M2").Value = CON_HEAD2_015
        .Range("M2").Interior.ColorIndex = 34                  '空色
        .Range("M2").Interior.Pattern = xlSolid                '罫線バック
        .Range("M2").VerticalAlignment = xlHAlignCenter
        .Range("M2").HorizontalAlignment = xlHAlignCenter
    End With
    'シート名
    With xlSheet
        .Name = strxlsNm
    End With
    

    '-- データの貼り付け
    With xlSheet
        .Range("A3").CopyFromRecordset RS, lngRecCnt, intFldCnt
    End With

    '-- 列属性
    With xlSheet
        .Range("A3:A65536").VerticalAlignment = xlHAlignCenter
        .Range("A3:A65536").HorizontalAlignment = xlHAlignLeft
        .Range("B3:B65536").VerticalAlignment = xlHAlignCenter
        .Range("B3:B65536").HorizontalAlignment = xlHAlignLeft
        .Range("C3:C65536").VerticalAlignment = xlHAlignCenter
        .Range("C3:C65536").HorizontalAlignment = xlHAlignLeft
        .Range("D3:D65536").VerticalAlignment = xlHAlignCenter
        .Range("D3:D65536").HorizontalAlignment = xlHAlignLeft
        .Range("E3:E65536").VerticalAlignment = xlHAlignCenter
        .Range("E3:E65536").HorizontalAlignment = xlHAlignLeft
        .Range("E3:E65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("F3:F65536").VerticalAlignment = xlHAlignCenter
        .Range("F3:F65536").HorizontalAlignment = xlHAlignLeft
        .Range("F3:F65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("G3:G65536").VerticalAlignment = xlHAlignCenter
        .Range("G3:G65536").HorizontalAlignment = xlHAlignRight
        .Range("H3:H65536").VerticalAlignment = xlHAlignCenter
        .Range("H3:H65536").HorizontalAlignment = xlHAlignCenter
        .Range("I3:I65536").VerticalAlignment = xlHAlignCenter
        .Range("I3:I65536").HorizontalAlignment = xlHAlignLeft
        .Range("I3:I65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("J3:J65536").VerticalAlignment = xlHAlignCenter
        .Range("J3:J65536").HorizontalAlignment = xlHAlignLeft
        .Range("J3:J65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("K3:K65536").VerticalAlignment = xlHAlignCenter
        .Range("K3:K65536").HorizontalAlignment = xlHAlignLeft
        .Range("K3:K65536").NumberFormatLocal = "yyyy/mm/dd hh:mm:ss"
        .Range("L3:L65536").VerticalAlignment = xlHAlignCenter
        .Range("L3:L65536").HorizontalAlignment = xlHAlignLeft
        .Range("M3:M65536").VerticalAlignment = xlHAlignCenter
        .Range("M3:M65536").HorizontalAlignment = xlHAlignLeft
    End With
    
    '-- レンジ位置の設定
    strRange = "A" & CStr(2) & ":" & "M" & CStr(lngRecCnt + GetaCnt)
    
    '-- 罫線描画
    With xlSheet.Range(strRange)
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThin
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThin
    End With
    
    '-- ウインドウ枠の固定
    xlSheet.Range("A3").Select
    xlWindow.FreezePanes = True
    
    
    
    
    '-- Excelファイルの保存
    xlBook.SaveAs strFilePathNm
    xlBook.Close
    xlApp.Quit

    '-- Excelオブジェクトの解放
    Set xlWindow = Nothing
    Set xlSheet = Nothing
    Set xlBook = Nothing
    Set xlApp = Nothing

    gfncMakeExcelUsrKnr = True
    
    Exit Function

ErrorExit:
    'キャンセルの場合終了
    If Err.Number = 1004 Then
        xlApp.DisplayAlerts = False
        xlBook.Close
        xlApp.DisplayAlerts = True
        xlApp.Quit
        Set xlWindow = Nothing
        Set xlSheet = Nothing
        Set xlBook = Nothing
        Set xlApp = Nothing
        Exit Function
    End If
    'エラーの場合エラーメッセージ表示
    MsgBox gfncGetMsgText(208), _
            gfncGetMsgParam(1, 1), _
             gfncGetMsgTitle(11)
    
    xlApp.DisplayAlerts = False
    xlBook.Close
    xlApp.DisplayAlerts = True
    xlApp.Quit
    Set xlWindow = Nothing
    Set xlSheet = Nothing
    Set xlBook = Nothing
    Set xlApp = Nothing

End Function

Public Sub gsubExlClose()
    
    ThisWorkbook.Close SaveChanges:=False
    
End Sub

'===============================================================================
'ﾌﾟﾛｼｰｼﾞｬ名称    :   gfncLogOutPut
'機能            :   ユーザログ出力共通関数
'パラメータ      ：   1．ユーザID、2．画面ID
'
'戻り値　　      ：   成功=True、失敗=False
'
'日付               担当　              修正内容
'-------------------------------------------------------------------------------
'2008/05/30         K.Furuya<SRA>       新規作成
'===============================================================================
Public Function gfncLogOutPut( _
                                ByVal strSosaUsrID As String, _
                                ByVal strLogMsg As String, _
                                ByVal strPgmID As String, _
                                ByRef Conn As ADODB.Connection, _
                                ByRef RS As ADODB.Recordset _
                                ) As Integer
    
    Dim sSql                As String
    Dim strLogSeq           As String
    Dim RecCnt              As Integer
    
    gfncLogOutPut = False
                                
    
    '同日ログの存在を確認する
    sSql = gstrLogSeqNo_ForSelect()
    
    'ﾀﾞｲﾅｾｯﾄの作成
    If (gfncDyCreate(sSql, Conn, RS) = False) Then
        Exit Function
    End If

    
    'シーケンス番号を附番する
    If RS.EOF Then
        strLogSeq = "0"
    Else
        strLogSeq = IIf(IsNull(RS("LOG_SEQ").Value), "0", _
                        RS("LOG_SEQ").Value + 1)
    End If
    
    RS.Close
    
    'インサートSQL文生成
    sSql = gstrUsreLog_ForInsert(strLogSeq, strSosaUsrID, strLogMsg, strPgmID)
    
    'レコードインサート
    If Not gblnDbExec(sSql, Conn, RS) Then
        Exit Function
    End If
    
    gfncLogOutPut = True

    
End Function
'関数名　　：エラー共通処理
'
'引　　数　：ARG1   I   Module      Strinng モジュール名
'　　　　　：ARG2   I   Procedure   Strinng プロシージャ名
'　　　　　：ARG3   I   ErrNum      Long    エラー番号
'　　　　　：ARG4   I   ErrMsg      Strinng エラーメッセージ
'
'戻り値　　：なし
'
'機能説明　：サンプル
'
'更新履歴　：2006/01/17 SRA T.Tanaka    新規作成
'
'*************************************************************************
Public Function subErrProcess(ByVal Module As String, ByVal Procedure As String, _
                         ByVal ErrNum As Long, ByVal ErrMsg As String)
    
    Const PROCEDURE_NAME As String = "subErrProcess"
    
    On Error GoTo ErrHandler
    
'    Debug.Print ErrNum & ":" & ErrMsg
    
'------------<Modify Start azuma 2006/11/08 > -----------------------
    'ログ出力パスの取得
    If Trim(strMyDocPath) = "" Then
        If gfunc_GetMyDocPath(strMyDocPath) = False Then
            MsgBox "ログ出力パスの取得に失敗しました。 (" & PROCEDURE_NAME & ")", vbCritical
            Exit Function
        End If
    End If
'------------<Modify End   azuma 2006/11/08 > -----------------------
    
    
'------------<Modify Start azuma 2006/11/08 > -----------------------
    Open strMyDocPath & PROCESS_LOG For Append Access Write As #1
'    Open PROCESS_LOG For Append Access Write As #1
'------------<Modify End   azuma 2006/11/08 > -----------------------
    
    Write #1, Format(Now, "General Date"), "エラー", Module, Procedure
    Write #1, "番号", ErrNum
    Write #1, "詳細", ErrMsg
    
    Close #1
    
    'エラーメッセージ出力
    Call MsgBox("システムエラーが発生しました。" & vbCrLf & Module & "." & Procedure & vbCrLf & "(" & ErrNum & ":" & ErrMsg & ")", vbCritical)

    Exit Function
ErrHandler:
     
    Rem Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：マイドキュメントパス取得処理
'
'引　　数　：
'           strReturnPath           O       マイドキュメントのパス
'
'戻り値　　：
'
'機能説明　：カレントユーザのマイドキュメントパスをレジストリから取得する。
'
'更新履歴　：2006/11/08 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_GetMyDocPath(ByRef strReturnPath As String) As Boolean
    
On Error GoTo ErrHandler
    
    Dim hRegKey         As Long
    Dim RegKeyName      As String
    Dim RegType         As Long
    Dim RegBufferSize   As Long
    Dim RegKind         As Long
    Dim lngResult       As Long
    Dim strGetPath      As String * 256
    
    
    gfunc_GetMyDocPath = False
    
    RegKeyName = "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders"
    RegType = KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY Or KEY_QUERY_VALUE
    
    'レジストリを開く
    lngResult = RegOpenKeyEx(HKEY_CURRENT_USER _
                           , RegKeyName _
                           , 0 _
                           , RegType _
                           , hRegKey)
    
    If ERROR_SUCCESS <> lngResult Then Exit Function
    
    
    RegKeyName = "Personal"
    RegBufferSize = 250
    
    '指定したキーの値を取得する。
    lngResult = RegQueryValueEx(hRegKey _
                              , RegKeyName _
                              , 0 _
                              , RegKind _
                              , strGetPath _
                              , RegBufferSize)
    If ERROR_SUCCESS <> lngResult Then Exit Function
    
    
    'レジストリを閉じる
    Call RegCloseKey(HKEY_CURRENT_USER)

    '!取得したレジストリキーを引数に設定
    strReturnPath = Left$(strGetPath, (RegBufferSize - 1))
    
    
    If Right(strReturnPath, 1) <> "\" Then
        strReturnPath = strReturnPath & "\"
    End If
    
    gfunc_GetMyDocPath = True
    
    Exit Function
    
ErrHandler:

    gfunc_GetMyDocPath = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
'    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_GetMyDocPath", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    
    
End Function

