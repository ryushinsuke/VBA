Attribute VB_Name = "basExec"
Option Explicit

'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー算出システム・月次未払計上
'
'オブジェクト名：basExec
'
'機能概要　：参照処理
'
'更新履歴　：2008/07/02 SRA 吉井        新規作成
'
'*************************************************************************

Private Const MODULE_NAME As String = "basExec"

'*************************************************************************
'
'関数名　　：実行ボタン処理
'
'引　数　　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：月次未払計上ファイルを作成する
'
'更新履歴　：2008/07/03 SRA 吉井        新規作成
'
'*************************************************************************
Function fncExec() As Long
    
    Const PROCEDURE_NAME As String = "fncExec"

On Error GoTo ErrorHandler

    Dim lngRet          As Long

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncExec = 0
    
    With Sheets(SHEET_MAIN)

        '入力チェック
        '基準年月チェック
        lngRet = fncChkDateFormat(.Range(RNG_KIJYUNBI).Value, MSG1_KIJYUNBI)
        If lngRet <> 0 Then
            .Range(RNG_KIJYUNBI).Select
            fncExec = lngRet
            Exit Function
        End If
        
        '保存フォルダチェック
        lngRet = fncChkFolder(.Range(RNG_FOLDER).Value, MSG1_FOLDER)
        If lngRet <> 0 Then
            .Range(RNG_FOLDER).Select
            fncExec = lngRet
            Exit Function
        End If
        
        '計算処理
        If .chkKeisan.Value = True Then
            '未払外部委託計算処理をCALL(ストアドJAVA)
            frmKeisan.Show vbModal
            If frmKeisan.JavaRetCd <> 0 Then
                fncExec = frmKeisan.JavaRetCd
                Unload frmKeisan
                Exit Function
            End If
            Unload frmKeisan
        Else
            Call gCom01_BookProtect(ThisWorkbook, False)
            Application.DisplayAlerts = False
            'ERRORシートを削除
            On Error Resume Next
            Sheets(SHEET_ERROR).Delete
            Call gCom01_BookProtect(ThisWorkbook, True)
            On Error GoTo ErrorHandler
            Application.DisplayAlerts = True
        End If

        '月次未払計上ファイル作成処理
        lngRet = fncMakeIFfile
        If lngRet <> 0 Then
            fncExec = lngRet
            Exit Function
        End If
        
    End With
    
    Application.ScreenUpdating = True
    
    '24004 正常終了メッセージ
    fncKsCmnMessageDisp MSGLVL_INFO, 24004, "", "", True

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    fncExec = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：月次未払計上ファイル作成処理
'
'引　数　　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：月次未払計上ファイルを作成する
'
'更新履歴　：2008/07/03 SRA 吉井        新規作成
'            2009/02/25 NRI 堀江        更新
'
'*************************************************************************
Function fncMakeIFfile() As Long

    Const PROCEDURE_NAME As String = "fncMakeIFfile"
    
On Error GoTo ErrorHandler
    
    Dim lngRet      As Long
    Dim strDestPath As String
    Dim strFileName As String
    Dim vntArray()  As Variant
    Dim vntArray2() As Variant
    Dim vntArray3()  As Variant
    Dim vntArray4() As Variant
    Dim lngDataCnt  As Long
    Dim lngDataCnt2 As Long
    Dim dtWdate     As Date
    Dim lngKijyunbi As Long     '基準日(YYYYMMDD)
    
    Dim strBookName As String
    
    fncMakeIFfile = 0
    
    'データ取得
    '基準日を取得
    dtWdate = Format(Trim(Sheets(SHEET_MAIN).Range(RNG_KIJYUNBI).Value) & "01", "####/##/##")
    dtWdate = DateAdd("m", 1, dtWdate)
    dtWdate = DateAdd("d", -1, dtWdate)
    
    lngKijyunbi = Val(Format(dtWdate, "YYYYMMDD"))
    
    '未払管理情報取得（存在しない場合は処理終了）
    If Sheets(SHEET_MAIN).Range(RNG_GI_NO).Value = "" Then
        lngRet = fncGetData(lngKijyunbi, vntArray, lngDataCnt)
    Else
        lngRet = fncGetData(lngKijyunbi, vntArray, lngDataCnt, Left(Sheets(SHEET_MAIN).Range(RNG_GI_NO).Value, 1))
    End If

    If lngDataCnt = 0 And lngRet = 0 Then
        '24005 該当データが存在しません。
        fncKsCmnMessageDisp MSGLVL_WARNNING, 24005, MSG1_EXEC, , True
        fncMakeIFfile = 24009
        Exit Function
    ElseIf lngRet <> 0 Then
        If lngRet = -1 Then
            fncMakeIFfile = -1
            Exit Function
        Else
            '24010 システムエラーが発生しました。管理者に報告してください。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 24010, MSG1_EXEC, , True
            fncMakeIFfile = lngRet
            Exit Function
        End If
    End If
    
    '2009/02/25 T.Horie added start
    '口座銘柄別の未払金額情報取得
    If Workbooks(BOOK_MAIN).Sheets(SHEET_MAIN).Range(RNG_GI_NO).Value = "" Then
        lngRet = fncGetData2(lngKijyunbi, vntArray3, lngDataCnt2)
    Else
        lngRet = fncGetData2(lngKijyunbi, vntArray3, lngDataCnt2, Left(Sheets(SHEET_MAIN).Range(RNG_GI_NO).Value, 1))
    End If

    If lngDataCnt2 = 0 And lngRet = 0 Then
        '24009 該当データが存在しません(口座銘柄別）。
        fncKsCmnMessageDisp MSGLVL_WARNNING, 24009, MSG1_EXEC, , True
        fncMakeIFfile = 24009
        Exit Function
    ElseIf lngRet <> 0 Then
        If lngRet = -1 Then
            fncMakeIFfile = -1
            Exit Function
        Else
            '24011 システムエラーが発生しました。管理者に報告してください（口座銘柄別）。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 24011, MSG1_EXEC, , True
            fncMakeIFfile = lngRet
            Exit Function
        End If
    End If
    '2009/02/25 T.Horie added end

    '出力パス
    strDestPath = Trim(CStr(Sheets(SHEET_MAIN).Range(RNG_FOLDER).Value))
    '出力ファイル名
    strFileName = "mibarai_" & Format(Date, "YYYYMMDD") & "_" & Format(Time, "HHMMSS") & ".xls"
    
    'テンプレートシートから新規ブックを作成
    strBookName = Application.ActiveWorkbook.Name
    With Workbooks(strBookName)
        'ブックの保護解除
        Call gCom01_BookProtect(ThisWorkbook, False)
        'テンプレートシートを表示
        .Sheets(SHEET_TEMP).Visible = True
        .Sheets(SHEET_TEMP2).Visible = True         '2009/02/26 T.Horie added
        
        '新規ブックを作成
        lngRet = fncMakeNewFile(SHEET_TEMP, SHEET_TEMP2, strDestPath & "\" & strFileName)       '2009/02/26 T.Horie updated
        'テンプレートシートを非表示
        .Sheets(SHEET_TEMP).Visible = False
        .Sheets(SHEET_TEMP2).Visible = False        '2009/02/26 T.Horie added

        'ブックの保護
        Call gCom01_BookProtect(ThisWorkbook, True)
    End With
    If lngRet <> 0 Then
        fncMakeIFfile = lngRet
        Exit Function
    End If
    
    '新規ブックにデータをセット
    With Workbooks(strFileName)
        '配列の添え字の階層を変更 array(X,Y) -> array(Y,X)
        lngRet = fncKsCmnArrayIdxChange(vntArray, vntArray2)
        If lngRet <> 0 Then
            .Close SaveChanges:=True
            fncMakeIFfile = lngRet
            Exit Function
        End If
        lngRet = fncKsCmnArrayIdxChange(vntArray3, vntArray4)
        If lngRet <> 0 Then
            .Close SaveChanges:=True
            fncMakeIFfile = lngRet
            Exit Function
        End If
        
        'シートにデータをセット
        .Sheets(SHEET_TEMP).Range("A" & ROW_DATA_TOP & ":L" & (ROW_DATA_TOP - 1) + lngDataCnt) = vntArray2
        .Sheets(SHEET_TEMP2).Range("A" & ROW_DATA_TOP2 & ":F" & (ROW_DATA_TOP2 - 1) + lngDataCnt2) = vntArray4      '2009/02/26 T.Horie added
        
        '罫線をセット
        subKsCmnSetLine Workbooks(strFileName), (ROW_DATA_TOP - 1) + lngDataCnt, (ROW_DATA_TOP2 - 1) + lngDataCnt2
        
        '基準日をセット
        '2009/02/26 T.Horie updated Start
        .Sheets(SHEET_TEMP2).Activate
        .Sheets(SHEET_TEMP2).PageSetup.RightHeader = "" & vbLf & "" & vbLf & Format(lngKijyunbi, "基準日＜####年##月##日＞")
        .Sheets(SHEET_TEMP2).Range("A1").Select
        .Sheets(SHEET_TEMP).Activate
        .Sheets(SHEET_TEMP).PageSetup.RightHeader = "" & vbLf & "" & vbLf & Format(lngKijyunbi, "基準日＜####年##月##日＞")
        .Sheets(SHEET_TEMP).Range("A1").Select
        '2009/02/26 T.Horie updated End

        .Close SaveChanges:=True
    End With
    
    Exit Function
    
ErrorHandler:
    fncMakeIFfile = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：未払管理情報取得
'
'引　数　　：ARG1   I   lngKijyunbi Long    基準日
'　　　　　：ARG2   O   vntRec()    Variant 取得データ格納配列
'　　　　　：ARG3   O   lngRows     Long    取得データ数
'　　　　　：ARG4   I   strGINo     String  外部委託先番号
'
'戻り値　　：Long       エラー番号
'
'機能説明　：未払管理情報を取得する
'
'更新履歴　：2008/07/03 SRA 吉井        新規作成
'
'*************************************************************************
Function fncGetData(ByVal lngKijyunbi As Long, _
                    ByRef vntRec() As Variant, _
                    ByRef lngRows As Long, _
           Optional ByVal strGINo As String = "") As Long

    Const PROCEDURE_NAME As String = "fncGetData"
    
On Error GoTo ErrorHandler

    Dim strSql      As String
    Dim lngCols     As Long
    Dim strErrCd    As String
    Dim blnRet      As Boolean
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncGetData = 0
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     A.GI_NO,"                                       '外部委託先番号
    strSql = strSql & "     B.VALUE_NAME,"                                  '外部委託先名
    
    strSql = strSql & "     NVL(TO_CHAR(TO_DATE(A.GI_SHIHARAI_KIKAN_FROM,'YYYYMMDD'),'YYYY/MM/DD'), Null),"   '支払期間FROM
    strSql = strSql & "     NVL(TO_CHAR(TO_DATE(A.GI_SHIHARAI_KIKAN_TO,'YYYYMMDD'),'YYYY/MM/DD'), Null),"     '支払期間TO
    strSql = strSql & "     NVL(TO_CHAR(TO_DATE(A.GI_SHIHARAI_KIKAN_FROM,'YYYYMMDD'),'YYYY/MM/DD'), Null),"   '計算期間FROM
    strSql = strSql & "     NVL(TO_CHAR(TO_DATE(A.KEISAN_TO_YMD,'YYYYMMDD'),'YYYY/MM/DD'), Null),"            '計算期間TO
    
    strSql = strSql & "     A.MIBARAI_KAZEI_TAISHOH_GAKU,"                  '未払課税対象額
    strSql = strSql & "     A.MIBARAI_SHOHIZEI_GAKU,"                       '未払消費税額
    strSql = strSql & "     A.MIBARAI_GENSENZEI_GAKU,"                      '未払源泉税額
    
    strSql = strSql & "     A.SHIHARAI_KAZEI_TAISHOH_GAKU,"                 '当月支払課税対象額
    strSql = strSql & "     A.SHIHARAI_SHOHIZEI_GAKU,"                      '当月支払消費税額
    strSql = strSql & "     A.SHIHARAI_GENSENZEI_GAKU"                      '当月支払源泉税額
    
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_GI_MIBARAI_KANRI  A,"                       '未払管理
    strSql = strSql & "     KYK_CODE_VALUE        B"                        'コード値

    strSql = strSql & " WHERE"
    strSql = strSql & "     A.GI_NO             = B.CODE_VALUE"
    strSql = strSql & " AND B.CODE_NO           = '56'"                     '契約区分 56:外部委託先
    strSql = strSql & " AND B.SAKUJO_FLG        = '0'"
    strSql = strSql & " AND A.SAKUJO_FLG        = '0'"
    
    If strGINo <> "" Then                                                   '外部委託先の指定有無確認
        strSql = strSql & "AND A.GI_NO = '" & func_ChkQuoteshon(strGINo, "'") & "'"
    End If
    
    strSql = strSql & " AND A.SHIHARAI_FLG      = '0'"
    strSql = strSql & " AND A.KEISAN_TO_YMD     = " & lngKijyunbi
    
    strSql = strSql & " ORDER BY"
    strSql = strSql & "     A.GI_NO"
'2008/08/04 Added By H.Anpo Start
    strSql = strSql & "    ,A.GI_SHIHARAI_KIKAN_FROM"
'2008/08/04 Added By H.Anpo End
    
    blnRet = gclsdb.DoExequteSql(MainMenu.gcSELECT, strSql, vntRec, lngCols, lngRows, strErrCd)
    If blnRet = False Then
        fncGetData = -1
        Exit Function
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    fncGetData = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：口座銘柄別の未払額情報取得
'
'引　数　　：ARG1   I   lngKijyunbi Long    基準日
'　　　　　：ARG2   O   vntRec()    Variant 取得データ格納配列
'　　　　　：ARG3   O   lngRows     Long    取得データ数
'　　　　　：ARG4   I   strGINo     String  外部委託先番号
'
'戻り値　　：Long       エラー番号
'
'機能説明　：口座銘柄別の未払額情報を取得する
'
'更新履歴　：2009/02/24 SRA 堀江        新規作成
'
'*************************************************************************
Function fncGetData2(ByVal lngKijyunbi As Long, _
                    ByRef vntRec() As Variant, _
                    ByRef lngRows As Long, _
           Optional ByVal strGINo As String = "") As Long

    Const PROCEDURE_NAME As String = "fncGetData2"
    
On Error GoTo ErrorHandler

    Dim strSql      As String
    Dim lngCols     As Long
    Dim strErrCd    As String
    Dim blnRet      As Boolean
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncGetData2 = 0
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     A.GI_NO,"                                                                       '外部委託先番号
    strSql = strSql & "     B.VALUE_NAME,"                                                                  '外部委託先名
    strSql = strSql & "     A.KOHZA_NO,"                                                                    '口座番号
    strSql = strSql & "     NVL(TO_CHAR(TO_DATE(A.KEISAN_TO_YMD,'YYYYMMDD'),'YYYY/MM/DD'), Null),"          '計算TO
    strSql = strSql & "     A.ISSCD,"                                                                       '銘柄コード
    strSql = strSql & "     A.SHOHIZEI_KAZEI_GO_GAKU"                                                       '未払いライセンスフィー
    
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_GI_SHIHARAI_KEISAN_KOHZA  A,"                                               '外部委託支払計算口座合計
    strSql = strSql & "     KYK_CODE_VALUE                B,"                                               'コード値
    strSql = strSql & "     KYK_GI_MIBARAI_KANRI          C"                                                '未払管理
    
    strSql = strSql & " WHERE"
    strSql = strSql & "     C.GI_NO             = B.CODE_VALUE"
    strSql = strSql & " AND B.CODE_NO           = '56'"                                                     '契約区分 56:外部委託先
    strSql = strSql & " AND B.SAKUJO_FLG        = '0'"
    strSql = strSql & " AND C.SAKUJO_FLG        = '0'"
    
    If strGINo <> "" Then                                                                                   '外部委託先の指定有無確認
        strSql = strSql & "AND C.GI_NO = '" & func_ChkQuoteshon(strGINo, "'") & "'"
    End If
    '2009/03/04 T.Horie added start
    strSql = strSql & "AND A.GI_NO          = C.GI_NO"
    '2009/03/04 T.Horie added end
    
    strSql = strSql & " AND C.SHIHARAI_FLG      = '0'"
    strSql = strSql & " AND C.KEISAN_TO_YMD     = " & lngKijyunbi
    

    strSql = strSql & " AND A.SAKUJO_FLG        = '0'"
    strSql = strSql & " AND A.GI_SHIHARAI_KIKAN_ID     = C.GI_SHIHARAI_KIKAN_ID"
    strSql = strSql & " AND A.KEISAN_TO_YMD     = C.KEISAN_TO_YMD"
    strSql = strSql & " AND A.SHIHARAI_FLG     = C.SHIHARAI_FLG"
    
    strSql = strSql & " ORDER BY"
    strSql = strSql & "     A.GI_NO"
    strSql = strSql & "    ,A.KOHZA_NO"
    strSql = strSql & "    ,A.ISSCD"

    
    blnRet = gclsdb.DoExequteSql(MainMenu.gcSELECT, strSql, vntRec, lngCols, lngRows, strErrCd)
    If blnRet = False Then
        fncGetData2 = -1
        Exit Function
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    fncGetData2 = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：新規ブック作成処理
'
'引　数　　：ARG1   I   SourceSheet1 Excel.Worksheet Templeteシート名1
'          ：ARG2   I   SourceSheet2 Excel.Worksheet Templeteシート名2
'　　　　　：ARG3   I   DestName    String          新規ブック名
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定されたシートを含む新規ブックを作成する
'
'更新履歴　：2008/07/04 SRA 吉井        新規作成
'            2009/02/25 NRI 堀江        更新
'
'*************************************************************************
'2009/02/25 T.Horie was an argument added
Function fncMakeNewFile(ByVal SourceSheet As String, _
                        ByVal SourceSheet2 As String, _
                        ByVal DestName As String) As Long

    Const PROCEDURE_NAME As String = "fncMakeNewFile"
    
On Error GoTo ErrorHandler

    fncMakeNewFile = 0
    
    'Templateシートをコピー
    Workbooks(BOOK_MAIN).Sheets(Array(SourceSheet, SourceSheet2)).Copy  '2009/02/25 T.Horie Updated
    '新規ブックを作成しコピーしたシートを貼り付け
    ActiveWorkbook.SaveAs Filename:=DestName, _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    Exit Function
    
ErrorHandler:
    fncMakeNewFile = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function
