Attribute VB_Name = "bas50Koushin"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料・顧問料率登録
'
'オブジェクト名：bas50Koushin
'
'機能概要　：更新処理
'
'更新履歴　：2007/11/16 SRA 東       新規作成
'
'*************************************************************************

Const MODULE_NAME = "bas50Koushin"





'*************************************************************************
'関数名　　：更新処理メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：更新ボタンを押下された場合の処理
'
'更新履歴　：2007/11/16 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub gsub_KoushinMain(ByRef objTarget As Object)

On Error GoTo Error_Section

    Dim blnRet      As Boolean
    Dim strMsg      As String
    Dim lngRet      As Long
    Dim Rate()      As typRate      '画面の料率一覧格納場所
    
    Dim strRateCode As String
    Dim vDatRate()  As Variant      '取得データ(料率)
    Dim lngDataCnt  As Long         '取得データ数
    
    Erase vDatRate
    
    blnRet = False
    
    lngDataCnt = 0

    Application.ScreenUpdating = False
    
    
    '入力チェック処理(更新時)
    blnRet = gfunc_UpdInputCheck(objTarget, Rate())

    If blnRet = False Then
        Application.ScreenUpdating = True
        Exit Sub
    End If
    
    '検索キー情報取得
    strRateCode = Trim(objTarget.Range("料率コード"))
    
    '検索時と料率コードが異なる場合(新規追加も)登録済チェック
    If ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時料率コード") <> strRateCode Then
    
        'V料率の検索
        blnRet = func_GetRateInfo(strRateCode, vDatRate, lngDataCnt)
                                          
    End If
    
    '更新確認
    If lngDataCnt > 0 Then
        strMsg = gfunc_ErrorMsg(2, 14030, "", "料率コード：" & strRateCode, False)
    Else
        strMsg = gfunc_ErrorMsg(2, 14024, "", "", False)
    End If
    lngRet = MsgBox(strMsg, vbQuestion + vbOKCancel, Application.ActiveWorkbook.Name)
    If lngRet = vbCancel Then
        
        Exit Sub
    End If
    
    blnRet = False
    
    
    '更新処理
    blnRet = gfunc_DoUpdate(objTarget, Rate())

    If blnRet = False Then
    '更新エラー
        Call gfunc_ErrorMsg(1, 14025, "", "", True)

        Application.ScreenUpdating = True

        Exit Sub
    Else
    '更新成功

        'コンボの再設定
        Call gCom01_SheetProtect(objTarget, False)
        Call subIniCombo
        Call gCom01_SheetProtect(objTarget, True)

        '検索時料率コードの設定
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時料率コード") = objTarget.Range("料率コード")

        Application.ScreenUpdating = True

        'メッセージ
        Call gfunc_ErrorMsg(1, 14026, "", "", True)
    End If
    
    Application.ScreenUpdating = True
    
    Exit Sub
Error_Section:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "cmdUp_Click", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Application.ScreenUpdating = True
    


End Sub




'*************************************************************************
'関数名　　：入力チェック処理(更新時)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Rate()              O           画面の料率一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：メインシートの更新時入力チェックを行い
'
'更新履歴　：2007/11/16 SRA Y.Azuma    新規作成
'更新履歴　：2008/01/17 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'更新履歴　：2008/05/16 SRA Y.Azuma    修正　9999999未設定の料率に9999999追加でFROM金額が未設定になる
'
'*************************************************************************
Public Function gfunc_UpdInputCheck(ByRef TargetSheets As Object, ByRef Rate() As typRate) As Boolean
On Error GoTo ErrorSection

    Dim lngRateCnt      As Long     '料率構造体のインデックス
    Dim strWkFrom       As String   '金額範囲Fromワーク
    Dim strWkTo         As String   '金額範囲Toのワーク
    Dim strWkRitsuGaku  As String   '料率(額)のワーク
    Dim strWkRitsu      As String   '料率(％)のワーク
    Dim strWkLineSum    As String   '1行の文字結合ワーク
    Dim lngIntegerLen   As Long     '整数部長さ
    Dim lngDecimalLen   As Long     '小数部長さ
    Dim lngRow          As Long
    Dim lngCol          As Long
    Dim blnRet          As Boolean

    lngRateCnt = 0
    

    gfunc_UpdInputCheck = False
    
    '料率コードの必須チェック & 料率コードの桁数チェック
    blnRet = gfuncRateCodeCodeInputCheck(TargetSheets)
    If blnRet = False Then
        TargetSheets.Range("料率コード").Select
        Exit Function
    End If
    
    blnRet = False
    
    '料率名の必須チェック
    If Trim(TargetSheets.Range("料率名").Value) = "" Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 14006, "料率名", "")
        TargetSheets.Range("料率名").Select
        Exit Function
    End If
    
    '料率名のレングスチェック
    If LenB(StrConv(TargetSheets.Range("料率名").Value, vbFromUnicode)) > 20 Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 14007, "料率名", "全角10文字以内又は半角20文字以内で入力して下さい。")
        TargetSheets.Range("料率名").Select
        Exit Function
    End If
    
    
    ReDim Rate(0)
    
    '最終行の検索
    For lngRow = (START_ROW + ROWS - 1) To START_ROW Step -1
        With TargetSheets
            strWkFrom = Trim(Replace(.Cells(lngRow, .Range("金額From").Column).Value, ",", ""))     '金額範囲Fromワーク
            strWkTo = Trim(Replace(.Cells(lngRow, .Range("金額To").Column).Value, ",", ""))         '金額範囲Toのワーク
            strWkRitsuGaku = Trim(Replace(.Cells(lngRow, .Range("料率額").Column).Value, ",", ""))  '料率(額)のワーク
            strWkRitsu = Trim(Replace(.Cells(lngRow, .Range("料率P").Column).Value, ",", ""))       '料率(％)のワーク
            strWkLineSum = strWkTo & strWkRitsuGaku & strWkRitsu                                    '1行の文字結合ワーク
            
            If Trim(strWkLineSum) <> "" Then
                lngRateCnt = lngRow - START_ROW + 1
                ReDim Rate(lngRateCnt)
                Exit For
            End If
        End With
    Next lngRow
    
    '料率段階一覧チェック１
    lngCol = TargetSheets.Range("金額To").Column
    '① 必須チェック
    If UBound(Rate) = 0 Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 14008, "料率段階", "料率段階を入力して下さい。")
        TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
        Exit Function
    End If
    
    lngRateCnt = 0
    '一覧データの格納
    For lngRow = START_ROW To (START_ROW + UBound(Rate) - 1)
        lngRateCnt = lngRateCnt + 1
        With TargetSheets
            lngCol = TargetSheets.Range("金額To").Column
            strWkFrom = Trim(Replace(.Cells(lngRow, .Range("金額From").Column).Value, ",", ""))     '金額範囲Fromワーク
            strWkTo = Trim(Replace(.Cells(lngRow, .Range("金額To").Column).Value, ",", ""))         '金額範囲Toのワーク
            strWkRitsuGaku = Trim(Replace(.Cells(lngRow, .Range("料率額").Column).Value, ",", ""))  '料率(額)のワーク
            strWkRitsu = Trim(Replace(.Cells(lngRow, .Range("料率P").Column).Value, ",", ""))       '料率(％)のワーク
            strWkLineSum = strWkTo & strWkRitsuGaku & strWkRitsu                                    '1行の文字結合ワーク
            
            '② 空行チェック
            If Trim(strWkLineSum) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 14009, "料率段階", lngRateCnt & "行目")
                TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                Exit Function
            End If
            
            '金額範囲・TO金額チェック
            '① 必須チェック
            '    TO金額が未入力の場合エラーメッセージを表示する。
            If Trim(strWkTo) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 14010, "金額範囲・TO金額", lngRateCnt & "行目")
                TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                Exit Function
            Else
            
                '② 数値チェック
                '   TO金額が数値以外の場合エラーメッセージを表示する。
'------------<Modify Start azuma 2008/01/17 (PH4)> ★★★☆-----------------------
'                If IsNumeric(strWkTo) = False Then
                If gkyk_IsNumeric(strWkTo) = False Then
'------------<Modify End   azuma 2008/01/17 (PH4)> ★★★☆-----------------------
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14011, "金額範囲・TO金額", lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
                
                '③ 桁数チェック
                lngIntegerLen = 0
                lngDecimalLen = 0
                Call sub_CheckIntDec(strWkTo, lngIntegerLen, lngDecimalLen)
'------------<Modify 1兆円超対応20080218 Start azuma 2008/05/16 > ★★★☆-----------------------
                '整数部が7桁を超える場合、以下のエラーメッセージを表示する。
                If lngIntegerLen > 7 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14012, "金額範囲・TO金額", "整数部は、7桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
'''                '整数部が8桁を超える場合、以下のエラーメッセージを表示する。
'''                If lngIntegerLen > 8 Then
'''                    Application.ScreenUpdating = True
'''                    Call gfunc_ErrorMsg(3, 14012, "金額範囲・TO金額", "整数部は、8桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
'''                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
'''                    Exit Function
'''                End If
'------------<Modify 1兆円超対応20080218 End   azuma 2008/05/16 > ★★★☆-----------------------
                
                '小数部が7桁を超える場合、以下のエラーメッセージを表示する。
                '        「金額範囲・TO金額：入力桁数が不正です。少数点以下は、7桁以下で入力して下さい。」
                If lngDecimalLen > 7 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14013, "金額範囲・TO金額", "少数点以下は、7桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            
            
'------------<Delete 1兆円超対応20080218 2008/04/01 SRA市川 Start > ----------------------------------------
''                '④ 最終行チェック
'''------------<Modify 1兆円超対応20080218 2008/02/29 SRA市川 Start > ----------------------------------------
'''                '   最終設定行の時に値が'99999'と一致しない場合以下のエラーメッセージを表示する。
'''                If lngRow = (START_ROW + UBound(Rate) - 1) Then
'''                    If strWkTo <> "99999" Then
'''                        Application.ScreenUpdating = True
'''                        Call gfunc_ErrorMsg(3, 14014, "金額範囲・TO金額", "最終行のTO金額には、99999を設定して下さい。" & vbCrLf & lngRateCnt & "行目")
''
''                '   最終設定行の時に値が'9999999'と一致しない場合以下のエラーメッセージを表示する。
''                If lngRow = (START_ROW + UBound(Rate) - 1) Then
''                    If strWkTo <> "9999999" Then
''                        Application.ScreenUpdating = True
''                        Call gfunc_ErrorMsg(3, 14014, "金額範囲・TO金額", "最終行のTO金額には、9999999を設定して下さい。" & vbCrLf & lngRateCnt & "行目")
''
'''------------<Modify 1兆円超対応20080218 2008/02/29 SRA市川 End   > ----------------------------------------
''                        TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
''                        Exit Function
''                    End If
''                End If
'------------<Delete 1兆円超対応20080218 2008/04/01 SRA市川 End   > ----------------------------------------
                
                
'------------<Modify 1兆円超対応20080218 Start azuma 2008/05/16 > ★★★☆-----------------------
                '最終行('9999999')以降に行が存在している場合エラー
                If Rate(lngRateCnt - 1).strTo = "9999999" Then
                    If Trim(strWkTo) <> "" Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 14041, "金額範囲・TO金額", "最終行の""9,999,999""以降に段階は設定出来ません。" & vbCrLf & lngRateCnt & "行目")
                        TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                        Exit Function
                    End If
                End If
'------------<Modify 1兆円超対応20080218 End   azuma 2008/05/16 > ★★★☆-----------------------
                
                
                '金額範囲重複チェック
                ' 2行目以降で「前行の金額範囲・TO金額」≧「現在行の金額範囲・TO金額」の場合、
                ' エラーメッセージを表示する｡
                '    「金額範囲：入力値が不正です。金額範囲が不連続又は重複しています。Ｎ行目とＭ行目」
                If lngRateCnt > 1 Then
                    If CDbl(Rate(lngRateCnt - 1).strTo) >= CDbl(strWkTo) Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 14014, "金額範囲・TO金額", "金額範囲が不連続又は重複しています" & vbCrLf & lngRateCnt - 1 & "行目と" & lngRateCnt & "行目")
                        TargetSheets.Range(Cells(lngRow - 1, lngCol), Cells(lngRow - 1, lngCol)).Select
                        Exit Function
                    End If
                End If
                
            End If
            
            '料率（金額）チェック
            lngCol = TargetSheets.Range("料率額").Column
            '① 排他必須チェック
            '   料率(金額)、料率(％)共に未入力(空)の場合エラーメッセージを表示する｡
            If Trim(strWkRitsuGaku) = "" And Trim(strWkRitsu) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 14015, "料率(金額)、料率(％)", lngRateCnt & "行目")
                TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                Exit Function
            End If
            
            '  両方共にゼロ以外が設定されている場合エラーメッセージを表示する｡
            If Trim(strWkRitsuGaku) <> "" And Trim(strWkRitsu) <> "" Then
                If Trim(strWkRitsuGaku) <> "0" And Trim(strWkRitsu) <> "0" Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14016, "料率(金額)、料率(％)", "料率(金額)、料率(％)どちらかのみ設定して下さい。" & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            End If
            
            
            If Trim(strWkRitsuGaku) <> "" Then
                
                '② 数値チェック
                '  料率(金額)をIsNumeric関数で評価しFalseの場合、エラーメッセージを表示する。
'------------<Modify Start azuma 2008/01/17 (PH4)> ★★★☆-----------------------
'                If IsNumeric(strWkRitsuGaku) = False Then
                If gkyk_IsNumeric(strWkRitsuGaku) = False Then
'------------<Modify End   azuma 2008/01/17 (PH4)> ★★★☆-----------------------
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14017, "料率(金額)", lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            
                '③ 桁数チェック
                lngIntegerLen = 0
                lngDecimalLen = 0
                Call sub_CheckIntDec(strWkRitsuGaku, lngIntegerLen, lngDecimalLen)
                
                '  整数部が12桁を超える場合、エラーメッセージを表示する。
                If lngIntegerLen > 12 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14018, "料率(金額)", "整数部は、12桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
                
                '  小数部が3桁を超える場合、エラーメッセージを表示する。
                If lngDecimalLen > 3 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14019, "料率(金額)", "少数点以下は、3桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            Else
                strWkRitsuGaku = "0"
            End If
            
            '料率(％)チェック
            lngCol = TargetSheets.Range("料率P").Column
            ' ① 排他必須チェック
            '  料率(金額)、料率(％)共に未入力(空)の場合、又は両方共にゼロ以外が設定されている場合、
            '  エラーメッセージを表示する｡
            '   ※料率(金額)でチェック済みのためチェックしない
            
            If Trim(strWkRitsu) <> "" Then
                '② 数値チェック
                '  料率(％)をIsNumeric関数で評価しFalseの場合、エラーメッセージを表示する。
'------------<Modify Start azuma 2008/01/17 (PH4)> ★★★☆-----------------------
'                If IsNumeric(strWkRitsu) = False Then
                If gkyk_IsNumeric(strWkRitsu) = False Then
'------------<Modify End   azuma 2008/01/17 (PH4)> ★★★☆-----------------------
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14020, "料率(％)", lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            
                '③ 桁数チェック
                lngIntegerLen = 0
                lngDecimalLen = 0
                Call sub_CheckIntDec(strWkRitsu, lngIntegerLen, lngDecimalLen)
                
                '整数部が3桁を超える場合、エラーメッセージを表示する。
                If lngIntegerLen > 3 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14021, "料率(％)", "整数部は、3桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
                
                '小数部が4桁を超える場合、エラーメッセージを表示する。
                If lngDecimalLen > 4 Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 14022, "料率(％)", "少数点以下は、4桁以下で入力して下さい。" & vbCrLf & lngRateCnt & "行目")
                    TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                    Exit Function
                End If
            Else
                strWkRitsu = "0"
            End If
            
'------------<Modify 1兆円超対応20080218 Start azuma 2008/05/16 > ★★★☆-----------------------
            '金額Fromが未設定かどうかのチェック
            If Trim(strWkFrom) = "" And Trim(strWkLineSum) <> "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 14040, "金額範囲・FROM金額", "FROM金額が設定されているか再確認して下さい。" & lngRateCnt & "行目")
                TargetSheets.Range(Cells(lngRow, lngCol), Cells(lngRow, lngCol)).Select
                Exit Function
            End If
'------------<Modify 1兆円超対応20080218 End   azuma 2008/05/16 > ★★★☆-----------------------
            
            
            With Rate(lngRateCnt)
                .lngDankai = lngRateCnt
                .strFrom = strWkFrom
                .strTo = strWkTo
                .strRitsuGaku = strWkRitsuGaku
                .strRitsu = strWkRitsu
            End With
        End With
    Next lngRow
    

    gfunc_UpdInputCheck = True

    Exit Function

ErrorSection:

    gfunc_UpdInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_UpdInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function




'*************************************************************************
'関数名　　：更新処理(メイン)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Rate()              I           画面の料率一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：更新
'
'更新履歴　：2007/11/16 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_DoUpdate(ByRef TargetSheets As Object, ByRef Rate() As typRate) As Boolean


On Error GoTo ErrorSection

    Dim dtKoushinYmdFirst   As Date         '検索時　更新日付
    Dim strRateCd           As String       '料率コード
    Dim strError            As String
    Dim lngStatus           As Long         '更新済みチェックのステータス
    Dim lngMsgId            As Long         'エラーメッセージID
    Dim strDate             As String
    Dim strTime             As String
    Dim blnInsFlg           As Boolean      '新規登録フラグ(True:Insert,False:Update)
    Dim lngRow              As Long


    gfunc_DoUpdate = False
    
    blnInsFlg = False


    '料率コード　取得
    strRateCd = Trim(TargetSheets.Range("料率コード").Value)


    'トランザクション開始
    cnAdo.BeginTrans

    

    '料率テーブルへの処理
    If func_KYK_RATE(TargetSheets _
                   , strRateCd _
                   , Rate() _
                   , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If


    'コミット
    cnAdo.CommitTrans


    gfunc_DoUpdate = True

    Exit Function

RollbackSection:
    'ロールバック
    cnAdo.RollbackTrans

    gfunc_DoUpdate = False
    Exit Function

ErrorSection:

    gfunc_DoUpdate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_DoUpdate", Err.Number, Err.Description)
    On Error GoTo 0
    On Error Resume Next
    'ロールバック
    cnAdo.RollbackTrans
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------



End Function



'*************************************************************************
'関数名　　：料率テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strRateCd           I       料率コード
'           Rate()              I       料率データ
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：料率テーブルへの登録を行う
'
'更新履歴　：2007/11/16 SRA Y.Azuma    新規作成
'更新履歴　：2008/01/17 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'
'*************************************************************************
Private Function func_KYK_RATE(ByVal TargetSheets As Object _
                           , ByVal strRateCd As String _
                           , ByRef Rate() As typRate _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim lngDankai               As Long
    Dim strNo                   As String
    Dim strRateName             As String


    func_KYK_RATE = False


    strRateName = func_ChkQuoteshon(Trim(TargetSheets.Range("料率名").Value), "'")
    
    
    strSql = ""
    strSql = strSql & " UPDATE  " & TBL_RATE
    strSql = strSql & "    SET  "
    strSql = strSql & "        RATE_NAME         = '" & strRateName & "'"
    For lngDankai = 1 To 20
        strNo = CStr(Format(lngDankai, "00"))
        If lngDankai <= UBound(Rate) Then
            strSql = strSql & "        ,KINGAKU_FROM_" & strNo & "   = " & Rate(lngDankai).strFrom
            strSql = strSql & "        ,KINGAKU_TO_" & strNo & "     = " & Rate(lngDankai).strTo
            strSql = strSql & "        ,RITSU_GAKU_" & strNo & "     = " & Rate(lngDankai).strRitsuGaku
            strSql = strSql & "        ,RITSU_" & strNo & "          = " & Rate(lngDankai).strRitsu
        Else
            strSql = strSql & "        ,KINGAKU_FROM_" & strNo & "   = 0"
            strSql = strSql & "        ,KINGAKU_TO_" & strNo & "     = 0"
            strSql = strSql & "        ,RITSU_GAKU_" & strNo & "     = 0"
            strSql = strSql & "        ,RITSU_" & strNo & "          = 0"
        End If
    Next lngDankai
    strSql = strSql & "        ,RYO_TUUKA         = '000'"
    strSql = strSql & "        ,KOHSHIN_YMD       = SYSDATE"
    strSql = strSql & "        ,KOHSHIN_PGM_ID    = '" & UPDATE_PGM_ID & "'"
    strSql = strSql & "        ,KOHSHIN_TANTOHSHA = '" & UPDATE_USER & "'"
    strSql = strSql & "        ,SAKUJO_FLG        = '0'"
'------------<Modify Start azuma 2008/01/17 (PH4)> ★★★☆-----------------------
    strSql = strSql & " WHERE   RATE_CODE         ='" & func_ChkQuoteshon(strRateCd, "'") & "'"
'    strSql = strSql & " WHERE   RATE_CODE         ='" & strRateCd & "'"
'------------<Modify End   azuma 2008/01/17 (PH4)> ★★★☆-----------------------
    

    '実行
    If Trim(strSql) <> "" Then
        blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)

        If blnRet = False Then
    
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
    
            Exit Function
        End If
    End If


    If lngRow = 0 Then
        '登録
        strSql = ""
        strSql = strSql & " INSERT INTO " & TBL_RATE & " ("
        strSql = strSql & " RATE_CODE "
        strSql = strSql & ",RATE_NAME "
        For lngDankai = 1 To 20
            strNo = CStr(Format(lngDankai, "00"))
            strSql = strSql & "        ,KINGAKU_FROM_" & strNo
            strSql = strSql & "        ,KINGAKU_TO_" & strNo
            strSql = strSql & "        ,RITSU_GAKU_" & strNo
            strSql = strSql & "        ,RITSU_" & strNo
        Next lngDankai
        strSql = strSql & " ,RYO_TUUKA "
        strSql = strSql & " ,TOHROKU_YMD "
        strSql = strSql & " ,KOHSHIN_YMD "
        strSql = strSql & " ,KOHSHIN_PGM_ID "
        strSql = strSql & " ,KOHSHIN_TANTOHSHA "
        strSql = strSql & " ,SAKUJO_FLG"
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "  ("
'------------<Modify Start azuma 2008/01/17 (PH4)> ★★★☆-----------------------
'        strSql = strSql & " '" & strRateCd & "'"
        strSql = strSql & " '" & func_ChkQuoteshon(strRateCd, "'") & "'"
'------------<Modify End   azuma 2008/01/17 (PH4)> ★★★☆-----------------------
        strSql = strSql & ",'" & strRateName & "'"
        For lngDankai = 1 To 20
            If lngDankai <= UBound(Rate) Then
                strSql = strSql & "        , " & Rate(lngDankai).strFrom
                strSql = strSql & "        , " & Rate(lngDankai).strTo
                strSql = strSql & "        , " & Rate(lngDankai).strRitsuGaku
                strSql = strSql & "        , " & Rate(lngDankai).strRitsu
            Else
                strSql = strSql & "        , 0"
                strSql = strSql & "        , 0"
                strSql = strSql & "        , 0"
                strSql = strSql & "        , 0"
            End If
        Next lngDankai
        
        strSql = strSql & ",'000'"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",    '0'"
        strSql = strSql & " )"

        
        '実行
        If Trim(strSql) <> "" Then
            blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
    
            If blnRet = False Then
        
                If Trim(strErrCode) <> "" Then
                    strError = strErrCode
                End If
        
                Exit Function
            End If
        End If
        
    End If

    Erase vData

    func_KYK_RATE = True

    Exit Function

ErrorSection:

    func_KYK_RATE = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_RATE", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

    Erase vData


End Function



'*************************************************************************
'関数名　　：整数部、小数部桁取得
'
'引　　数　：
'           strWkTo             I       数値文字列
'           lngIntegerLen       O       整数部桁数
'           lngDecimalLen       O       小数部桁数
'
'戻り値　　：なし
'
'機能説明　：検索時更新日付を取得する
'
'更新履歴　：2007/11/16 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Sub sub_CheckIntDec(ByVal strWork As String, ByRef lngIntegerLen As Long, ByRef lngDecimalLen As Long)
    
    If InStr(1, strWork, ".") = 0 Then
        lngDecimalLen = 0
        lngIntegerLen = Len(strWork)
    Else
        lngDecimalLen = (Len(strWork) - InStr(1, strWork, "."))
        lngIntegerLen = (Len(strWork) - (lngDecimalLen + 1))
    End If
    

End Sub
