Attribute VB_Name = "basRyoritsu"
Option Explicit
'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・請求書作成指示
'
'オブジェクト名：basRyoritsu
'
'機能概要　：KYK_RATEから段階を取得する。
'
'更新履歴　：2007/03/29 SRA 東       新規作成
'
'*************************************************************************
Const MODULE_NAME = "basRyoritsu"

'*************************************************************************
'関数名　　：料率段階取得
'
'引　　数　：
'           strRyoritsuCd   I       料率コード
'           strKohzaList()  I       処理対象口座配列配列
'           lngKKCnt        I       処理対象口座配列配列の添え字
'           strRyoritsu()   O       結果配列(金額文字列、税込料率、税抜料率)
'
'戻り値　　：Boolean
'
'機能説明　：投資資産内訳書の料率段階表示用に一覧を取得する。
'
'更新履歴　：2007/03/29 SRA Y.Azuma    新規作成
'更新履歴　：2007/04/17 SRA Y.Azuma    変更     (PH3)消費税率取得方法の統一
'更新履歴　：2007/12/06 SRA Y.Azuma    変更     (PH4)PH4対応
'
'*************************************************************************
Public Function sub_Ryoritsu(ByVal strRyoritsuCd As String _
                           , ByRef strKohzaList() As String _
                           , ByVal lngKKCnt As Long _
                           , ByRef strRyoritsu() As String) As Boolean
On Error GoTo ErrHandler

    Const PROCEDURE_NAME = "sub_Ryoritsu"
    Dim strSql      As String
    Dim vdata()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim strKijunDay As String   '<------------ Modify azuma 2007/04/17
    
    
    sub_Ryoritsu = False
    
'*******************************************************
'* 関数開始　                                        　*
'*******************************************************
    
'------------<Modify Start azuma 2007/04/17 (PH3)> -----------------------
    '基準日として「請求書期間From」を使う
    strKijunDay = strKohzaList(0, KOHZALIST_SEIKYUSHO_KIKAN_FROM)
'------------<Modify End   azuma 2007/04/17 (PH3)> -----------------------
    
    
'------------<Modify Start azuma 2007/12/06 (PH4)> ★★★☆-----------------------
''''    strSql = ""
''''    strSql = strSql & " SELECT"
''''    strSql = strSql & "     RYORITSU_CD,"
''''    strSql = strSql & "     DANKAI,"
''''    strSql = strSql & "     KINGAKU_FROM,"
''''    strSql = strSql & "     KINGAKU_TO,"
''''    strSql = strSql & "     case when RITSU>0 then TO_CHAR(RITSU*(1+A.SHOUHI_ZEI/100),'0.000000')||'%' else TO_CHAR(RITSU_GAKU/10*(1+A.SHOUHI_ZEI/100))||'万円' end AS RITSU_EDIT_ZEIKOMI,"
''''    strSql = strSql & "     case when RITSU>0 then TO_CHAR(RITSU,'0.0000')||'%'                        else TO_CHAR(RITSU_GAKU/10)||'万円'                      end AS RITSU_EDIT,"
''''    strSql = strSql & "     RYO_TUUKA "
''''    strSql = strSql & " from ("
''''    strSql = strSql & "       SELECT RYORITSU_CD ,  1  AS DANKAI , KINGAKU_FROM_01 AS KINGAKU_FROM , KINGAKU_TO_01 AS KINGAKU_TO , RITSU_GAKU_01 AS RITSU_GAKU , RITSU_01  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  2  AS DANKAI , KINGAKU_FROM_02 AS KINGAKU_FROM , KINGAKU_TO_02 AS KINGAKU_TO , RITSU_GAKU_02 AS RITSU_GAKU , RITSU_02  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  3  AS DANKAI , KINGAKU_FROM_03 AS KINGAKU_FROM , KINGAKU_TO_03 AS KINGAKU_TO , RITSU_GAKU_03 AS RITSU_GAKU , RITSU_03  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  4  AS DANKAI , KINGAKU_FROM_04 AS KINGAKU_FROM , KINGAKU_TO_04 AS KINGAKU_TO , RITSU_GAKU_04 AS RITSU_GAKU , RITSU_04  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  5  AS DANKAI , KINGAKU_FROM_05 AS KINGAKU_FROM , KINGAKU_TO_05 AS KINGAKU_TO , RITSU_GAKU_05 AS RITSU_GAKU , RITSU_05  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  6  AS DANKAI , KINGAKU_FROM_06 AS KINGAKU_FROM , KINGAKU_TO_06 AS KINGAKU_TO , RITSU_GAKU_06 AS RITSU_GAKU , RITSU_06  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  7  AS DANKAI , KINGAKU_FROM_07 AS KINGAKU_FROM , KINGAKU_TO_07 AS KINGAKU_TO , RITSU_GAKU_07 AS RITSU_GAKU , RITSU_07  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  8  AS DANKAI , KINGAKU_FROM_08 AS KINGAKU_FROM , KINGAKU_TO_08 AS KINGAKU_TO , RITSU_GAKU_08 AS RITSU_GAKU , RITSU_08  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD ,  9  AS DANKAI , KINGAKU_FROM_09 AS KINGAKU_FROM , KINGAKU_TO_09 AS KINGAKU_TO , RITSU_GAKU_09 AS RITSU_GAKU , RITSU_09  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 10  AS DANKAI , KINGAKU_FROM_10 AS KINGAKU_FROM , KINGAKU_TO_10 AS KINGAKU_TO , RITSU_GAKU_10 AS RITSU_GAKU , RITSU_10  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 11  AS DANKAI , KINGAKU_FROM_11 AS KINGAKU_FROM , KINGAKU_TO_11 AS KINGAKU_TO , RITSU_GAKU_11 AS RITSU_GAKU , RITSU_11  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 12  AS DANKAI , KINGAKU_FROM_12 AS KINGAKU_FROM , KINGAKU_TO_12 AS KINGAKU_TO , RITSU_GAKU_12 AS RITSU_GAKU , RITSU_12  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 13  AS DANKAI , KINGAKU_FROM_13 AS KINGAKU_FROM , KINGAKU_TO_13 AS KINGAKU_TO , RITSU_GAKU_13 AS RITSU_GAKU , RITSU_13  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 14  AS DANKAI , KINGAKU_FROM_14 AS KINGAKU_FROM , KINGAKU_TO_14 AS KINGAKU_TO , RITSU_GAKU_14 AS RITSU_GAKU , RITSU_14  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 15  AS DANKAI , KINGAKU_FROM_15 AS KINGAKU_FROM , KINGAKU_TO_15 AS KINGAKU_TO , RITSU_GAKU_15 AS RITSU_GAKU , RITSU_15  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 16  AS DANKAI , KINGAKU_FROM_16 AS KINGAKU_FROM , KINGAKU_TO_16 AS KINGAKU_TO , RITSU_GAKU_16 AS RITSU_GAKU , RITSU_16  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 17  AS DANKAI , KINGAKU_FROM_17 AS KINGAKU_FROM , KINGAKU_TO_17 AS KINGAKU_TO , RITSU_GAKU_17 AS RITSU_GAKU , RITSU_17  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 18  AS DANKAI , KINGAKU_FROM_18 AS KINGAKU_FROM , KINGAKU_TO_18 AS KINGAKU_TO , RITSU_GAKU_18 AS RITSU_GAKU , RITSU_18  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 19  AS DANKAI , KINGAKU_FROM_19 AS KINGAKU_FROM , KINGAKU_TO_19 AS KINGAKU_TO , RITSU_GAKU_19 AS RITSU_GAKU , RITSU_19  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " UNION SELECT RYORITSU_CD , 20  AS DANKAI , KINGAKU_FROM_20 AS KINGAKU_FROM , KINGAKU_TO_20 AS KINGAKU_TO , RITSU_GAKU_20 AS RITSU_GAKU , RITSU_20  AS RITSU , RYO_TUUKA FROM KK33 "
''''    strSql = strSql & " )"
''''    strSql = strSql & " ,SHOUHI_ZEI A"
''''    strSql = strSql & " WHERE (KINGAKU_FROM <> 0"
''''    strSql = strSql & "    OR KINGAKU_TO   <> 0"
''''    strSql = strSql & "    OR RITSU_GAKU   <> 0"
''''    strSql = strSql & "    OR RITSU        <> 0)"
''''    strSql = strSql & "   AND RYORITSU_CD = '" & Right(String(3, "0") & strRyoritsuCd, 3) & "'"
''''    strSql = strSql & "   AND A.KIJYUN_YMD = (SELECT"
''''    strSql = strSql & "                         max(KIJYUN_YMD)"
''''    strSql = strSql & "                     FROM"
''''    strSql = strSql & "                         SHOUHI_ZEI"
''''    strSql = strSql & "                     WHERE"
'''''------------<Modify Start azuma 2007/04/17 (PH3)> -----------------------
''''    strSql = strSql & "                         KIJYUN_YMD<=to_char('" & strKijunDay & "'))"
'''''    strSql = strSql & "                         KIJYUN_YMD<to_char(sysdate,'yyyymmdd'))"
'''''------------<Modify End   azuma 2007/04/17 (PH3)> -----------------------
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     RATE_CODE,"
    strSql = strSql & "     DANKAI,"
    strSql = strSql & "     KINGAKU_FROM,"
    strSql = strSql & "     KINGAKU_TO,"
    strSql = strSql & "     case when RITSU>0 then TO_CHAR(RITSU*(1+A.ZEI/100),'0.000000')||'%' else TO_CHAR(RITSU_GAKU/10*(1+A.ZEI/100))||'万円' end AS RITSU_EDIT_ZEIKOMI,"
    strSql = strSql & "     case when RITSU>0 then TO_CHAR(RITSU,'0.0000')||'%'                        else TO_CHAR(RITSU_GAKU/10)||'万円'        end AS RITSU_EDIT,"
    strSql = strSql & "     RYO_TUUKA "
    strSql = strSql & " from ("
    strSql = strSql & "       SELECT RATE_CODE ,  1  AS DANKAI , KINGAKU_FROM_01 AS KINGAKU_FROM , KINGAKU_TO_01 AS KINGAKU_TO , RITSU_GAKU_01 AS RITSU_GAKU , RITSU_01  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  2  AS DANKAI , KINGAKU_FROM_02 AS KINGAKU_FROM , KINGAKU_TO_02 AS KINGAKU_TO , RITSU_GAKU_02 AS RITSU_GAKU , RITSU_02  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  3  AS DANKAI , KINGAKU_FROM_03 AS KINGAKU_FROM , KINGAKU_TO_03 AS KINGAKU_TO , RITSU_GAKU_03 AS RITSU_GAKU , RITSU_03  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  4  AS DANKAI , KINGAKU_FROM_04 AS KINGAKU_FROM , KINGAKU_TO_04 AS KINGAKU_TO , RITSU_GAKU_04 AS RITSU_GAKU , RITSU_04  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  5  AS DANKAI , KINGAKU_FROM_05 AS KINGAKU_FROM , KINGAKU_TO_05 AS KINGAKU_TO , RITSU_GAKU_05 AS RITSU_GAKU , RITSU_05  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  6  AS DANKAI , KINGAKU_FROM_06 AS KINGAKU_FROM , KINGAKU_TO_06 AS KINGAKU_TO , RITSU_GAKU_06 AS RITSU_GAKU , RITSU_06  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  7  AS DANKAI , KINGAKU_FROM_07 AS KINGAKU_FROM , KINGAKU_TO_07 AS KINGAKU_TO , RITSU_GAKU_07 AS RITSU_GAKU , RITSU_07  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  8  AS DANKAI , KINGAKU_FROM_08 AS KINGAKU_FROM , KINGAKU_TO_08 AS KINGAKU_TO , RITSU_GAKU_08 AS RITSU_GAKU , RITSU_08  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE ,  9  AS DANKAI , KINGAKU_FROM_09 AS KINGAKU_FROM , KINGAKU_TO_09 AS KINGAKU_TO , RITSU_GAKU_09 AS RITSU_GAKU , RITSU_09  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 10  AS DANKAI , KINGAKU_FROM_10 AS KINGAKU_FROM , KINGAKU_TO_10 AS KINGAKU_TO , RITSU_GAKU_10 AS RITSU_GAKU , RITSU_10  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 11  AS DANKAI , KINGAKU_FROM_11 AS KINGAKU_FROM , KINGAKU_TO_11 AS KINGAKU_TO , RITSU_GAKU_11 AS RITSU_GAKU , RITSU_11  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 12  AS DANKAI , KINGAKU_FROM_12 AS KINGAKU_FROM , KINGAKU_TO_12 AS KINGAKU_TO , RITSU_GAKU_12 AS RITSU_GAKU , RITSU_12  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 13  AS DANKAI , KINGAKU_FROM_13 AS KINGAKU_FROM , KINGAKU_TO_13 AS KINGAKU_TO , RITSU_GAKU_13 AS RITSU_GAKU , RITSU_13  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 14  AS DANKAI , KINGAKU_FROM_14 AS KINGAKU_FROM , KINGAKU_TO_14 AS KINGAKU_TO , RITSU_GAKU_14 AS RITSU_GAKU , RITSU_14  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 15  AS DANKAI , KINGAKU_FROM_15 AS KINGAKU_FROM , KINGAKU_TO_15 AS KINGAKU_TO , RITSU_GAKU_15 AS RITSU_GAKU , RITSU_15  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 16  AS DANKAI , KINGAKU_FROM_16 AS KINGAKU_FROM , KINGAKU_TO_16 AS KINGAKU_TO , RITSU_GAKU_16 AS RITSU_GAKU , RITSU_16  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 17  AS DANKAI , KINGAKU_FROM_17 AS KINGAKU_FROM , KINGAKU_TO_17 AS KINGAKU_TO , RITSU_GAKU_17 AS RITSU_GAKU , RITSU_17  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 18  AS DANKAI , KINGAKU_FROM_18 AS KINGAKU_FROM , KINGAKU_TO_18 AS KINGAKU_TO , RITSU_GAKU_18 AS RITSU_GAKU , RITSU_18  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 19  AS DANKAI , KINGAKU_FROM_19 AS KINGAKU_FROM , KINGAKU_TO_19 AS KINGAKU_TO , RITSU_GAKU_19 AS RITSU_GAKU , RITSU_19  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " UNION SELECT RATE_CODE , 20  AS DANKAI , KINGAKU_FROM_20 AS KINGAKU_FROM , KINGAKU_TO_20 AS KINGAKU_TO , RITSU_GAKU_20 AS RITSU_GAKU , RITSU_20  AS RITSU , RYO_TUUKA FROM KYK_RATE "
    strSql = strSql & " )"
    strSql = strSql & " ,KYK_SHOHIZEI A"
    strSql = strSql & " WHERE (KINGAKU_FROM <> 0"
    strSql = strSql & "    OR KINGAKU_TO   <> 0"
    strSql = strSql & "    OR RITSU_GAKU   <> 0"
    strSql = strSql & "    OR RITSU        <> 0)"
    strSql = strSql & "   AND RATE_CODE = '" & Right(String(3, "0") & strRyoritsuCd, 3) & "'"
    strSql = strSql & "   AND A.TEKIYOH_KIKAN_FROM <= " & strKijunDay
    strSql = strSql & "   AND A.TEKIYOH_KIKAN_TO   >= " & strKijunDay
'------------<Modify End   azuma 2007/12/06 (PH4)> ★★★☆-----------------------
    
    
    'データ取得
    Call gclsDB.DoExequteSql(gcSELECT, strSql, vdata, lngCol, lngRow)
    
    '取得データをセルに設定
    If lngRow > 0 Then
        ReDim strRyoritsu(lngRow - 1, 2)
        For lngCnt = 0 To lngRow - 1
            strRyoritsu(lngCnt, 0) = func_RyorituDankaiEdit(CDbl(vdata(2, lngCnt)), CDbl(vdata(3, lngCnt)), CStr(vdata(6, lngCnt)))
            strRyoritsu(lngCnt, 1) = CStr(vdata(4, lngCnt))
            strRyoritsu(lngCnt, 2) = CStr(vdata(5, lngCnt))
        Next lngCnt
    End If
    
    Erase vdata
    
    sub_Ryoritsu = True
    
    Exit Function
ErrHandler:

    sub_Ryoritsu = False
    Erase vdata
'Debug.Print strSql
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "sub_Ryoritsu", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------



End Function


'------------<Modify Start azuma 2007/12/06 (PH4)> ★★★☆-----------------------
'''''*************************************************************************
'''''関数名　　：料率段階文字列編集
'''''
'''''引　　数　：
'''''           dblKingakuFrom  I       段階金額From
'''''           dblKingakuTo    I       段階金額To
'''''           strTukaCd       I       KYK_RATEの通貨コード(デフォルト"000"日本)
'''''
'''''戻り値　　：料率段階文字列　例)　10億円超　20億円以下の金額
'''''
'''''機能説明　：PK_NAME.SF_KUBUN_EDITをVBに移植
'''''
'''''更新履歴　：2007/03/29 SRA Y.Azuma    新規作成
'''''
'''''*************************************************************************
''''Public Function func_RyorituDankaiEdit(ByVal dblKingakuFrom As Double _
''''                                     , ByVal dblKingakuTo As Double _
''''                                     , Optional strTukaCd As String = "000") As String
''''
''''    Dim strTuka             As String   '通貨単位文字
''''    Dim dblKingakuFrom_w    As Double   '金額Fromワーク
''''    Dim dblKingakuTo_w      As Double   '金額Toワーク
''''    Dim strKingakuFrom_w    As String   '金額Fromワーク
''''    Dim strKingakuTo_w      As String   '金額Toワーク
''''
''''    Dim strResutl           As String   '結果
''''
''''
''''    If dblKingakuFrom = 0 And dblKingakuTo = 0 Then
''''        func_RyorituDankaiEdit = ""
''''        Exit Function
''''    End If
''''
''''    '/*通貨名称の取得*/
''''    strTuka = func_GetTukaName(strTukaCd)
''''
''''    '/*表示書式編集（kingaku_from）*/
''''    dblKingakuFrom_w = dblKingakuFrom / 10
''''    If dblKingakuFrom_w < 1 Then
''''        strKingakuFrom_w = CStr(Format(dblKingakuFrom_w, "0.9"))
''''    Else
''''        strKingakuFrom_w = CStr(dblKingakuFrom_w)
''''    End If
''''
''''    '/*表示書式編集（kingaku_to）*/
''''    dblKingakuTo_w = dblKingakuTo / 10
''''    If dblKingakuTo_w < 1 Then
''''        strKingakuTo_w = CStr(Format(dblKingakuTo_w, "0.9"))
''''    Else
''''        strKingakuTo_w = CStr(dblKingakuTo_w)
''''    End If
''''
''''    '/*区分内容の設定*/
''''    If dblKingakuFrom = 0 And dblKingakuTo >= 99999 Then
''''        strResutl = "　　本契約資産額に対し"
''''
''''    ElseIf dblKingakuFrom = 0 And dblKingakuTo < 99999 Then
''''        strResutl = "　" & Right(String(4, " ") & strKingakuTo_w, 4) & "億" & Trim(strTuka) & "以下の金額"
''''
''''    ElseIf dblKingakuFrom > 0 And dblKingakuTo < 99999 Then
''''        strResutl = "　" & Right(String(4, " ") & strKingakuFrom_w, 4) & "億" & Trim(strTuka) & "超" & Right(String(4, " ") & strKingakuTo_w, 4) & "億" & Trim(strTuka) & "以下の金額"
''''
''''    ElseIf dblKingakuTo >= 99999 Then
''''        strResutl = "　" & Right(String(4, " ") & strKingakuFrom_w, 4) & "億" & Trim(strTuka) & "超の金額"
''''    End If
''''
''''    func_RyorituDankaiEdit = strResutl
''''
''''End Function
''''
''''
'''''*************************************************************************
'''''関数名　　：通貨単位文字列取得
'''''
'''''引　　数　：
'''''           strTukaCd       I       KYK_RATEの通貨コード
'''''
'''''戻り値　　：通貨の単位文字
'''''
'''''機能説明　：PK_NAME.SF_TUUKA_NAMEをVBに移植
'''''
'''''更新履歴　：2007/03/29 SRA Y.Azuma    新規作成
'''''
'''''*************************************************************************
''''Private Function func_GetTukaName(ByVal strTukaCd As String) As String
''''On Error GoTo ErrHandler
''''
''''    Const PROCEDURE_NAME = "sub_Ryoritsu"
''''    Dim strSql      As String
''''    Dim vdata()     As Variant
''''    Dim lngCol      As Long
''''    Dim lngRow      As Long
''''    Dim strResult   As String
''''
''''
''''    If strTukaCd = "000" Then
''''    '/*日本の場合*/
''''        strResult = "円"
''''    Else
''''    '/*日本以外*/
''''        strSql = ""
''''        strSql = strSql & " SELECT NAME_KANA"
''''        strSql = strSql & "   FROM VW_DT301D"
''''        strSql = strSql & "  WHERE TRIM(CD_KBN) = '02' "
''''        strSql = strSql & "    AND TRIM(CD_1)   = TRIM('" & strTukaCd & "')"
''''
''''        'データ取得
''''        Call gclsDB.DoExequteSql(gcSELECT, strSql, vdata, lngCol, lngRow)
''''
''''        '取得データを設定
''''        If lngRow > 0 Then
''''            strResult = Trim(CStr(vdata(0, 0)))
''''        Else
''''            strResult = ""
''''        End If
''''
''''    End If
''''
''''    Erase vdata
''''
''''    func_GetTukaName = strResult
''''    Exit Function
''''ErrHandler:
''''
''''    Erase vdata
'''''Debug.Print strSql
'''''---- Error Log Start ----------------------------------------------------
''''    Dim lng As Long
''''    lng = Err.Number
''''    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetTukaName", Err.Number, Err.Description)
''''    On Error GoTo 0
'''''    Err.Raise lng
'''''---- Error Log End   ----------------------------------------------------
''''
''''End Function
''''
'------------<Modify End   azuma 2007/12/06 (PH4)> ★★★☆-----------------------

