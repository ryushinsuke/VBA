Attribute VB_Name = "basErrorSheet"
Option Explicit
'*************************************************************************
'
'プロジェクト名：
'
'オブジェクト名：basErrorSheet
'
'機能概要　：初期処理
'
'更新履歴　：2006/08/08 SRA 東       新規作成
'
'*************************************************************************
Const MODULE_NAME = "basErrorSheet"

Public Const ERR_MSGCD_ORACLE As String = "O"
Public Const ERR_MSGCD_PLSQL As String = "P"
Public Const ERR_MSGCD_VB As String = "V"
Public Const ERR_MSGCD_USER As String = "U"


Public Type TypeErr
    ModuleId    As String   'モージュールID
    Procedure   As String   'プロシージャID
    UserEvent   As String   'ユーザーイベント名
    MsgCode     As String   'メッセージ区分
    MsgName     As String   'メッセージ種類
    ErrNum      As Long     'エラー番号
    ErrDescript As String   'エラー概要
    MsgNaiyou   As String   'メッセージ内容
    KohzaNo     As String   '口座番号
    MsgSyousai  As String   'メッセージ詳細
    DateTime    As Date     '発生日時
End Type

Public gusrErr      As TypeErr
Private Const PROCESS_LOG As String = "Process.log"



'*************************************************************************
'関数名　　：エラーシート書き込み
'
'引　　数　：
'
'戻り値　　：なし
'
'機能説明　：エラー情報をエラーシートに書き込む。
'
'更新履歴　：2006/08/30 SRA Y.Azuma    新規作成
'更新履歴　：2007/03/29 SRA Y.Azuma    変更     (PH3)PH3請求書作成の対応
'
'*************************************************************************
Public Function fncWriteErrSheet(ByVal strSheetName As String)

    Const PROCEDURE_NAME As String = "fncWriteErrSheet"
    
    On Error GoTo ErrHandler
    
    
    Dim lngRow  As Long
    
'    lngErrorCnt = lngErrorCnt + 1
    
    With gusrErr
        Select Case .MsgCode
        Case ERR_MSGCD_USER
            .MsgName = "User"
        Case ERR_MSGCD_ORACLE
            .MsgName = "Oracle"
        Case ERR_MSGCD_PLSQL
            .MsgName = "PL/SQL"
        Case ERR_MSGCD_VB
            .MsgName = "VB"
        End Select
        
'        Call subSetUserErr
        .DateTime = Now
    End With
    
    With ThisWorkbook.Worksheets(strSheetName)
        lngRow = .Range("A65536").End(xlUp).Row + 1
        
'------------<Modify Start azuma 2007/03/29 (PH3)> -----------------------
        'エラーシートに罫線作成
        Call sub_ErrSheet_LineDraw(lngRow)
'------------<Modify End   azuma 2007/03/29 (PH3)> -----------------------
        
        .Cells(lngRow, 1) = "'" & gusrErr.ModuleId      'モージュールID
        .Cells(lngRow, 2) = "'" & gusrErr.Procedure     'プロシージャID
        .Cells(lngRow, 3) = "'" & "実行ボタン押下"      'gusrErr.UserEvent    'ユーザーイベント名
        .Cells(lngRow, 4) = "'" & gusrErr.MsgCode       'メッセージ区分
        .Cells(lngRow, 5) = "'" & gusrErr.MsgName       'メッセージ種類
        .Cells(lngRow, 6) = "'" & gusrErr.ErrNum        'エラー番号
        .Cells(lngRow, 7) = "'" & gusrErr.ErrDescript   'エラー概要
        .Cells(lngRow, 8) = "'" & gusrErr.KohzaNo       '口座番号
        .Cells(lngRow, 9) = "'" & gusrErr.MsgNaiyou     'メッセージ内容
        .Cells(lngRow, 10) = "'" & gusrErr.MsgSyousai   'メッセージ詳細
        .Cells(lngRow, 11) = "'" & gusrErr.DateTime     '発生日時
    
    End With
    
    Call sub_ErrLogOutPut
    
    With gusrErr
'        ModuleId    As String   'モージュールID
'        Procedure   As String   'プロシージャID
'        UserEvent   As String   'ユーザーイベント名
'        MsgCode     As String   'メッセージ区分
'        MsgName     As String   'メッセージ種類
'        ErrNum      As Long     'エラー番号
        .ErrDescript = vbNullString     'エラー概要
        .KohzaNo = vbNullString         '口座番号
        .MsgNaiyou = vbNullString       'メッセージ内容
        .MsgSyousai = vbNullString      'メッセージ詳細
'        DateTime    As Date     '発生日時
    End With
    
'''    ActiveWindow.ScrollRow = 1
'''    ActiveWindow.ScrollColumn = 1
'''    ThisWorkbook.Worksheets(strSheetName).Visible = True
    
    Exit Function
ErrHandler:
     
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
'Resume
End Function

'*************************************************************************
'関数名　　：エラー共通処理
'
'引　　数　：ARG1   I   Module      Strinng モジュール名
'　　　　　：ARG2   I   Procedure   Strinng プロシージャ名
'　　　　　：ARG3   I   ErrNum      Long    エラー番号
'　　　　　：ARG4   I   ErrMsg      Strinng エラーメッセージ
'
'戻り値　　：なし
'
'機能説明　：サンプル
'
'更新履歴　：2006/11/16 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function sub_ErrLogOutPut()
    
    Const PROCEDURE_NAME As String = "sub_ErrLogOutPut"
    
    On Error GoTo ErrHandler
    
    
    'ログ出力パスの取得
    If Trim(strMyDocPath) = "" Then
        If gfunc_GetMyDocPath(strMyDocPath) = False Then
            MsgBox "ログ出力パスの取得に失敗しました。 (" & PROCEDURE_NAME & ")", vbCritical
            Exit Function
        End If
    End If
    
    
    Open strMyDocPath & PROCESS_LOG For Append Access Write As #1
    
    Write #1, "----------------------------------------------------------------------------------------------------"
    
    Write #1, Format(Now, "General Date"), "エラー", gusrErr.ModuleId, gusrErr.Procedure
    
'    Write #1, "モージュールID", gusrErr.ModuleId        'モージュールID
'    Write #1, "プロシージャID", gusrErr.Procedure       'プロシージャID
'    Write #1, Format(Now, "General Date"), "エラー", "ユーザーイベント名", gusrErr.UserEvent  'ユーザーイベント名
    Write #1, Format(Now, "General Date"), "エラー", "システムエラー番号", gusrErr.ErrNum     'エラー番号
    Write #1, Format(Now, "General Date"), "エラー", "システムエラー概要", gusrErr.ErrDescript 'エラー概要
    Write #1, Format(Now, "General Date"), "エラー", "メッセージ内容", gusrErr.MsgNaiyou      'メッセージ内容
    Write #1, Format(Now, "General Date"), "エラー", "メッセージ詳細", vbCrLf & gusrErr.MsgSyousai     'メッセージ詳細
    
    Close #1
    

    Exit Function
ErrHandler:
     
    Rem Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：エラー共通処理
'
'引　　数　：
'　　　　　：lngRow     I       作成行
'
'戻り値　　：なし
'
'機能説明　：エラーシートに罫線を作成する。
'
'更新履歴　：2007/03/29 SRA Y.Azuma    新規作成
'
'*************************************************************************
Sub sub_ErrSheet_LineDraw(ByVal lngRow As Long)
    
    
    With ThisWorkbook.Worksheets(ERROR_SHEETNAME).Range("A" & lngRow & ":" & "K" & lngRow)
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    End With
End Sub

