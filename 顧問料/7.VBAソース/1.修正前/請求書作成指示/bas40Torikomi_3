Attribute VB_Name = "bas40Torikomi_3"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・請求書作成指示
'
'オブジェクト名：bas40Torikomi_3
'
'機能概要　：平残系請求書作成サブ・フェーズ２対応
'
'更新履歴　：2006/12/19 SRA 東       新規作成
'
'*************************************************************************
Const MODULE_NAME = "bas40Torikomi_3"



'*************************************************************************
'関数名　　：最低保障有効判定関数
'
'引　　数　：
'           Sisan()         I       資産配列の
'           lngSisan        I       資産配列の添え字
'           strKohzaList()  I       処理対象口座配列配列
'           lngKKCnt        I       処理対象口座配列配列の添え字
'           Result          O       結果構造体(0:無効、1:有効)
'
'戻り値　　：Boolean
'
'機能説明　：以下の条件で処理結果の値を返す
'            (1)最低保障考慮後額＝　最低保障額           フラグ＝１
'            (2)最低保障考慮後額＜＞最低保障額           フラグ＝０
'            (3)最低保障額がNULL又は０以下               フラグ＝０
'
'更新履歴　：2006/12/19 SRA Y.Azuma    新規作成
'更新履歴　：2007/01/24 SRA Y.Azuma    変更     (PH2)口座属性がない場合の対応
'更新履歴　：2007/01/31 SRA Y.Azuma    変更     (PH2)連No.25 最低保障有効判定方法変更
'
'*************************************************************************
Public Function func_SaiteHoshouFlg(ByRef strKohzaList() As String _
                                  , ByVal lngKKCnt As Long _
                                  , ByRef Result As TypSaitei) As Boolean
On Error GoTo ErrHandler

    Const PROCEDURE_NAME = "func_SaiteHoshouFlg"
    
    Dim strSql      As String
    Dim vdata()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long

    func_SaiteHoshouFlg = False
    
'*******************************************************
'* 関数開始　                                        　*
'*******************************************************
    
    '口座属性テーブルから最低保障額の取得
    
'------------<Modify Start azuma 2007/01/31 > -----------------------
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     CASE WHEN KVS.ANBUN_GO_MARUME_GO_KOMONRYOH <  NVL(KKS.SAITEI_HOSHO_RATE_KOHJO_GAKU,0)           "
    strSql = strSql & "         THEN 1           "
    strSql = strSql & "         ELSE 0       "
    strSql = strSql & "     END       "
    strSql = strSql & "    ,NVL(KVS.ANBUN_GO_MARUME_GO_KOMONRYOH,0)"
    strSql = strSql & "    ,NVL(KKS.SAITEI_HOSHO_RATE_KOHJO_GAKU,0)"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_VW_SHISAN_KOMONRYOH KVS    ,"
    strSql = strSql & "     KYK_KOMONRYOH_SUM       KKS"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KVS.KOHZA_NO        = KKS.KOHZA_NO(+)    "
    strSql = strSql & " AND KVS.SEIKYU_KIKAN_ID = KKS.SEIKYU_KIKAN_ID(+)"
    strSql = strSql & " AND KVS.HIZUKE_SHURUI   = KKS.HIZUKE_SHURUI(+)"
    strSql = strSql & " AND KVS.KEISAN_TO_YMD   = KKS.KEISAN_TO_YMD(+)"
    strSql = strSql & " AND KVS.KOHZA_NO        ='" & strKohzaList(lngKKCnt, KOHZALIST_KOHZA_NO) & "'"
    strSql = strSql & " AND KVS.SEIKYU_KIKAN_ID = " & strKohzaList(lngKKCnt, KOHZALIST_SEIKYU_KIKAN_ID)
    strSql = strSql & " AND KVS.HIZUKE_SHURUI   ='" & strKohzaList(lngKKCnt, KOHZALIST_HIZUKE_SHURUI) & "'"
    strSql = strSql & " AND KVS.KEISAN_TO_YMD   = " & strKohzaList(lngKKCnt, KOHZALIST_SEIKYUSHO_KIKAN_TO) & ""
    strSql = strSql & " AND KVS.SHISAN_BUNRUI   ='0' "
    strSql = strSql & " AND KVS.SHISAN_CODE     ='0000' "
    strSql = strSql & " AND KKS.SAKUJO_FLG(+)   ='0'"

'    strSql = ""
'    strSql = strSql & " SELECT"
''------------<Modify Start azuma 2007/01/24 > -----------------------
'    strSql = strSql & "       CASE WHEN KVS.ANBUN_GO_MARUME_GO_KOMONRYOH <  NVL(KKZ.SAITEI_HOSHOH_GAKU,0)"
''    strSql = strSql & "       CASE WHEN KVS.ANBUN_GO_MARUME_GO_KOMONRYOH <  KKZ.SAITEI_HOSHOH_GAKU"
''------------<Modify End   azuma 2007/01/24 > -----------------------
'    strSql = strSql & "           THEN 1"
'    strSql = strSql & "           ELSE 0"
'    strSql = strSql & "       END "
'    strSql = strSql & "      ,NVL(KVS.ANBUN_GO_MARUME_GO_KOMONRYOH,0) "
'    strSql = strSql & "      ,NVL(KKZ.SAITEI_HOSHOH_GAKU,0) "
'    strSql = strSql & " FROM"
'    strSql = strSql & "     KYK_VW_SHISAN_KOMONRYOH KVS"
'    strSql = strSql & "    ,KYK_KOHZA_ZOKUSEI       KKZ"
'    strSql = strSql & " WHERE"
''------------<Modify Start azuma 2007/01/24 > -----------------------
'    strSql = strSql & "     KVS.KOHZA_NO        = KKZ.KOHZA_NO(+)   "
''    strSql = strSql & "     KVS.KOHZA_NO        = KKZ.KOHZA_NO   "
''------------<Modify End   azuma 2007/01/24 > -----------------------
'    strSql = strSql & " AND KVS.KOHZA_NO        ='" & strKohzaList(lngKKCnt, KOHZALIST_KOHZA_NO) & "'"
'    strSql = strSql & " AND KVS.SEIKYU_KIKAN_ID = " & strKohzaList(lngKKCnt, KOHZALIST_SEIKYU_KIKAN_ID)
'    strSql = strSql & " AND KVS.HIZUKE_SHURUI   ='" & strKohzaList(lngKKCnt, KOHZALIST_HIZUKE_SHURUI) & "'"
'    strSql = strSql & " AND KVS.KEISAN_TO_YMD   = " & strKohzaList(lngKKCnt, KOHZALIST_SEIKYUSHO_KIKAN_TO) & ""
'    strSql = strSql & " AND KVS.SHISAN_BUNRUI   ='0'"
'    strSql = strSql & " AND KVS.SHISAN_CODE     ='0000'"
''------------<Modify Start azuma 2007/01/24 > -----------------------
'    strSql = strSql & " AND KKZ.SAKUJO_FLG(+)   ='0'"
''    strSql = strSql & " AND KKZ.SAKUJO_FLG      ='0'"
''------------<Modify End   azuma 2007/01/24 > -----------------------

'------------<Modify End   azuma 2007/01/31 > -----------------------

    'データ取得
    Call gclsDB.DoExequteSql(gcSELECT, strSql, vdata, lngCol, lngRow)
    
    If lngRow = 0 Then
    'データなし
        With Result
            .strSaiteYukouFlg = "0"
            .valKomonryohGaku = 0
            .valHoshohGaku = 0
        End With
        Erase vdata
        func_SaiteHoshouFlg = False
        Exit Function
    Else
    'データあり
        With Result
            .strSaiteYukouFlg = CStr(vdata(0, 0))
            .valKomonryohGaku = vdata(1, 0)
            .valHoshohGaku = vdata(2, 0)
        End With
    End If
    
    
    Erase vdata
    func_SaiteHoshouFlg = True
    
Exit Function

ErrHandler:

    func_SaiteHoshouFlg = False
'Debug.Print strSql
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SaiteHoshouFlg", Err.Number, Err.Description)
    On Error GoTo 0
    Erase vdata
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function


'*************************************************************************
'関数名　　：口座属性取得関数
'
'引　　数　：
'           strKohzaNo      I       口座番号
'           Result          O       口座属性構造体
'
'戻り値　　：Boolean
'
'機能説明　：口座属性のデータ
'
'更新履歴　：2006/12/19 SRA Y.Azuma    新規作成
'更新履歴　：2007/01/24 SRA Y.Azuma    変更     (PH2)口座属性がない場合の対応
'更新履歴　：2007/02/14 SRA Y.Azuma    変更     (PH2)QANo.209 上期成功報酬対応
'
'*************************************************************************
Public Function func_KohzaZokusei(ByVal strKohzaNo As String, ByRef Result As TypKohzaZokuse) As Boolean
    Const PROCEDURE_NAME = "func_KohzaZokusei"
    
    Dim strSql      As String
    Dim vdata()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long

    func_KohzaZokusei = False
    
'*******************************************************
'* 関数開始　                                        　*
'*******************************************************
    
    '口座属性テーブルの取得
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     SEIKOH_HOHSHU_KBN"
    strSql = strSql & "    ,SEIKOH_HOHSHU_TYPE"
'------------<Modify Start azuma 2007/01/25 > -----------------------
    strSql = strSql & "    ,ANBUN_HOHHOH"
'------------<Modify End   azuma 2007/01/25 > -----------------------
    
'------------<Modify Start azuma 2007/02/14 > -----------------------
    strSql = strSql & "    ,NVL(KAMIKI_MISHU_KAKEME_RATE,'')"
'------------<Modify End   azuma 2007/02/14 > -----------------------
    
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_KOHZA_ZOKUSEI"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KOHZA_NO='" & strKohzaNo & "'"
    strSql = strSql & " AND SAKUJO_FLG='0'"

    'データ取得
    Call gclsDB.DoExequteSql(gcSELECT, strSql, vdata, lngCol, lngRow)
    
    If lngRow = 0 Then
    'データなし
'------------<Modify Start azuma 2007/01/24 > -----------------------
        With Result
            .seikoh_hohshu_kbn = "0"
            .seikoh_hohshu_type = ""
            .anbun_hohhoh = ""              '<------------ Modify azuma 2007/01/25
            .kami_mishu_kakeme_rate = ""    '<------------ Modify azuma 2007/02/14
        End With
'        With Result
'            .seikoh_hohshu_kbn = ""
'            .seikoh_hohshu_type = ""
'        End With
'        Erase vData
'        func_KohzaZokusei = False
'        Exit Function
'------------<Modify End   azuma 2007/01/24 > -----------------------
    Else
    'データあり
        With Result
            .seikoh_hohshu_kbn = CStr(vdata(0, 0))
            .seikoh_hohshu_type = CStr(vdata(1, 0))
            .anbun_hohhoh = CStr(vdata(2, 0))           '<------------ Modify azuma 2007/01/25
            .kami_mishu_kakeme_rate = CStr(vdata(3, 0)) '<------------ Modify azuma 2007/02/14
        End With
    End If
    
    
    Erase vdata
    func_KohzaZokusei = True
    
Exit Function

ErrHandler:

    func_KohzaZokusei = False
'Debug.Print strSql
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KohzaZokusei", Err.Number, Err.Description)
    On Error GoTo 0
    Erase vdata
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：総計算書のデータシート行追加関数(掛け目B)
'
'引　　数　：
'           strFileName     I       対象ファイル名
'           lngRateMdfSeq   I       料率変更番号
'           lngSanteiCnt    I       算定資産順
'           Sisan()         I       資産配列の
'           lngSisan        I       資産配列の添え字
'           strKohzaList()  I       処理対象口座配列配列
'           lngKKCnt        I       処理対象口座配列配列の添え字
'           strAnbun        I       処理対象口座按分方法
'
'戻り値　　：なし
'
'機能説明　：成功報酬で掛け目B型の場合の総計算書に追加するデータ
'
'更新履歴　：2006/12/21 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub sub_SouKeisan_KakemeB(ByVal strFileName As String _
                         , ByVal lngRateMdfSeq As Long _
                         , ByVal lngSanteiCnt As Long _
                         , ByRef Sisan() As Variant _
                         , ByVal lngSisan As Long _
                         , ByRef strKohzaList() As String _
                         , ByVal lngKKCnt As Long _
                         , ByVal strAnbun As Long _
                         , ByRef lngErrorCnt As Long)
                     
On Error GoTo ErrHandler
                     
    Const PROCEDURE_NAME = "sub_SouKeisan_KakemeB"
    Dim lngStartRow         As Long
    Dim lngEndRow           As Long
    Dim strKeisanMeisai()   As String       '顧問料計算結果明細のデータ格納配列
    Dim lngRet              As Long

'*******************************************************
'* 関数開始　                                        　*
'*******************************************************

            
    Call sub_AddSheetItemRow(strFileName _
                           , DATASHEET_KAKEME_TYPE2 _
                           , lngKKCnt _
                           , DATASHEET_INC_KIKAN & DATASHEET_INC_XXX _
                           , DATASHEET_INC_KIKAN & Format(lngRateMdfSeq, "000") _
                           , "0" _
                           , lngStartRow _
                           , lngEndRow)
    '＠条件への貼付け
    Call sub_SetJoukenData(strFileName _
                         , Sisan() _
                         , lngSisan _
                         , lngStartRow _
                         , True)

                         
'------------<Modify Start azuma 2007/01/25 > -----------------------
    '口座の按分方法が年間顧問料を按分する場合のみ作成する
    If strAnbun >= "4" Then
        '総計算書・掛け目B年間
        Call sub_AddSheetItemRow(strFileName _
                               , DATASHEET_KAKEME_TYPE2NEN _
                               , lngKKCnt _
                               , DATASHEET_INC_KIKAN & DATASHEET_INC_XXX _
                               , DATASHEET_INC_KIKAN & Format(lngRateMdfSeq, "000") _
                               , "0" _
                               , lngStartRow _
                               , lngEndRow)
        '＠条件への貼付け
        Call sub_SetJoukenData(strFileName _
                             , Sisan() _
                             , lngSisan _
                             , lngStartRow _
                             , True)
    End If
    

'------------<Modify End   azuma 2007/01/25 > -----------------------

    Exit Sub

ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "sub_SouKeisan_KakemeB", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Sub



'*************************************************************************
'関数名　　：年度判定関数
'
'引　　数　：
'           strFromYmd      I       入力日付(YYYYMMDD)
'
'戻り値　　：YYYYMMDD
'
'機能説明　：入力日付の月が１〜３月の場合(年−１)にして入力日付を戻す
'
'更新履歴　：2006/12/21 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function func_GetNendo(ByVal strFromYmd As String) As String

    Dim lngMonth As Long
    Dim lngYear  As Long
    
    lngYear = CLng(Mid(strFromYmd, 1, 4))
    lngMonth = CLng(Mid(strFromYmd, 5, 2))
    
    If lngMonth >= 1 And lngMonth <= 3 Then
        lngYear = lngYear - 1
    End If
    
    func_GetNendo = CStr(lngYear) & CStr(Mid(strFromYmd, 5, 4))

End Function
