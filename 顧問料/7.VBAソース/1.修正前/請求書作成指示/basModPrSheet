Attribute VB_Name = "basModPrSheet"
Option Explicit
'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・請求書作成指示
'
'オブジェクト名：basModPrSheet
'
'機能概要　：帳票毎の個別編集処理
'
'更新履歴　：2006/09/06 SRA H.Anpo      新規作成
'
'*************************************************************************
Const MODULE_NAME = "basModPrSheet"

'*************************************************************************
'各シートの項目名("計算期間①"文字の表示制御用)
'*************************************************************************
'請求書
Const ITEMNM_SEIKYU_KOHZA_KIKAN = "期間xxx運用資産額全体名称"
Const ITEMNM_SEIKYU_CHOUSEI_KIKAN = "期間xxx顧問料調整資産名称期間"
Const ITEMNM_SEIKYU_JIKOSETTEI_GAKU = "自己設定委託者報酬額"

'合算請求書
Const ITEMNM_GASSAN_TOTAL_KIKAN = "期間xxx期間"
Const ITEMNM_GASSAN_KOHZA_KIKAN = "口座01期間xxx運用資産額全体名称"
Const ITEMNM_GASSAN_CHOUSEI_KIKAN = "口座01期間xxx顧問料調整資産名称期間"
Const ITEMNM_GASSAN_JIKOSETTEI_GAKU = "口座01自己設定委託者報酬額"

'請求書、合算請求書の期間列アドレス
Const COLADR_KIKAN_SEIKYU = "E"

'請求書、合算請求書の期間文字列
Const STR_KIKAN_TOP = "(計算期間①)"


'*************************************************************************
'モジュール内共通関数
'*************************************************************************

'*************************************************************************
'関数名　　：削除フラグセット
'
'引　　数　：ARG1   I   strBookName     ワークブック名
'　　　　　：ARG2   I   strSheetName    ワークシート名
'　　　　　：ARG3   I   lngStartRow     開始行
'　　　　　：ARG4   I   lngEndRow       終了行
'　　　　　：ARG5   I   strVal          設定値
'
'戻り値　　：エラー番号
'
'機能説明　：削除フラグ用セルに値をセットする
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncSetDelFlag( _
            ByVal strBookName As String, _
            ByVal strSheetName As String, _
            ByVal lngStartRow As Long, _
            ByVal lngEndRow As Long, _
            ByVal strVal As String) As Long

On Error GoTo ErrHandler
    
    Dim lngCnt          As Long
    
    fncSetDelFlag = 0
    
    With Workbooks(strBookName).Sheets(strSheetName)
        For lngCnt = lngStartRow To lngEndRow
            .Range(COLADR_DELETE_FLAG & lngCnt) = strVal
        Next lngCnt
    End With
    
    Exit Function

ErrHandler:
    fncSetDelFlag = Err.Number

End Function

'*************************************************************************
'関数名　　：削除フラグONの行を削除
'
'引　　数　：ARG1   I   strBookName     ワークブック名
'　　　　　：ARG2   I   strSheetName    ワークシート名
'　　　　　：ARG3   I   lngStartRow     開始行
'　　　　　：ARG4   I   lngEndRow       終了行
'　　　　　：ARG5   I   strVal          設定値
'
'戻り値　　：エラー番号
'
'機能説明　：削除フラグ用セルに値が設定されている行を削除する
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncDeleteRowOnDelFlag( _
            ByVal strBookName As String, _
            ByVal strSheetName As String, _
            ByVal lngStartRow As Long, _
            ByVal lngEndRow As Long, _
            ByVal strVal As String) As Long

On Error GoTo ErrHandler
    
    Dim lngCnt          As Long
    Dim lngDelRow       As Long
    
    fncDeleteRowOnDelFlag = 0
    
    With Workbooks(strBookName).Sheets(strSheetName)
        lngDelRow = lngStartRow
        For lngCnt = lngStartRow To lngEndRow
            If .Range(COLADR_DELETE_FLAG & lngDelRow) = strVal Then
                .Rows(lngDelRow & ":" & lngDelRow).Delete
            Else
                lngDelRow = lngDelRow + 1
            End If
        Next lngCnt
    End With
    
    Exit Function

ErrHandler:
    fncDeleteRowOnDelFlag = Err.Number

End Function

'*************************************************************************
'関数名　　：合算請求書の口座数取得
'
'引　　数　：ARG1   I   strBookName     ワークブック名
'　　　　　：ARG2   I   strSheetName    ワークシート名
'　　　　　：ARG3   I   strColAdr       口座数判定の列アドレス(オフセットの列："G"...)
'　　　　　：ARG4   I   strVal          口座数判定値(10000)
'　　　　　：ARG5   O   lngKohzaCnt     口座数
'
'戻り値　　：エラー番号
'
'機能説明　：データシートから合算請求書の口座数を取得する
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Private Function fncGetValRowCount( _
            ByVal strBookName As String, _
            ByVal strSheetName As String, _
            ByVal strColAdr As String, _
            ByVal strVal As String, _
            ByRef lngKohzaCnt As Long _
            ) As Long

On Error GoTo ErrHandler
    
    Dim lngCnt          As Long
    Dim lngRowCnt       As Long
    Dim lngEndRow       As Long
    
    fncGetValRowCount = 0
    
    With Workbooks(strBookName).Sheets(strSheetName)
        'データの最下行取得
        lngEndRow = .Range(strColAdr & "65536").End(xlUp).Row
        
        'オフセット/10000が最大の行を検索する
        lngRowCnt = 0
        lngKohzaCnt = 0
        For lngCnt = lngEndRow To 1 Step -1
            If .Range(strColAdr & lngCnt) <> vbNullString Then
                If Val(.Range(strColAdr & lngCnt)) >= Val(strVal) Then
                    If lngKohzaCnt < Val(.Range(strColAdr & lngCnt)) / GASSAN_OFFSET_BASE Then
                        'オフセット/10000 -> 口座数
                        lngKohzaCnt = Val(.Range(strColAdr & lngCnt)) / GASSAN_OFFSET_BASE
                    End If
                End If
            End If
        Next lngCnt
    End With
    
    Exit Function

ErrHandler:
    fncGetValRowCount = Err.Number

End Function


'*************************************************************************
'関数名　　：世代番号文字列の削除
'
'引　　数　：ARG1   I   strBookName     ワークブック名
'　　　　　：ARG2   I   strSheetName    ワークシート名
'　　　　　：ARG3   I   lngTopRow       開始行
'　　　　　：ARG4   I   lngEndRow       終了行
'　　　　　：ARG5   I   strColAdr       口座数判定の列アドレス(オフセットの列："G"...)
'
'戻り値　　：エラー番号
'
'機能説明　：指定された列内の世代番号文字列 "(計算期間①)" が不要な場合は削除する
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Private Function fncDelSedaiString( _
            ByVal strBookName As String, _
            ByVal strSheetName As String, _
            ByVal lngTopRow As Long, _
            ByVal lngEndRow As Long, _
            ByVal strColAdr As String _
            ) As Long

On Error GoTo ErrHandler
    
    Dim lngCnt          As Long
    Dim blnSrchFlg      As Boolean
    
    fncDelSedaiString = 0
    
    blnSrchFlg = False
    
    With Workbooks(strBookName).Sheets(strSheetName)
        
        '"(計算期間①)"以外の文字があるかを検索
        For lngCnt = lngTopRow To lngEndRow
            If .Range(strColAdr & lngCnt) <> STR_KIKAN_TOP Then
                blnSrchFlg = True
                Exit For
            End If
        Next lngCnt
    
        '"(計算期間①)"の文字のみの場合は、計算期間のセルをクリアする
        If blnSrchFlg = False Then
            For lngCnt = lngTopRow To lngEndRow
                .Range(strColAdr & lngCnt) = vbNullString
            Next lngCnt
        End If
    
    End With
    
    Exit Function

ErrHandler:
    fncDelSedaiString = Err.Number

End Function


'*************************************************************************
'関数名　　：合算請求書のテンプレートシートの口座行増幅
'
'引　　数　：ARG1   I   strBookName         ワークブック名
'　　　　　：ARG2   I   strTempSheetName    ワークシート名(テンプレートシート)
'　　　　　：ARG3   I   strColAdr           口座数判定の列アドレス(オフセットの列："G"...)
'　　　　　：ARG4   I   strVal              口座数判定値(10000)
'　　　　　：ARG5   I   lngKohzaCnt         口座数
'
'戻り値　　：エラー番号
'
'機能説明　：合算請求書のテンプレートシートの口座を指定口座数分増幅する
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Private Function fncCopyKohzaLine( _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strColAdr As String, _
            ByVal strVal As String, _
            ByVal lngKohzaCnt As Long _
            ) As Long

On Error GoTo ErrHandler
    
    Dim lngCnt          As Long             'カウンタ
    Dim lngCnt2         As Long             'カウンタ
    Dim lngRet          As Long             'リターンコード
    Dim lngEndRow       As Long             'データシートの最終行
    Dim lngSrcTopRow    As Long             'コピー元先頭行番号
    Dim lngSrcEndRow    As Long             'コピー元終了行番号
    Dim lngWkRow        As Long             '行番号ワーク
    Dim lngWkCol        As Long             '列番号ワーク
    Dim lngDstRow       As Long             'コピー先先頭行番号
    Dim strWkName       As String           '名前編集ワーク
    Dim strReferTo      As String           '名前のアドレス編集ワーク
    Dim colNames        As Collection       '名前用コレクション
    Dim objWk           As Object           'オブジェクトワーク
    Dim aryName()       As Variant          '項目名配列
                                            'aryName(1): 項目名
                                            'aryName(2): テンプレートシートの行番号
                                            'aryName(3): テンプレートシートの列番号
    
    fncCopyKohzaLine = 0
    
    With Workbooks(strBookName).Sheets(DATASHEET_DATA)
        '*********************************************************
        'コピー元の行取得
        '*********************************************************
        'データの最下行取得
        lngEndRow = .Range(strColAdr & "65536").End(xlUp).Row
        
        'データシートからコピー元の行取得
        lngSrcTopRow = 65536
        lngSrcEndRow = 0
        lngCnt2 = 0
        ReDim aryName(1 To 3, 0)
        For lngCnt = 1 To lngEndRow
            If .Range(strColAdr & lngCnt) <> vbNullString And .Range(DATASHEET_DATA_TYPE & lngCnt) <> "条件" Then
                If Val(.Range(strColAdr & lngCnt)) = Val(strVal) Then
                    'テンプレートシートの行・列番号取得
                    lngWkRow = Workbooks(strBookName).Sheets(strTempSheetName).Range(.Range(DATASHEET_ITEMNAME_COL & lngCnt)).Row
                    lngWkCol = Workbooks(strBookName).Sheets(strTempSheetName).Range(.Range(DATASHEET_ITEMNAME_COL & lngCnt)).Column
                    'オフセットが10000の中の最小行をTop行にする
                    If lngSrcTopRow >= lngWkRow Then
                        lngSrcTopRow = lngWkRow
                    End If
                    'オフセットが10000の中の最大行をEnd行にする
                    If lngSrcEndRow <= lngWkRow Then
                        lngSrcEndRow = lngWkRow
                    End If
                    
                    '項目名を配列に保存
                    lngCnt2 = lngCnt2 + 1
                    ReDim Preserve aryName(1 To 3, lngCnt2)
                    aryName(1, lngCnt2) = .Range(DATASHEET_ITEMNAME_COL & lngCnt)   '項目名
                    aryName(2, lngCnt2) = lngWkRow                                  'テンプレートシートの行番号
                    aryName(3, lngCnt2) = lngWkCol                                  'テンプレートシートの列番号


                End If
            End If
        Next lngCnt
        
    End With
    
'    '指定行の削除フラグ用セルに値をセット
'    lngRet = fncSetDelFlag(strBookName, strTempSheetName, lngSrcTopRow, lngSrcTopRow + 2, DELETE_FLAG_VALUE)
'    If lngRet <> 0 Then
'        Err.Raise lngRet
'    End If
                
    '口座数が１の場合は処理を終了する
    If lngKohzaCnt <= 0 Then
        Exit Function
    End If
    
    '*********************************************************
    'コピー処理
    '*********************************************************
    'テンプレートシートのlngSrcTopRow～lngSrcEndRowを(口座数-1)回コピーする
    '(明細の空白行も含んでコピーする)
    With Workbooks(strBookName).Sheets(strTempSheetName)
        For lngCnt = 0 To lngKohzaCnt - 2
            'コピー先の行番号
            lngDstRow = lngSrcEndRow + ((lngSrcEndRow - lngSrcTopRow + 2) * lngCnt) + 1
            
            'コピー
            .Rows(lngSrcTopRow - 1 & ":" & lngSrcEndRow).Copy
            .Rows(lngDstRow & ":" & lngDstRow).Insert Shift:=xlDown
            ThisWorkbook.Application.CutCopyMode = False
            
            '名前を追加する
            For lngCnt2 = 1 To UBound(aryName, 2)
                strWkName = Replace(aryName(1, lngCnt2), DATASHEET_INC_KOHZA & "01", DATASHEET_INC_KOHZA & Format(lngCnt + 2, "00"))
                strReferTo = "=" & DATASHEET_G_SEKYUU & "!R" & _
                             aryName(2, lngCnt2) + ((lngSrcEndRow - lngSrcTopRow + 2) * (lngCnt + 1)) & _
                             "C" & aryName(3, lngCnt2)
            
                .Names.Add Name:=strWkName, RefersToR1C1:=strReferTo
            Next
    
        Next lngCnt
    
        Erase aryName
    
    End With
    
    Exit Function

ErrHandler:
    fncCopyKohzaLine = Err.Number
Resume Next
End Function


'*************************************************************************
'帳票毎の個別編集処理
'*************************************************************************

'*************************************************************************
'関数名　　：合算請求書シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetGassanSeikyu( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler

    Dim lngRet              As Long     'リターンコード
    Dim lngKohzaCnt         As Long     '口座数
    Dim lngTopRow           As Long     '先頭行
    Dim lngEndRow           As Long     '終了行
    Dim strColAdr           As String   '基準日の列アドレス
    Dim lngCnt              As Long     'カウンタ

    Dim strKohzaKikan       As String   '名前編集用
    Dim strChouseiKikan     As String   '名前編集用
    Dim strJikoSetteiKikan  As String   '名前編集用

    fncModifyPrintSheetGassanSeikyu = 0
    
    If lngKind = 1 Then
        '*********************************************************
        'データシートファイルのTemplateシートを修正
        '*********************************************************
        With Workbooks(strBookName).Sheets(strTempSheetName)
                
            'データシートファイルの合算請求書の口座数を取得
            lngRet = fncGetValRowCount(strBookName, DATASHEET_DATA, DATASHEET_OFFSET_COL, GASSAN_OFFSET_BASE, lngKohzaCnt)
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
            
            '複数口座ある場合、合算請求書シート(テンプレート)を口座数分行をコピー
            lngRet = fncCopyKohzaLine(strBookName, strTempSheetName, DATASHEET_OFFSET_COL, GASSAN_OFFSET_BASE, lngKohzaCnt)
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
                
        End With
    
    ElseIf lngKind = 2 Then
        '請求書ファイルの各シートを修正(データセット前)
    
    ElseIf lngKind = 3 Then
        '*********************************************************
        '請求書ファイルの各シートを修正(データセット後)
        '*********************************************************
        With Workbooks(strBookName).Sheets(strFullSheetName)
            '
'''            '*********************************************************
'''            '計算期間①のみの場合、(計算期間①)の文字を非表示にする
'''            '*********************************************************
'''            strColAdr = COLADR_KIKAN_SEIKYU
'''
'''            'データシートファイルの合算請求書の口座数を取得
'''            lngRet = fncGetValRowCount(strBookName, DATASHEET_DATA, DATASHEET_OFFSET_COL, GASSAN_OFFSET_BASE, lngKohzaCnt)
'''            If lngRet <> 0 Then
'''                Err.Raise lngRet
'''            End If
'''
'''            '運用資産額全体報酬額
'''            lngTopRow = .Range(ITEMNM_GASSAN_TOTAL_KIKAN).Row
'''            lngEndRow = .Range(ITEMNM_GASSAN_KOHZA_KIKAN).Row - 2
'''            lngRet = fncDelSedaiString( _
'''                        strBookName, _
'''                        strFullSheetName, _
'''                        lngTopRow, _
'''                        lngEndRow, _
'''                        strColAdr _
'''                     )
'''            If lngRet <> 0 Then
'''                Err.Raise lngRet
'''            End If
'''
'''            For lngCnt = 1 To lngKohzaCnt
'''
'''                '口座01... の名称を口座02,口座03...に変更
'''                strKohzaKikan = Replace(ITEMNM_GASSAN_KOHZA_KIKAN, DATASHEET_INC_KOHZA & "01", DATASHEET_INC_KOHZA & Format(lngCnt, "00"))
'''                strChouseiKikan = Replace(ITEMNM_GASSAN_CHOUSEI_KIKAN, DATASHEET_INC_KOHZA & "01", DATASHEET_INC_KOHZA & Format(lngCnt, "00"))
'''                strJikoSetteiKikan = Replace(ITEMNM_GASSAN_JIKOSETTEI_GAKU, DATASHEET_INC_KOHZA & "01", DATASHEET_INC_KOHZA & Format(lngCnt, "00"))
'''
'''                '(口座)運用資産額全体報酬額
'''                lngTopRow = .Range(strKohzaKikan).Row
'''                lngEndRow = .Range(strChouseiKikan).Row - 1
'''                lngRet = fncDelSedaiString( _
'''                            strBookName, _
'''                            strFullSheetName, _
'''                            lngTopRow, _
'''                            lngEndRow, _
'''                            strColAdr _
'''                         )
'''                If lngRet <> 0 Then
'''                    Err.Raise lngRet
'''                End If
'''
'''                '調整資産
'''                lngTopRow = .Range(strChouseiKikan).Row
'''                lngEndRow = .Range(strJikoSetteiKikan).Row - 1
'''                lngRet = fncDelSedaiString( _
'''                            strBookName, _
'''                            strFullSheetName, _
'''                            lngTopRow, _
'''                            lngEndRow, _
'''                            strColAdr _
'''                         )
'''                If lngRet <> 0 Then
'''                    Err.Raise lngRet
'''                End If
'''
'''            Next
        
            '*********************************************************
            '行削除
            '*********************************************************
            'データの最下行取得
            lngEndRow = .Range(COLADR_DELETE_FLAG & "65536").End(xlUp).Row
            '削除フラグ用セルが"1"の行を削除
            lngRet = fncDeleteRowOnDelFlag(strBookName, strFullSheetName, 1, lngEndRow, DELETE_FLAG_VALUE)
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
            
        End With
    End If
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetGassanSeikyu = Err.Number

End Function

'*************************************************************************
'関数名　　：請求書シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetGohkei( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    
    Dim lngRet              As Long     'リターンコード
    Dim lngKohzaCnt         As Long     '口座数
    Dim lngTopRow           As Long     '先頭行
    Dim lngEndRow           As Long     '終了行
    Dim strColAdr           As String   '基準日の列アドレス
    Dim lngCnt              As Long     'カウンタ

    Dim strKohzaKikan       As String   '名前編集用
    Dim strChouseiKikan     As String   '名前編集用
    Dim strJikoSetteiKikan  As String   '名前編集用
    
    fncModifyPrintSheetGohkei = 0
    
    If lngKind = 1 Then
        
    ElseIf lngKind = 2 Then
    
    ElseIf lngKind = 3 Then
        '*********************************************************
        '請求書ファイルの各シートを修正(データセット後)
        '*********************************************************
        With Workbooks(strBookName).Sheets(strFullSheetName)
            '*********************************************************
            '計算期間①のみの場合、(計算期間①)の文字を非表示にする
            '*********************************************************
            strColAdr = COLADR_KIKAN_SEIKYU
            
            strKohzaKikan = ITEMNM_SEIKYU_KOHZA_KIKAN
            strChouseiKikan = ITEMNM_SEIKYU_CHOUSEI_KIKAN
            strJikoSetteiKikan = ITEMNM_SEIKYU_JIKOSETTEI_GAKU
    
            '運用資産額全体報酬額
            lngTopRow = .Range(strKohzaKikan).Row
            lngEndRow = .Range(strChouseiKikan).Row - 1
            lngRet = fncDelSedaiString( _
                        strBookName, _
                        strFullSheetName, _
                        lngTopRow, _
                        lngEndRow, _
                        strColAdr _
                     )
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
        
            '調整資産
            lngTopRow = .Range(strChouseiKikan).Row
            lngEndRow = .Range(strJikoSetteiKikan).Row - 1
            lngRet = fncDelSedaiString( _
                        strBookName, _
                        strFullSheetName, _
                        lngTopRow, _
                        lngEndRow, _
                        strColAdr _
                     )
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
            
            '*********************************************************
            '行削除
            '*********************************************************
            'データの最下行取得
            lngEndRow = .Range(COLADR_DELETE_FLAG & "65536").End(xlUp).Row
            '削除フラグ用セルが"1"の行を削除
            lngRet = fncDeleteRowOnDelFlag(strBookName, strFullSheetName, 1, lngEndRow, DELETE_FLAG_VALUE)
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
        
        End With
    End If
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetGohkei = Err.Number

End Function


'*************************************************************************
'関数名　　：共通シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetBasic( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetBasic = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetBasic = Err.Number

End Function


'*************************************************************************
'関数名　　：案内シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetSoufu( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetSoufu = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetSoufu = Err.Number

End Function



'*************************************************************************
'関数名　　：支払指図書シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetSasizu( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetSasizu = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetSasizu = Err.Number

End Function


'*************************************************************************
'関数名　　：月末算定基礎シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetSuchi1( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetSuchi1 = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetSuchi1 = Err.Number

End Function


'*************************************************************************
'関数名　　：月中算定基礎シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetSuchi2( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetSuchi2 = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetSuchi2 = Err.Number

End Function


'*************************************************************************
'関数名　　：総計算書シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetZentai( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler

    Dim lngRet              As Long     'リターンコード
'    Dim lngKohzaCnt         As Long     '口座数
'    Dim lngTopRow           As Long     '先頭行
    Dim lngEndRow           As Long     '終了行
'    Dim strColAdr           As String   '基準日の列アドレス
'    Dim lngCnt              As Long     'カウンタ

    fncModifyPrintSheetZentai = 0
    
    If lngKind = 1 Then
        
    ElseIf lngKind = 2 Then
    
    ElseIf lngKind = 3 Then
        '*********************************************************
        '請求書ファイルの各シートを修正(データセット後)
        '*********************************************************
        With Workbooks(strBookName).Sheets(strFullSheetName)
            '*********************************************************
            '行削除
            '*********************************************************
            'データの最下行取得
            lngEndRow = .Range(COLADR_DELETE_FLAG & "65536").End(xlUp).Row
            '削除フラグ用セルが"1"の行を削除
            lngRet = fncDeleteRowOnDelFlag(strBookName, strFullSheetName, 1, lngEndRow, DELETE_FLAG_VALUE)
            If lngRet <> 0 Then
                Err.Raise lngRet
            End If
    
        End With
    End If
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetZentai = Err.Number

End Function


'*************************************************************************
'関数名　　：計算書シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetChosei( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetChosei = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetChosei = Err.Number

End Function


'*************************************************************************
'関数名　　：T21明細シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetT21Sisan( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetT21Sisan = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetT21Sisan = Err.Number

End Function


'*************************************************************************
'関数名　　：合成料率シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetGohsei( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetGohsei = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetGohsei = Err.Number

End Function


'*************************************************************************
'関数名　　：料率シートの個別編集処理
'
'引　　数　：ARG1   I   lngKind             編集種別
'                                           1:データシートファイルのTemplateシートを修正
'                                           2:請求書ファイルの各シートを修正(データセット前)
'                                           3:請求書ファイルの各シートを修正(データセット後)
'　　　　　：ARG2   I   typTorikomi         請求データ取込の情報
'　　　　　：ARG3   I   strBookName         編集対象のワークブック名
'　　　　　：ARG4   I   strTempSheetName    TEMPLATEシート名(ヘッダ無しの名称)
'　　　　　：ARG5   I   strFullSheetName    請求書ファイルシート名(ヘッダ付の名称)
'
'戻り値　　：エラー番号
'
'機能説明　：帳票個別の編集処理を行う。
'
'更新履歴　：2006/09/06 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Function fncModifyPrintSheetTokukaGata( _
            ByVal lngKind As Long, _
            ByRef typTorikomi As TorikomiOutput, _
            ByVal strBookName As String, _
            ByVal strTempSheetName As String, _
            ByVal strFullSheetName As String) As Long

On Error GoTo ErrHandler
    Dim lngRet  As Long

    fncModifyPrintSheetTokukaGata = 0
    
    Exit Function

ErrHandler:
    fncModifyPrintSheetTokukaGata = Err.Number

End Function

