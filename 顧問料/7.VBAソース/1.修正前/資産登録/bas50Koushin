Attribute VB_Name = "bas50Koushin"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料・資産登録
'
'オブジェクト名：bas50Koushin
'
'機能概要　：更新処理
'
'更新履歴　：2008/02/22 SRA 東       新規作成
'        　：2009/01/19 SRA Y.Azuma    変更   自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************

Const MODULE_NAME = "bas50Koushin"


'*************************************************************************
'関数名　　：更新処理メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：更新ボタンを押下された場合の処理
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub gsub_KoushinMain(ByRef objTarget As Object)

On Error GoTo Error_Section

    Dim blnRet      As Boolean
    Dim strMsg      As String
    Dim lngRet      As Long
    Dim KoShisan()  As typKoShisan      '子資産一覧格納場所
    Dim dtUpdateYmd As Date
    
    Erase KoShisan

    Application.ScreenUpdating = False
    
    
    '入力チェック処理(更新時)
    blnRet = gfunc_UpdInputCheck(objTarget, KoShisan())

    If blnRet = False Then
        Application.ScreenUpdating = True
        Exit Sub
    End If
    
    
    '更新確認
    strMsg = gfunc_ErrorMsg(2, 17040, "", "", False)
    lngRet = MsgBox(strMsg, vbQuestion + vbOKCancel, Application.ActiveWorkbook.Name)
    If lngRet = vbCancel Then
        Exit Sub
    End If
    
    blnRet = False
    
    
    '更新処理
    blnRet = gfunc_DoUpdate(objTarget, KoShisan(), dtUpdateYmd)

    If blnRet = False Then
    '更新エラー
        Call gfunc_ErrorMsg(1, 17060, "", "", True)

        Application.ScreenUpdating = True
        Erase KoShisan
        Exit Sub
    Else
    '更新成功

        'コンボの再設定
        Call gCom01_SheetProtect(objTarget, False)
        Call subIniCombo
        Call gCom01_SheetProtect(objTarget, True)

        '再検索処理
        Call gsub_KensakuMain(ThisWorkbook.Worksheets(MAIN_SHEETNAME))
    
        Application.ScreenUpdating = True

        'メッセージ
        Call gfunc_ErrorMsg(1, 17070, "", "", True)
    End If
    
    Erase KoShisan
    
    Exit Sub
Error_Section:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "cmdUp_Click", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Application.ScreenUpdating = True
    
    Erase KoShisan

End Sub




'*************************************************************************
'関数名　　：入力チェック処理(更新時)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           KoShisan()          O           子資産一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：メインシートの更新時入力チェックを行い
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'更新履歴　：2008/03/07 SRA Y.Azuma    変更     資産登録20080218 分類"A"の追加
'更新履歴　：2008/03/25 SRA Y.Azuma    修正     資産登録仕様変更
'更新履歴　：2009/01/19 SRA Y.Azuma    変更     自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Public Function gfunc_UpdInputCheck(ByRef TargetSheets As Object, ByRef KoShisan() As typKoShisan) As Boolean
On Error GoTo ErrorSection

    Dim lngRow          As Long
    Dim blnRet          As Boolean
    Dim lngIndex        As Long
    Dim lngCnt          As Long
    Dim lngCnt2         As Long
    Dim strBunrui       As String
    Dim strShisanFirst  As String       '検索時　資産コード
    

    gfunc_UpdInputCheck = False

    
    
    '資産コードの必須チェック & 資産コードの桁数チェック
    blnRet = gfuncCodeInputCheck(TargetSheets)
    If blnRet = False Then
        TargetSheets.Range("資産コード").Select
        Exit Function
    End If
    
    strBunrui = CStr(Mid(TargetSheets.Range("資産コード"), 1, 1))
    
    '資産選択チェック
    blnRet = True
    With TargetSheets
        Select Case strBunrui
            Case "0"
                If .OptChohsei.Value = True Or .OptT21.Value = True Then
                    blnRet = False
                End If
            Case "B"
                If .OptChohsei.Value = False Then
                    blnRet = False
                End If
            Case "Z"
                If .OptT21.Value = False Then
                    blnRet = False
                End If
'------------<資産登録20080218 20080307 SRA東 START> -----------------------
            Case "A"
                If .OptIppan.Value = True Or .OptChohsei.Value = True Or _
                  .OptT21.Value = True Or .OptGohsei.Value = True Then
                    blnRet = False
                End If
'------------<資産登録20080218 20080307 SRA東 END  > -----------------------
            Case Else
                blnRet = False
        End Select

        If blnRet = False Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 17009, "資産コード", "")
            TargetSheets.Range("資産コード").Select
            Exit Function
        End If
        
'------------<資産登録20080218 20080307 SRA東 START> -----------------------
        '検索時資産分類一致チェック
        strShisanFirst = Worksheets(DATA_SHEETNAME).Range("検索時資産コード").Value '資産コード(検索時)
        If Trim(strShisanFirst) <> "" Then
            If strBunrui <> Mid(strShisanFirst, 1, 1) Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17046, "資産コード", "")
                TargetSheets.Range("資産コード").Select
                Exit Function
            End If
        Else
            'nothing
        End If
'------------<資産登録20080218 20080307 SRA東 END  > -----------------------
    
        blnRet = False
    
        '資産名の必須チェック
        If Trim(.Range("資産名").Value) = "" Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 17010, "資産名", "")
            .Range("資産名").Select
            Exit Function
        End If
    
        '資産名のレングスチェック
        If LenB(StrConv(.Range("資産名").Value, vbFromUnicode)) > 60 Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 17011, "資産名", "全角30文字以内又は半角60文字以内で入力して下さい。")
            .Range("資産名").Select
            Exit Function
        End If
    
        '帳票資産名の必須チェック
        If Trim(.Range("帳票資産名").Value) = "" Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 17012, "帳票資産名", "")
            .Range("帳票資産名").Select
            Exit Function
        End If
    
        '帳票資産名のレングスチェック
        If LenB(StrConv(.Range("帳票資産名").Value, vbFromUnicode)) > 60 Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 17013, "帳票資産名", "全角30文字以内又は半角60文字以内で入力して下さい。")
            .Range("帳票資産名").Select
            Exit Function
        End If

    
        '一般資産の場合
        If .OptIppan.Value = True Then
            'PX銘柄コードの必須チェック
            If Trim(.Range("一般PX銘柄コード").Value) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17014, "一般PX銘柄コード", "")
                .Range("一般PX銘柄コード").Select
                Exit Function
            End If
        
            'PX銘柄コードのレングスチェック
            If LenB(StrConv(.Range("一般PX銘柄コード").Value, vbFromUnicode)) > 12 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17015, "一般PX銘柄コード", "半角12文字以内で入力して下さい。")
                .Range("一般PX銘柄コード").Select
                Exit Function
            End If
        Else
            'nothing
        End If
    
        '調整資産の場合
        If .OptChohsei.Value = True Then
            'PX銘柄コードの必須チェック
            If Trim(.Range("調整PX銘柄コード").Value) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17016, "調整PX銘柄コード", "")
                .Range("調整PX銘柄コード").Select
                Exit Function
            End If
        
            'PX銘柄コードのレングスチェック
            If LenB(StrConv(.Range("調整PX銘柄コード").Value, vbFromUnicode)) > 12 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17017, "調整PX銘柄コード", "半角12文字以内で入力して下さい。")
                .Range("調整PX銘柄コード").Select
                Exit Function
            End If
        Else
            'nothing
        End If
    
    
        'T21調整資産の場合
        If .OptT21.Value = True Then
            'PX銘柄コードの必須チェック
            If Trim(.Range("T21PX銘柄コード").Value) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17018, "T21PX銘柄コード", "")
                .Range("T21PX銘柄コード").Select
                Exit Function
            End If
        
            'PX銘柄コードのレングスチェック
            If LenB(StrConv(.Range("T21PX銘柄コード").Value, vbFromUnicode)) > 12 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17019, "T21PX銘柄コード", "半角12文字以内で入力して下さい。")
                .Range("T21PX銘柄コード").Select
                Exit Function
            End If
            
            '委託者報酬率チェック
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
'''            '委託者報酬率チェック①必須チェック 17020
'''            If Trim(.Range("T21委託者報酬率").Value) = "" Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17020, "T21委託者報酬率", "")
'''                .Range("T21委託者報酬率").Select
'''                Exit Function
'''            End If
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------
            
            If Trim(.Range("T21委託者報酬率").Value) <> "" Then
                '委託者報酬率チェック②数値チェック 17021
                If gkyk_IsNumeric(Trim(.Range("T21委託者報酬率").Text)) = False Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 17021, "T21委託者報酬率", "")
                    .Range("T21委託者報酬率").Select
                    Exit Function
                End If
            End If
            
'------------<Modify Start azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
            If Trim(.Range("T21運用報酬率").Value) <> "" Then
                '運用報酬率チェック
                If gkyk_IsNumeric(Trim(.Range("T21運用報酬率").Text)) = False Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 17022, "T21運用報酬率", "")
                    .Range("T21運用報酬率").Select
                    Exit Function
                End If
            End If
'------------<Modify End   azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
            
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
'''            '委託者報酬率チェック③整数チェック 17022
'''            If InStr(1, Trim(.Range("T21委託者報酬率").Text), ".") <> 0 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17022, "T21委託者報酬率", "整数値で入力して下さい。")
'''                .Range("T21委託者報酬率").Select
'''                Exit Function
'''            End If
'''
'''            '委託者報酬率チェック④正負チェック 17023
'''            If .Range("T21委託者報酬率").Value < 0 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17023, "T21委託者報酬率", "")
'''                .Range("T21委託者報酬率").Select
'''                Exit Function
'''            End If
'''
'''            '委託者報酬率チェック⑤桁数チェック 17024
'''            If LenB(StrConv(Trim(.Range("T21委託者報酬率").Text), vbFromUnicode)) > 3 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17024, "T21委託者報酬率", "半角数値3桁以内で入力して下さい。")
'''                .Range("T21委託者報酬率").Select
'''                Exit Function
'''            End If
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------

            
            '時価単位口数チェック
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
'''            '時価単位口数チェック①必須チェック 17025
'''            If Trim(.Range("T21時価単位口数").Value) = "" Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17025, "T21時価単位口数", "")
'''                .Range("T21時価単位口数").Select
'''                Exit Function
'''            End If
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------
            
            If Trim(.Range("T21時価単位口数").Value) <> "" Then
                '時価単位口数チェック②数値チェック 17026
                If gkyk_IsNumeric(Replace(Trim(.Range("T21時価単位口数").Text), ",", "")) = False Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 17026, "T21時価単位口数", "")
                    .Range("T21時価単位口数").Select
                    Exit Function
                End If
            End If
            
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
'''            '時価単位口数チェック③整数チェック 17027
'''            If InStr(1, Trim(.Range("T21時価単位口数").Text), ".") <> 0 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17027, "T21時価単位口数", "整数値で入力して下さい。")
'''                .Range("T21時価単位口数").Select
'''                Exit Function
'''            End If
'''
'''            '時価単位口数チェック④正負チェック 17028
'''            If .Range("T21時価単位口数").Value < 0 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17028, "T21時価単位口数", "")
'''                .Range("T21時価単位口数").Select
'''                Exit Function
'''            End If
'''
'''            '時価単位口数チェック⑤桁数チェック 17029
'''            If LenB(StrConv(Replace(Trim(.Range("T21時価単位口数").Text), ",", ""), vbFromUnicode)) > 15 Then
'''                Application.ScreenUpdating = True
'''                Call gfunc_ErrorMsg(3, 17029, "T21時価単位口数", "半角数値15桁以内で入力して下さい。")
'''                .Range("T21時価単位口数").Select
'''                Exit Function
'''            End If
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------

            'T21口座番号チェック
            'T21口座番号チェック①必須チェック  17030
            If Trim(.Range("T21口座番号").Value) = "" Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17030, "T21口座番号", "")
                .Range("T21口座番号").Select
                Exit Function
            End If
            
            'T21口座番号チェック②桁数チェック  17031
            If LenB(StrConv(.Range("T21口座番号").Value, vbFromUnicode)) <> 6 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17031, "T21口座番号", "半角6文字で入力して下さい。")
                .Range("T21口座番号").Select
                Exit Function
            End If
        Else
            'nothing
        End If
    
        '合成資産の場合
        If .OptGohsei.Value = True Then
        
            lngIndex = -1
            '子資産一覧を構造体に追加する。
            For lngRow = 1 To 6
                If Trim(.Range("合成加減" & lngRow).Value) <> "" Or _
                   Trim(.Range("合成子資産コード" & lngRow).Value) <> "" Then
                    lngIndex = lngIndex + 1
                    ReDim Preserve KoShisan(lngIndex)
                    KoShisan(lngIndex).strKagenKbn = .Range("合成加減" & lngRow).Value
                    KoShisan(lngIndex).strCode = .Range("合成子資産コード" & lngRow).Value
                    KoShisan(lngIndex).lngGyouNo = lngRow
                Else
                    '空行は無視するため処理なし
                End If
            Next lngRow
        
        
            '子資産一覧チェック
            If lngIndex < 0 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 17032, "子資産一覧", "一覧に子資産を入力して下さい。")
                .Range("合成加減1").Select
                Exit Function
            End If
            
            For lngCnt = 0 To UBound(KoShisan)
            
                '加減チェック
                If Trim(KoShisan(lngCnt).strKagenKbn) = "" And Trim(KoShisan(lngCnt).strCode) <> "" Then
                    Application.ScreenUpdating = True
                    Call gfunc_ErrorMsg(3, 17033, "子資産一覧", "資産コード：" & KoShisan(lngCnt).strCode)
                    .Range("合成加減1").Select
                    Exit Function
                End If
            
                '子資産コードチェック
                If Trim(KoShisan(lngCnt).strKagenKbn) <> "" Then
                
                    '子資産コードチェック①必須チェック
                    If Trim(KoShisan(lngCnt).strCode) = "" Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 17034, "子資産コード", KoShisan(lngCnt).lngGyouNo & "行目")
                        .Range("合成子資産コード" & KoShisan(lngCnt).lngGyouNo).Select
                        Exit Function
                    End If
                
                    '子資産コードチェック②桁数チェック
                    If LenB(StrConv(KoShisan(lngCnt).strCode, vbFromUnicode)) <> 5 Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 17035, "子資産コード", KoShisan(lngCnt).lngGyouNo & "行目")
                        .Range("合成子資産コード" & KoShisan(lngCnt).lngGyouNo).Select
                        Exit Function
                    End If
                    
                    '子資産コードチェック③重複チェック
                    For lngCnt2 = 0 To UBound(KoShisan)
                        If KoShisan(lngCnt).lngGyouNo <> KoShisan(lngCnt2).lngGyouNo And _
                           KoShisan(lngCnt).strCode = KoShisan(lngCnt2).strCode Then
                            Application.ScreenUpdating = True
                            Call gfunc_ErrorMsg(3, 17036, "子資産コード", "子資産内で重複があります。資産コード：" & KoShisan(lngCnt).strCode)
                            .Range("合成子資産コード" & KoShisan(lngCnt).lngGyouNo).Select
                            Exit Function
                        End If
                    Next lngCnt2
                    
                    '子資産コードチェック④存在チェック
                    blnRet = fucCheckKoShisan(KoShisan(lngCnt).strCode)
                    If blnRet = False Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 17037, "子資産コード", "子資産コードが資産登録がされていません。資産コード：" & KoShisan(lngCnt).strCode)
                        .Range("合成子資産コード" & KoShisan(lngCnt).lngGyouNo).Select
                        Exit Function
                    End If
                
'------------<資産登録20080218 20080317 SRA東 START> -----------------------
                    '子資産コードチェック⑤親資産コードと重複チェック
                    If KoShisan(lngCnt).strCode = TargetSheets.Range("資産コード") Then
                        Application.ScreenUpdating = True
                        Call gfunc_ErrorMsg(3, 17038, "子資産コード", "親資産コードと重複しています。資産コード：" & KoShisan(lngCnt).strCode)
                        .Range("合成子資産コード" & KoShisan(lngCnt).lngGyouNo).Select
                        Exit Function
                    End If
'------------<資産登録20080218 20080317 SRA東 END  > -----------------------
                    
                
                Else
                    'nothing
                End If
            
            Next lngCnt
            
        Else
            'nothing
        End If
    
    End With

    gfunc_UpdInputCheck = True

    Exit Function

ErrorSection:

    gfunc_UpdInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_UpdInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function

'*************************************************************************
'関数名　　：子資産存在チェック
'
'引　　数　：strShisanCode  I       資産コード(分類＋コード)
'
'戻り値　　：Boolean
'
'機能説明　：資産テーブルから指定した資産を検索して0件の場合エラー
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規
'
'*************************************************************************
Private Function fucCheckKoShisan(ByVal strShisanCode As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql          As String
    Dim vData()         As Variant
    Dim lngCol          As Long
    Dim lngRow          As Long
    
    fucCheckKoShisan = False
    
    Erase vData
    
    '資産テーブル検索SQL作成
    Call sub_ShisanSqlCreate(KO_SHISAN_LIST, strSql)
    
    strSql = strSql & "  AND  SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strShisanCode, 1, 1), "'") & "'"
    strSql = strSql & "  AND  SHISAN_CODE   = '" & func_ChkQuoteshon(Mid(strShisanCode, 2, 4), "'") & "'"
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    If lngRow = 0 Then
        Erase vData
        Exit Function
    Else
        '処理なし
    End If
    
    Erase vData
    
    fucCheckKoShisan = True
    
    Exit Function
ErrHandler:
    fucCheckKoShisan = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fucCheckKoShisan", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData

End Function



'*************************************************************************
'関数名　　：更新処理(メイン)
'
'引　　数　：
'           TargetSheets        I      チェック対象のシート
'           KoShisan()          I      画面の子資産一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：更新
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_DoUpdate(ByRef TargetSheets As Object, ByRef KoShisan() As typKoShisan, ByRef dtUpdateYmd As Date) As Boolean


On Error GoTo ErrorSection

    Dim strShisan           As String       '資産コード(分類＋コード)
    Dim strError            As String
    Dim lngStatus           As Long         '更新済みチェックのステータス
    Dim lngMsgId            As Long         'エラーメッセージID
    Dim strDate             As String
    Dim strTime             As String
    Dim strMsg              As String
    Dim lngRet              As Long
    Dim lngDataCnt          As Long

    gfunc_DoUpdate = False
    

    '資産コード
    strShisan = CStr(TargetSheets.Range("資産コード").Value)


    'トランザクション開始
    cnAdo.BeginTrans

    '更新済みチェックと排他処理
    If func_UpdateCheck(TargetSheets, lngStatus, lngDataCnt) = False Then

        If lngStatus >= 1 And lngStatus <= 3 Then
            '0:正常,1:ロック,2:削除済,
            Select Case lngStatus
                Case 1
                '他セッションからのロック
                    lngMsgId = 17041
                Case 2
                '更新済み
                    '他端末更新
                    lngMsgId = 17042
                Case 3
                '勘定・銘柄・親区分が一致しない
                    lngMsgId = 17043
                Case Else
                    '1～3のステータスしかこないため処理なし
            End Select

            'エラーメッセージ出力
            Call gfunc_ErrorMsg(3, lngMsgId, "", "")
            GoTo RollbackSection
            Exit Function
            
        ElseIf lngStatus = 4 Then
            '4:上書き
            strMsg = gfunc_ErrorMsg(2, 17044, "", "", False)
            lngRet = MsgBox(strMsg, vbQuestion + vbOKCancel, Application.ActiveWorkbook.Name)
            If lngRet = vbCancel Then
                GoTo RollbackSection
                Exit Function
            End If
            
        ElseIf lngStatus = 5 Then
            '5:勘定資産の新規登録

            'エラーメッセージ出力
            Call gfunc_ErrorMsg(3, 17045, "", "")
            GoTo RollbackSection
            Exit Function
            
        Else
            '-1:その他エラー
            'エラーメッセージ出力
            Call gfunc_ErrorMsg(4, 17050, "", "")
            GoTo RollbackSection
            Exit Function
        End If

    End If

    'サーバ日付の取得
    Call gfunc_GetSvDateTime(strDate, strTime)

    '更新日用の日付作成
    dtUpdateYmd = CDate(gfunc_ymdFormat(strDate) & " " _
        & Mid(strTime, 1, 2) & ":" & Mid(strTime, 3, 2) & ":" & Mid(strTime, 5, 2))
    
    '資産テーブルへの処理
    If lngDataCnt > 0 Then
        If func_KYK_SHISAN_UPD(TargetSheets _
                         , strShisan _
                         , dtUpdateYmd _
                         , strError) = False Then
            GoTo RollbackSection
            Exit Function
        End If
    Else
        If func_KYK_SHISAN_INS(TargetSheets _
                         , strShisan _
                         , dtUpdateYmd _
                         , strError) = False Then
            GoTo RollbackSection
            Exit Function
        End If
    End If

    '資産・PX銘柄対応、資産・T21銘柄対応、合成資産の削除
    If func_TableDelete(TargetSheets _
                      , strShisan _
                      , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '資産・PX銘柄対応テーブルへの処理
    If TargetSheets.OptIppan.Value Or _
       TargetSheets.OptChohsei.Value Then
        If func_KYK_SHISAN_PX_INS(TargetSheets _
                                 , strShisan _
                                 , dtUpdateYmd _
                                 , strError) = False Then
            GoTo RollbackSection
            Exit Function
        End If
    Else
        'nothing
    End If
    
    '資産・T21銘柄対応テーブルへの処理
    If TargetSheets.OptT21.Value Then
        If func_KYK_SHISAN_T21_INS(TargetSheets _
                                 , strShisan _
                                 , dtUpdateYmd _
                                 , strError) = False Then
            GoTo RollbackSection
            Exit Function
        End If
    Else
        'nothing
    End If
    
    '合成資産テーブルへの処理
    If TargetSheets.OptGohsei.Value Then
        If func_KYK_GOHSEI_SHISAN(TargetSheets _
                                , strShisan _
                                , KoShisan() _
                                , dtUpdateYmd _
                                , strError) = False Then
            GoTo RollbackSection
            Exit Function
        End If
    Else
        'nothing
    End If

    'コミット
    cnAdo.CommitTrans


    gfunc_DoUpdate = True

    Exit Function

RollbackSection:
    'ロールバック
    cnAdo.RollbackTrans

    gfunc_DoUpdate = False
    Exit Function

ErrorSection:

    gfunc_DoUpdate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_DoUpdate", Err.Number, Err.Description)
    On Error GoTo 0
    On Error Resume Next
    'ロールバック
    cnAdo.RollbackTrans
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------



End Function


'*************************************************************************
'関数名　　：トランザクションチェック処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           dtKoushinYmdFirst   I       検索時
'           lngStatus           O       エラーステータス
'　(0:正常,1:ロック,2:更新済,3:区分違い,4:上書き,5:勘定資産の新規登録,-1:その他)
'
'戻り値　　：なし
'
'機能説明　：テーブルの排他・ロックチェック
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'更新履歴　：2008/03/25 SRA Y.Azuma    修正     資産登録仕様変更
'
'*************************************************************************
Public Function func_UpdateCheck(ByRef TargetSheets As Object _
                               , ByRef lngStatus As Long _
                               , ByRef lngRow As Long) As Boolean

On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim dtKoushinYmd            As Date         '
    Dim strShisan               As String       '画面　　資産コード
    Dim strShisanFirst          As String       '検索時　資産コード
    Dim dtKoushinYmdFirst       As Date         '検索時　更新日付
    Dim strKnjhMgrOyaKbnGM      As String       '画面の勘定・銘柄・親区分

    func_UpdateCheck = False

    strErrCode = ""
    strErrCode = "ORA-00054"
    lngStatus = -1


    '資産コード(検索時)
    strShisanFirst = Worksheets(DATA_SHEETNAME).Range("検索時資産コード").Value

    '更新日付(検索時)
    dtKoushinYmdFirst = Worksheets(DATA_SHEETNAME).Range("資産更新日付").Value

    '資産コード(画面)
    strShisan = TargetSheets.Range("資産コード").Value

    strSql = ""
    strSql = strSql & " SELECT KANJOH_MEIGARA_OYA_KBN"
    strSql = strSql & "       ,KOUSHIN_YMD"
    strSql = strSql & "       ,SAKUJO_FLG"
    strSql = strSql & "   FROM " & TBL_SHISAN
    strSql = strSql & "  WHERE SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "'"
    strSql = strSql & "    AND SHISAN_CODE   = '" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "'"
    strSql = strSql & " FOR UPDATE NOWAIT"
    
    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)

    If blnRet = False Then
        If Trim(strErrCode) <> "" Then
    
            If strErrCode = "ORA-00054" Then
            '他セッションからのロック状態
                lngStatus = 1
            Else
            'その他エラー
                lngStatus = -1
            End If
    
            Erase vData
            Exit Function
        
        End If
    Else
        
        '勘定・銘柄・親区分の同一チェック
        '①画面から区分の取得
        strKnjhMgrOyaKbnGM = func_KnjhMgrOyaKbnGet(TargetSheets)
        
        '②取得した勘定・銘柄・親区分と比較
        If lngRow > 0 Then
            If CStr(vData(2, 0)) = "0" And CStr(vData(0, 0)) <> strKnjhMgrOyaKbnGM Then
                lngStatus = 3   '区分違い
                Erase vData
                Exit Function
            End If
        Else
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
'''            If strKnjhMgrOyaKbnGM = "1" Then
            If strKnjhMgrOyaKbnGM = "1" And Mid(strShisan, 1, 1) = "0" Then
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------
                lngStatus = 5   '一般資産の勘定コード集計型の新規登録
                Erase vData
                Exit Function
            End If
        End If
    
    End If
    '更新日付の比較確認
    If strShisanFirst = strShisan Then

        If lngRow > 0 And dtKoushinYmdFirst <> 0 Then
            If IsNull(vData(1, 0)) = False Then
                If IsDate(vData(1, 0)) = True Then
                    dtKoushinYmd = Format(vData(1, 0), "yyyy/mm/dd") & " " & Format(vData(1, 0), "hh:mm:ss")
                    
                    '未削除の場合、更新日付の比較をする。
                    If CStr(vData(2, 0)) = "0" And dtKoushinYmdFirst <> dtKoushinYmd Then
                    
                        lngStatus = 2
                        Erase vData
                        Exit Function
                    End If
                Else
                    'Not date  nothing
                End If
            Else
                'Null nothing
            End If
        End If
    Else
    '検索時と資産コードが異なる
    
        '上書きの確認
        If lngRow > 0 Then
            If CStr(vData(2, 0)) = "0" Then
                lngStatus = 4
                Erase vData
                Exit Function
            Else
                '削除済みのため上書き確認のひつようない
            End If
        Else
            'NoData nothing
        End If
        
    End If

    lngStatus = 0
    Erase vData
    func_UpdateCheck = True

    Exit Function

ErrorSection:

    func_UpdateCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(MODULE_NAME, "func_UpdateCheck", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function


'*************************************************************************
'関数名　　：資産テーブル更新処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strShisan           I       資産コード(分類＋コード)
'           dtUpdateYmd         I       更新用日付
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：資産テーブルへの更新を行う
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_SHISAN_UPD(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByVal dtUpdateYmd As Date _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim strShisanName           As String
    Dim strShisanPName          As String


    func_KYK_SHISAN_UPD = False


    strShisanName = func_ChkQuoteshon(Trim(TargetSheets.Range("資産名").Value), "'")
    strShisanPName = func_ChkQuoteshon(Trim(TargetSheets.Range("帳票資産名").Value), "'")
    
    strSql = ""
    strSql = strSql & " UPDATE  " & TBL_SHISAN
    strSql = strSql & " SET     SHISAN_NAME        = '" & func_ChkQuoteshon(strShisanName, "'") & "'"
    strSql = strSql & "        ,KOUSHIN_YMD        = TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & "        ,KOUSHIN_PGM_ID     = '" & UPDATE_PGM_ID & "'"
    strSql = strSql & "        ,KOUSHIN_TANTOUSHA  = '" & UPDATE_USER & "'"
    strSql = strSql & "        ,SAKUJO_FLG         = '0'"
    strSql = strSql & "        ,SHISAN_PNAME       = '" & func_ChkQuoteshon(strShisanPName, "'") & "'"
    strSql = strSql & " WHERE   SHISAN_BUNRUI      = '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
    strSql = strSql & "   AND   SHISAN_CODE        = '" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
    

    '実行
    blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)

    If blnRet = False Then

        If Trim(strErrCode) <> "" Then
            strError = strErrCode & "(" & TBL_SHISAN & ")"
        End If
        Erase vData
        Exit Function
    End If

    Erase vData

    func_KYK_SHISAN_UPD = True

    Exit Function

ErrorSection:

    func_KYK_SHISAN_UPD = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_UPD", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function

'*************************************************************************
'関数名　　：資産テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strShisan           I       資産コード(分類＋コード)
'           dtUpdateYmd         I       更新用日付
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：資産テーブルへの登録を行う
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_SHISAN_INS(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByVal dtUpdateYmd As Date _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim strShisanName           As String
    Dim strShisanPName          As String
    Dim strKnjhMgrOyaKbnGM      As String


    func_KYK_SHISAN_INS = False


    strShisanName = func_ChkQuoteshon(Trim(TargetSheets.Range("資産名").Value), "'")
    strShisanPName = func_ChkQuoteshon(Trim(TargetSheets.Range("帳票資産名").Value), "'")
    strKnjhMgrOyaKbnGM = func_KnjhMgrOyaKbnGet(TargetSheets)
    
    '登録
    strSql = ""
    strSql = strSql & " INSERT INTO " & TBL_SHISAN & " ("
    strSql = strSql & "  SHISAN_BUNRUI "
    strSql = strSql & " ,SHISAN_CODE "
    strSql = strSql & " ,SHISAN_NAME "
    strSql = strSql & " ,TOHROKU_YMD "
    strSql = strSql & " ,KOUSHIN_YMD "
    strSql = strSql & " ,KOUSHIN_PGM_ID "
    strSql = strSql & " ,KOUSHIN_TANTOUSHA "
    strSql = strSql & " ,SAKUJO_FLG "
    strSql = strSql & " ,KANJOH_MEIGARA_OYA_KBN "
    strSql = strSql & " ,SHISAN_PNAME"
    strSql = strSql & " )"
    strSql = strSql & " VALUES"
    strSql = strSql & "  ("
    strSql = strSql & " '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(strShisanName, "'") & "'"
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
    strSql = strSql & ",'" & UPDATE_USER & "'"
    strSql = strSql & ",'0'"
    strSql = strSql & ",'" & strKnjhMgrOyaKbnGM & "'"
    strSql = strSql & ",'" & func_ChkQuoteshon(strShisanPName, "'") & "'"
    strSql = strSql & " )"

    
    '実行
    blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)

    If blnRet = False Then

        If Trim(strErrCode) <> "" Then
            strError = strErrCode & "(" & TBL_SHISAN & ")"
        End If
        Erase vData
        Exit Function
    End If

    Erase vData

    func_KYK_SHISAN_INS = True

    Exit Function

ErrorSection:

    func_KYK_SHISAN_INS = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_INS", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function

'*************************************************************************
'関数名　　：資産関連テーブル削除処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strShisan           I       資産コード(分類＋コード)
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：資産・PX銘柄対応、資産・T21銘柄対応、合成資産テーブルを削除
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_TableDelete(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()             As Variant
    Dim strSql              As String
    Dim lngCol              As Long
    Dim lngRow              As Long
    Dim blnRet              As Boolean
    Dim strErrCode          As String
    Dim vTable              As Variant
    Dim lngCnt              As Long


    func_TableDelete = False
    
    vTable = Array(TBL_SHISAN_PX, TBL_SHISAN_T21, TBL_GOHSEI_SHISAN)
    
    For lngCnt = 0 To UBound(vTable)

        Select Case vTable(lngCnt)
            Case TBL_SHISAN_PX
            '資産・PX銘柄対応の作雄
                strSql = ""
                strSql = strSql & " DELETE  " & TBL_SHISAN_PX
                strSql = strSql & " WHERE   SHISAN_BUNRUI      = '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
                strSql = strSql & "   AND   SHISAN_CODE        = '" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
            
            Case TBL_SHISAN_T21
            '資産・T21銘柄対応の削除
                strSql = ""
                strSql = strSql & " DELETE  " & TBL_SHISAN_T21
                strSql = strSql & " WHERE   SHISAN_BUNRUI      = '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
                strSql = strSql & "   AND   SHISAN_CODE        = '" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
            
            Case TBL_GOHSEI_SHISAN
            '合成資産の削除
                strSql = ""
                strSql = strSql & " DELETE  " & TBL_GOHSEI_SHISAN
                strSql = strSql & " WHERE   OYA_SHISAN_BUNRUI      = '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
                strSql = strSql & "   AND   OYA_SHISAN_CODE        = '" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
            Case Else
                'テーブル配列の値以外判定されない　nothing
        End Select
    
        '実行
        If Trim(strSql) <> "" Then
            blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)
    
            If blnRet = False Then
        
                If Trim(strErrCode) <> "" Then
                    strError = strErrCode & "(" & vTable(lngCnt) & ")"
                End If
        
                Erase vData
                Erase vTable
                Exit Function
            End If
        Else
            'nothing
        End If

    Next lngCnt

    Erase vData
    Erase vTable

    func_TableDelete = True

    Exit Function

ErrorSection:

    func_TableDelete = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_TableDelete", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData
    Erase vTable


End Function

'*************************************************************************
'関数名　　：資産・PX銘柄対応テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strShisan           I       資産コード(分類＋コード)
'           dtUpdateYmd         I       更新用日付
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：資産・PX銘柄対応テーブルへの登録を行う
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_SHISAN_PX_INS(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByVal dtUpdateYmd As Date _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim strGaibuCode            As String


    func_KYK_SHISAN_PX_INS = False

    With TargetSheets
        If .OptIppan.Value Then
            '一般資産
            strGaibuCode = Trim(.Range("一般PX銘柄コード").Value)
        ElseIf .OptChohsei.Value Then
            '調整資産
            strGaibuCode = Trim(.Range("調整PX銘柄コード").Value)
        End If
    End With
    
    '登録
        strSql = ""
    strSql = strSql & " INSERT INTO " & TBL_SHISAN_PX & "("
    strSql = strSql & " SHISAN_BUNRUI,"
    strSql = strSql & " SHISAN_CODE,"
    strSql = strSql & " GAIBU_CODE,"
    strSql = strSql & " TOHROKU_YMD,"
    strSql = strSql & " KOHSHIN_YMD,"
    strSql = strSql & " KOHSHIN_PGM_ID,"
    strSql = strSql & " KOHSHIN_TANTOHSHA,"
    strSql = strSql & " SAKUJO_FLG"
    strSql = strSql & " )"
    strSql = strSql & " VALUES"
    strSql = strSql & " ("
    strSql = strSql & " '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(strGaibuCode, "'") & "'"
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
    strSql = strSql & ",'" & UPDATE_USER & "'"
    strSql = strSql & ",'0'"
    strSql = strSql & " )"
    strSql = strSql & "  "
    
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)

    If blnRet = False Then

        If Trim(strErrCode) <> "" Then
            strError = strErrCode & "(" & TBL_SHISAN & ")"
        Else
            'nothing
        End If
        
        Erase vData
        Exit Function
        
    End If
    

    Erase vData

    func_KYK_SHISAN_PX_INS = True

    Exit Function

ErrorSection:

    func_KYK_SHISAN_PX_INS = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_PX_INS", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function

'*************************************************************************
'関数名　　：資産・T21銘柄対応テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strShisan           I       資産コード(分類＋コード)
'           dtUpdateYmd         I       更新用日付
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：資産・T21銘柄対応テーブルへの登録を行う
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'　　　　　：2009/01/19 SRA Y.Azuma    変更   自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Private Function func_KYK_SHISAN_T21_INS(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByVal dtUpdateYmd As Date _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim strGaibuCode            As String
    Dim strHohshuRate           As String
    Dim strJikaTaniKuchisu      As String
    Dim strT21KohzaNo           As String
    
    Dim strUnyoHohshuRate       As String '<----------- Modify azuma 2009/01/19自己設定投信の委託者報酬額の内訳管理



    func_KYK_SHISAN_T21_INS = False

    With TargetSheets
        strGaibuCode = Trim(.Range("T21PX銘柄コード").Value)
        strHohshuRate = Trim(.Range("T21委託者報酬率").Value)
'------------<Modify Start azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
        strUnyoHohshuRate = Trim(.Range("T21運用報酬率").Value)
'------------<Modify End   azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
        strJikaTaniKuchisu = Replace(Trim(.Range("T21時価単位口数").Value), ",", "")
        strT21KohzaNo = Trim(.Range("T21口座番号").Value)
    End With
    
    '登録
    strSql = ""
    strSql = strSql & " INSERT INTO " & TBL_SHISAN_T21 & "("
    strSql = strSql & " SHISAN_BUNRUI,"
    strSql = strSql & " SHISAN_CODE,"
    strSql = strSql & " GAIBU_CODE,"
    strSql = strSql & " HOHSHU_RATE,"
    strSql = strSql & " JIKA_TANI_KUCHISU,"
    strSql = strSql & " T21_KOHZA_NO,"
    strSql = strSql & " TOHROKU_YMD,"
    strSql = strSql & " KOHSHIN_YMD,"
    strSql = strSql & " KOHSHIN_PGM_ID,"
    strSql = strSql & " KOHSHIN_TANTOHSHA,"
    strSql = strSql & " SAKUJO_FLG"
'------------<Modify Start azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    strSql = strSql & ",UNYOH_HOHSHU_RATE "
'------------<Modify End   azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    strSql = strSql & " )"
    strSql = strSql & " VALUES"
    strSql = strSql & " ("
    strSql = strSql & " '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
    strSql = strSql & ",'" & func_ChkQuoteshon(strGaibuCode, "'") & "'"
    strSql = strSql & ",'" & func_ChkQuoteshon(strHohshuRate, "'") & "'"
    strSql = strSql & ",'" & func_ChkQuoteshon(strJikaTaniKuchisu, "'") & "'"
    strSql = strSql & ",'" & func_ChkQuoteshon(strT21KohzaNo, "'") & "'"
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
    strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
    strSql = strSql & ",'" & UPDATE_USER & "'"
    strSql = strSql & ",'0'"
'------------<Modify Start azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    strSql = strSql & ",'" & func_ChkQuoteshon(strUnyoHohshuRate, "'") & "'"
'------------<Modify End   azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    strSql = strSql & " )"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)

    If blnRet = False Then

        If Trim(strErrCode) <> "" Then
            strError = strErrCode & "(" & TBL_SHISAN_T21 & ")"
        End If
        Erase vData
        Exit Function
    End If
    
    Erase vData

    func_KYK_SHISAN_T21_INS = True

    Exit Function

ErrorSection:

    func_KYK_SHISAN_T21_INS = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_T21_INS", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function


'*************************************************************************
'関数名　　：合成資産テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strCode             I       資産コード
'           KoShisan()          I       子資産データ
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：合成資産テーブルへの登録を行う
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_GOHSEI_SHISAN(ByVal TargetSheets As Object _
                           , ByVal strShisan As String _
                           , ByRef KoShisan() As typKoShisan _
                           , ByVal dtUpdateYmd As Date _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim lngCnt                  As Long


    func_KYK_GOHSEI_SHISAN = False
    
    'テーブルの更新
    For lngCnt = 0 To UBound(KoShisan)
    
        '登録
        strSql = ""
        strSql = strSql & " INSERT INTO " & TBL_GOHSEI_SHISAN & " ("
        strSql = strSql & " OYA_SHISAN_BUNRUI,"
        strSql = strSql & " OYA_SHISAN_CODE,"
        strSql = strSql & " KO_SHISAN_BUNRUI,"
        strSql = strSql & " KO_SHISAN_CODE,"
        strSql = strSql & " SHISAN_KAGEN_KBN,"
        strSql = strSql & " TOHROKU_YMD,"
        strSql = strSql & " KOHSHIN_YMD,"
        strSql = strSql & " KOHSHIN_PGM_ID,"
        strSql = strSql & " KOHSHIN_TANTOHSHA,"
        strSql = strSql & " SAKUJO_FLG"
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "  ("
        strSql = strSql & " '" & func_ChkQuoteshon(Mid(strShisan, 1, 1), "'") & "' "
        strSql = strSql & ",'" & func_ChkQuoteshon(Mid(strShisan, 2, 4), "'") & "' "
        strSql = strSql & ",'" & func_ChkQuoteshon(Mid(KoShisan(lngCnt).strCode, 1, 1), "'") & "' "
        strSql = strSql & ",'" & func_ChkQuoteshon(Mid(KoShisan(lngCnt).strCode, 2, 4), "'") & "' "
        strSql = strSql & ",'" & KoShisan(lngCnt).strKagenKbn & "1'"
        strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
        strSql = strSql & ",TO_DATE('" & Format(dtUpdateYmd, "yyyy/mm/dd") & " " & Format(dtUpdateYmd, "hh:mm:ss") & "','YYYY/MM/DD HH24:MI:SS') "
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",'0'"
        strSql = strSql & " )"

        
        '実行
        blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)

        If blnRet = False Then
    
            If Trim(strErrCode) <> "" Then
                strError = strErrCode & "(" & TBL_GOHSEI_SHISAN & ")"
            End If
            
            Erase vData
            Exit Function
            
        End If
        
    Next lngCnt
    
    Erase vData

    func_KYK_GOHSEI_SHISAN = True

    Exit Function

ErrorSection:

    func_KYK_GOHSEI_SHISAN = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_GOHSEI_SHISAN", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

    Erase vData


End Function


'*************************************************************************
'関数名　　：画面勘定銘柄親区分判定
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'
'戻り値　　：1:勘定、2:銘柄、3:親
'
'機能説明　：画面のオプションボタンから勘定・銘柄・親区分を判定する。
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KnjhMgrOyaKbnGet(ByVal TargetSheets As Object) As String

    Dim strKnjhMgrOyaKbnGM  As String
    
    With TargetSheets
        If .OptIppan.Value = True Or .OptChohsei = True Or .OptT21 = True Then
            strKnjhMgrOyaKbnGM = MEIGARA
        ElseIf .OptGohsei.Value = True Then
            strKnjhMgrOyaKbnGM = OYA_KBN
        Else
        '全て未選択の場合、勘定資産
            strKnjhMgrOyaKbnGM = KANJOH
        End If
    End With
    
    func_KnjhMgrOyaKbnGet = strKnjhMgrOyaKbnGM

End Function


