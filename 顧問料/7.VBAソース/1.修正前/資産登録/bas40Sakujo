Attribute VB_Name = "bas40Sakujo"
Option Explicit

'**************************************************************************************
'
'プロジェクト名：国内顧問料・資産登録
'
'オブジェクト名：bas40Sakujo
'
'機能概要　：削除処理
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************

Const MODULE_NAME = "bas40Sakujo"


'**************************************************************************************
'関数名　　：削除ボタン押下処理関数
'
'引　　数　：objTarget        I           対象のシート(main)
'
'戻り値　　：なし
'
'機能説明　：削除ボタン押下時の処理
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Public Sub gsub_SakujoMain(ByRef objTarget As Object)
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "gsub_SakujoMain"
    
    Dim blnRet          As Boolean
    Dim strMsg          As String
    Dim lngRet          As Long
    
    blnRet = False
    strMsg = ""
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Application.ScreenUpdating = False
    
    '削除前チェック処理(資産コード)
    blnRet = funcShisanCdCheck(objTarget)
    
    If blnRet = False Then
        Application.ScreenUpdating = True
        Exit Sub
    End If
    
    blnRet = False
    
    '確認メッセージ
    strMsg = gfunc_ErrorMsg(2, 17080, "", "", False)
    lngRet = MsgBox(strMsg, vbQuestion + vbOKCancel, Application.ActiveWorkbook.Name)
    
    If lngRet = vbCancel Then
        Exit Sub
    End If
    
    '削除処理
    blnRet = funcDelete(objTarget)
    
    If blnRet = False Then
        '削除失敗
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(1, 17081, "", "")
        Exit Sub
    End If
    
    'コンボの再設定
    Call g_subInitialize
    
    Application.ScreenUpdating = True
    
    'メッセージ(正常終了)
    Call gfunc_ErrorMsg(1, 17082, "", "", True)
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Sub
    
ErrorSection:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gsub_SakujoMain", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Application.ScreenUpdating = True

End Sub

'**************************************************************************************
'関数名　　：削除前チェック処理
'
'引　　数　：objTarget        I           対象のシート(main)
'
'戻り値　　：True(チェックOK)、False(チェックNG)
'
'機能説明　：1.資産コードが検索時(又は更新時)の資産コードと同じでなければエラーとする。
'          ：2.資産コードが現在組み入れられているものであればエラーとする。
'          ：3.資産コードが合成資産の子資産であればエラーとする。
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function funcShisanCdCheck(ByRef objTarget As Object) As Boolean
On Error GoTo ErrorSection
    
    Const PROCEDURE_NAME As String = "funcShisanCdCheck"
    
    Dim blnRet            As Boolean
    Dim strShisanCd       As String    '入力エリアの資産コード
    Dim strStoredShisanCd As String    '検索または更新した直後の資産コード
    Dim vData()           As Variant
    
    funcShisanCdCheck = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strShisanCd = Trim(objTarget.Range("資産コード"))
    strStoredShisanCd = Trim(ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時資産コード"))
    
    '1.同値チェック
    If StrComp(strShisanCd, strStoredShisanCd, vbBinaryCompare) <> 0 Then
        Call gfunc_ErrorMsg(3, 17083, "資産コード", "")
        Exit Function
    End If
    
    '2.組み入れ状況チェック
    blnRet = funcKumiireCheck(strShisanCd, vData)
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    If vData(0, 0) > 0 Then
        Erase vData
        Call gfunc_ErrorMsg(3, 17084, "資産コード", "")
        Exit Function
    End If
    
    '3.子資産チェック
    blnRet = funcKoShisanCheck(strShisanCd, vData)
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    If vData(0, 0) > 0 Then
        Erase vData
        Call gfunc_ErrorMsg(3, 17086, "資産コード", "")
        Exit Function
    End If
    
    Erase vData
    funcShisanCdCheck = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
ErrorSection:

    Erase vData
    funcShisanCdCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "funcShisanCdCheck", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    
End Function

'**************************************************************************************
'関数名　　：資産組み入れ状況チェック
'
'引　　数　：strCd        I           資産コード
'          ：vData()      I           取得結果
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：処理日と引数の資産コードを元に、料率適用期間テーブルを参照。
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function funcKumiireCheck(ByVal strCd As String, ByRef vData() As Variant) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "funcKumiireCheck"
    
    Dim strSql     As String
    Dim lngCol     As Long
    Dim lngRow     As Long
    Dim strErrCode As String
    
    funcKumiireCheck = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     COUNT(*)"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_RATE_TEKIYOH_KIKAN"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    strSql = strSql & " AND RATE_TEKIYOH_KIKAN_FROM <= TO_NUMBER(TO_CHAR(sysdate, 'yyyymmdd'))"
    strSql = strSql & " AND TO_NUMBER(TO_CHAR(sysdate, 'yyyymmdd')) <= RATE_TEKIYOH_KIKAN_TO"
    strSql = strSql & " AND SAKUJO_FLG = '0'"
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        'システムエラーが発生しました
        Call gfunc_ErrorMsg(4, 17085, "", "")
        Exit Function
    End If
    
    funcKumiireCheck = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:
    funcKumiireCheck = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "funcKumiireCheck", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Function

'**************************************************************************************
'関数名　　：子資産チェック
'
'引　　数　：strCd        I           資産コード
'          ：vData()      I           取得結果
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：合成資産の子資産であるかどうか、合成資産テーブルを参照。
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function funcKoShisanCheck(ByVal strCd As String, ByRef vData() As Variant) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "funcKoShisanCheck"
    
    Dim strSql     As String
    Dim lngCol     As Long
    Dim lngRow     As Long
    Dim strErrCode As String
    
    funcKoShisanCheck = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     COUNT(*)"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_GOHSEI_SHISAN"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KO_SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND KO_SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    strSql = strSql & " AND SAKUJO_FLG = '0'"
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        'システムエラーが発生しました
        Call gfunc_ErrorMsg(4, 17085, "", "")
        Exit Function
    End If
    
    funcKoShisanCheck = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:
    funcKoShisanCheck = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "funcKoShisanCheck", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Function

'**************************************************************************************
'関数名　　：削除処理
'
'引　　数　：objTarget        I           対象のシート(main)
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：オプションボタンの選択値を元に、関連テーブルを物理削除する。
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function funcDelete(ByRef objTarget As Object) As Boolean
On Error GoTo ErrorSection
    
    Const PROCEDURE_NAME As String = "funcDelete"
    
    Dim strShisanCd       As String
    
    funcDelete = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    'トランザクション開始
    cnAdo.BeginTrans
    
    '資産コード取得
    strShisanCd = Trim(objTarget.Range("資産コード"))
    
    '資産テーブル削除
    If func_KYK_SHISAN_DEL(strShisanCd) = False Then
        'システムエラーが発生しました
        Call gfunc_ErrorMsg(4, 17085, "", "")
        GoTo RollbackSection
    End If
    
    '一般資産or調整資産(-)のオプションボタンがONの時
    If (objTarget.OptIppan.Value = True) Or (objTarget.OptChohsei.Value = True) Then
        '資産・PX銘柄対応テーブル削除
        If func_KYK_SHISAN_PX_DEL(strShisanCd) = False Then
            'システムエラーが発生しました
            Call gfunc_ErrorMsg(4, 17085, "", "")
            GoTo RollbackSection
        End If
    
    'T21調整資産のオプションボタンがONの時
    ElseIf objTarget.OptT21.Value = True Then
        '資産・T21銘柄対応テーブル削除
        If func_KYK_SHISAN_T21_DEL(strShisanCd) = False Then
            'システムエラーが発生しました
            Call gfunc_ErrorMsg(4, 17085, "", "")
            GoTo RollbackSection
        End If
    
    '合成資産のオプションボタンがONの時
    ElseIf objTarget.OptGohsei.Value = True Then
        '合成資産テーブル削除
        If func_KYK_GOHSEI_SHISAN_DEL(strShisanCd) = False Then
            'システムエラーが発生しました
            Call gfunc_ErrorMsg(4, 17085, "", "")
            GoTo RollbackSection
        End If
    
    'いずれでもない時は勘定コード集計型
    Else
        '資産・勘定科目コード対応テーブル削除
        If func_KYK_SHISAN_KANJOH_DEL(strShisanCd) = False Then
            'システムエラーが発生しました
            Call gfunc_ErrorMsg(4, 17085, "", "")
            GoTo RollbackSection
        End If
    End If
    
    'コミット
    cnAdo.CommitTrans

    funcDelete = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function
    
RollbackSection:

    'ロールバック
    cnAdo.RollbackTrans
    funcDelete = False
    Exit Function

ErrorSection:

    funcDelete = False
    
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "funcDelete", Err.Number, Err.Description)
    On Error GoTo 0
    On Error Resume Next
    'ロールバック
    cnAdo.RollbackTrans
'---- Error Log End   ----------------------------------------------------

End Function

'**************************************************************************************
'関数名　　：資産テーブル削除処理
'
'引　　数　：strCd        I           資産コード
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：資産テーブルのレコード物理削除
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function func_KYK_SHISAN_DEL(ByVal strCd As String) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "func_KYK_SHISAN_DEL"
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_KYK_SHISAN_DEL = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " DELETE FROM " & TBL_SHISAN
    strSql = strSql & " WHERE  SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND    SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcDELETE, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    Erase vData
    
    func_KYK_SHISAN_DEL = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:

    func_KYK_SHISAN_DEL = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_DEL", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData

End Function

'**************************************************************************************
'関数名　　：資産・PX銘柄対応テーブル削除処理
'
'引　　数　：strCd        I           資産コード
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：資産・PX銘柄対応テーブルのレコード物理削除
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function func_KYK_SHISAN_PX_DEL(ByVal strCd As String) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "func_KYK_SHISAN_PX_DEL"
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_KYK_SHISAN_PX_DEL = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " DELETE FROM " & TBL_SHISAN_PX
    strSql = strSql & " WHERE  SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND    SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcDELETE, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    Erase vData
    
    func_KYK_SHISAN_PX_DEL = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:

    func_KYK_SHISAN_PX_DEL = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_PX_DEL", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData
    
End Function

'**************************************************************************************
'関数名　　：資産・T21銘柄対応テーブル削除処理
'
'引　　数　：strCd        I           資産コード
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：資産・T21銘柄対応テーブルのレコード物理削除
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function func_KYK_SHISAN_T21_DEL(ByVal strCd As String) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "func_KYK_SHISAN_T21_DEL"
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_KYK_SHISAN_T21_DEL = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " DELETE FROM " & TBL_SHISAN_T21
    strSql = strSql & " WHERE  SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND    SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcDELETE, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    Erase vData
    
    func_KYK_SHISAN_T21_DEL = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:

    func_KYK_SHISAN_T21_DEL = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_T21_DEL", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData
    
End Function

'**************************************************************************************
'関数名　　：合成資産テーブル削除処理
'
'引　　数　：strCd        I           資産コード
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：合成資産テーブルのレコード物理削除
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function func_KYK_GOHSEI_SHISAN_DEL(ByVal strCd As String) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "func_KYK_GOHSEI_SHISAN_DEL"
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_KYK_GOHSEI_SHISAN_DEL = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " DELETE FROM " & TBL_GOHSEI_SHISAN
    strSql = strSql & " WHERE  OYA_SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND    OYA_SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcDELETE, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    Erase vData
    
    func_KYK_GOHSEI_SHISAN_DEL = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function

ErrorSection:

    func_KYK_GOHSEI_SHISAN_DEL = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_GOHSEI_SHISAN_DEL", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData
    
End Function

'**************************************************************************************
'関数名　　：資産・勘定科目コード対応テーブル削除処理
'
'引　　数　：strCd        I           資産コード
'
'戻り値　　：True(処理正常)、False(処理異常)
'
'機能説明　：資産・勘定科目コード対応テーブルのレコード物理削除
'
'更新履歴　：2009/10/15 SRA T.Mizutani 新規作成(資産登録画面における資産コード削除対応)
'
'**************************************************************************************
Private Function func_KYK_SHISAN_KANJOH_DEL(ByVal strCd As String) As Boolean
On Error GoTo ErrorSection

    Const PROCEDURE_NAME As String = "func_KYK_SHISAN_KANJOH_DEL"
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    
    func_KYK_SHISAN_KANJOH_DEL = False
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    strSql = ""
    strSql = strSql & " DELETE FROM " & TBL_SHISAN_KANJOH
    strSql = strSql & " WHERE  SHISAN_BUNRUI = '" & func_ChkQuoteshon(Mid(strCd, 1, 1), "'") & "'"
    strSql = strSql & " AND    SHISAN_CODE = '" & func_ChkQuoteshon(Mid(strCd, 2), "'") & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcDELETE, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet = False Then
        Erase vData
        Exit Function
    End If
    
    Erase vData
    
    func_KYK_SHISAN_KANJOH_DEL = True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    Exit Function
    
ErrorSection:

    func_KYK_SHISAN_KANJOH_DEL = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_SHISAN_KANJOH_DEL", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData
    
End Function

