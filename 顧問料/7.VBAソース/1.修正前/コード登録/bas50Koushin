Attribute VB_Name = "bas50Koushin"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料・コード登録
'
'オブジェクト名：bas50Koushin
'
'機能概要　：更新処理
'
'更新履歴　：2007/11/26 SRA 東       新規作成
'
'*************************************************************************

Const MODULE_NAME = "bas50Koushin"





'*************************************************************************
'関数名　　：更新処理メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：更新ボタンを押下された場合の処理
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub gsub_KoushinMain(ByRef objTarget As Object)

On Error GoTo Error_Section

    Dim blnRet      As Boolean
    Dim strMsg      As String
    Dim lngRet      As Long
    Dim CodeValue() As typCodeValue     '画面のコード値一覧格納場所
    
    Dim strCode     As String
    Dim vDatRate()  As Variant          '取得データ
    Dim lngDataCnt  As Long             '取得データ数
    
    Erase vDatRate
    
    blnRet = False
    
    lngDataCnt = 0

    Application.ScreenUpdating = False
    
    
    '入力チェック処理(更新時)
    blnRet = gfunc_UpdInputCheck(objTarget, CodeValue())

    If blnRet = False Then
        Application.ScreenUpdating = True
        Exit Sub
    End If
    
    '検索キー情報取得
    strCode = Trim(objTarget.Range("コードNO"))
    
    '検索時とコードNOが異なる場合(新規追加も)登録済チェック
    If ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時コードNO") <> strCode Then
    
        'コードの検索
        blnRet = func_GetCodeInfo(CStr(CCur(strCode) + 1000), vDatRate, lngDataCnt)
                                          
    End If
    
    '更新確認
    If lngDataCnt > 0 Then
        strMsg = gfunc_ErrorMsg(2, 15019, "", "コードNO：" & strCode, False)
    Else
        strMsg = gfunc_ErrorMsg(2, 15020, "", "", False)
    End If
    lngRet = MsgBox(strMsg, vbQuestion + vbOKCancel, Application.ActiveWorkbook.Name)
    If lngRet = vbCancel Then
        
        Exit Sub
    End If
    
    blnRet = False
    
    
    '更新処理
    blnRet = gfunc_DoUpdate(objTarget, CodeValue())

    If blnRet = False Then
    '更新エラー
        Call gfunc_ErrorMsg(1, 15021, "", "", True)

        Application.ScreenUpdating = True

        Exit Sub
    Else
    '更新成功

        'コンボの再設定
        Call gCom01_SheetProtect(objTarget, False)
        Call subIniCombo
        Call gCom01_SheetProtect(objTarget, True)

        '検索時コードNOの設定
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時コードNO") = objTarget.Range("コードNO")

        Application.ScreenUpdating = True

        'メッセージ
        Call gfunc_ErrorMsg(1, 15022, "", "", True)
    End If
    
    Application.ScreenUpdating = True
    
    Exit Sub
Error_Section:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "cmdUp_Click", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Application.ScreenUpdating = True
    


End Sub




'*************************************************************************
'関数名　　：入力チェック処理(更新時)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           CodeValue()         O           画面のコード値一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：メインシートの更新時入力チェックを行い
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'更新履歴　：2007/12/21 SRA Y.Azuma    変更     (PH4)仕様変更対応
'更新履歴　：2008/01/21 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'
'*************************************************************************
Public Function gfunc_UpdInputCheck(ByRef TargetSheets As Object, ByRef CodeValue() As typCodeValue) As Boolean
On Error GoTo ErrorSection

    Dim lngRow          As Long
    Dim lngCol          As Long
    Dim blnRet          As Boolean
    Dim lngEndRow       As Long     '一覧の終了行
    Dim lngStartRow     As Long     '一覧の開始行
    Dim lngIndex        As Long



    gfunc_UpdInputCheck = False

    lngIndex = 0
    
    
    'コードNOの必須チェック & コードNOの桁数チェック
    blnRet = gfuncCodeInputCheck(TargetSheets)
    If blnRet = False Then
        TargetSheets.Range("コードNO").Select
        Exit Function
    End If

    blnRet = False

    'コード名称の必須チェック
    If Trim(TargetSheets.Range("コード名称").Value) = "" Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 15007, "コード名称", "")
        TargetSheets.Range("コード名称").Select
        Exit Function
    End If

    'コード名称のレングスチェック
    If LenB(StrConv(TargetSheets.Range("コード名称").Value, vbFromUnicode)) > 60 Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 15008, "コード名称", "全角30文字以内又は半角60文字以内で入力して下さい。")
        TargetSheets.Range("コード名称").Select
        Exit Function
    End If

    'コード名称英文字のレングスチェック
    If Trim(TargetSheets.Range("コード名称英字").Value) <> "" Then
        If LenB(StrConv(TargetSheets.Range("コード名称英字").Value, vbFromUnicode)) > 60 Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 15009, "コード名称英字", "全角30文字以内又は半角60文字以内で入力して下さい。")
            TargetSheets.Range("コード名称英字").Select
            Exit Function
        End If
    End If

    'アクティブフラグの必須チェック
    If Trim(TargetSheets.Range("アクティブフラグ").Value) = "" Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 15010, "アクティブフラグ", "")
        TargetSheets.Range("アクティブフラグ").Select
        Exit Function
    End If

    '国内海外区分の必須チェック
    If Trim(TargetSheets.Range("国内海外区分").Value) = "" Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 15011, "国内海外区分", "")
        TargetSheets.Range("国内海外区分").Select
        Exit Function
    End If


    '摘要のレングスチェック
    If Trim(TargetSheets.Range("摘要").Value) <> "" Then
        If LenB(StrConv(TargetSheets.Range("摘要").Value, vbFromUnicode)) > 60 Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 15012, "摘要", "全角30文字以内又は半角60文字以内で入力して下さい。")
            TargetSheets.Range("摘要").Select
            Exit Function
        End If
    End If

    lngStartRow = TargetSheets.Range("対象").Row + 1
    lngEndRow = fncKsCmnSearchNewRow(TargetSheets) - 1
    
    '一覧必須チェック
    If lngEndRow < lngStartRow Then
        Application.ScreenUpdating = True
        Call gfunc_ErrorMsg(3, 15013, "コード値一覧", "一覧にコード値を追加して下さい。")
        Exit Function
    End If
    
    For lngRow = lngStartRow To lngEndRow
    
        ReDim Preserve CodeValue(lngIndex)
        
        lngCol = TargetSheets.Range("コード値").Column
        '一覧コード値必須チェック
        If Trim(TargetSheets.Cells(lngRow, lngCol)) = "" Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 15014, "コード値", (lngRow - lngStartRow + 1) & "行目")
            TargetSheets.Range("コード値").Offset((lngRow - lngStartRow + 1), 0).Select
            Exit Function
        Else
            '一覧コード桁数チェック

            If LenB(StrConv(TargetSheets.Cells(lngRow, lngCol), vbFromUnicode)) > 10 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 15015, "コード値", "10桁以下で入力して下さい。" & vbCrLf & (lngRow - lngStartRow + 1) & "行目")
                TargetSheets.Range("コード値").Offset((lngRow - lngStartRow + 1), 0).Select
                Exit Function
            End If
        
'------------<Modify Start azuma 2007/12/21 (PH4)> ★★★☆-----------------------
            '数値チェック
'------------<Modify Start azuma 2008/01/21 (PH4)> ★★★☆-----------------------
'            If IsNumeric(TargetSheets.Cells(lngRow, lngCol)) = False Then
            If gkyk_IsNumeric(TargetSheets.Cells(lngRow, lngCol)) = False Then
'------------<Modify End   azuma 2008/01/21 (PH4)> ★★★☆-----------------------
                Application.ScreenUpdating = True
                '"コード値：入力に誤りがあります。"
                Call gfunc_ErrorMsg(3, 15027, "コード値", (lngRow - lngStartRow + 1) & "行目")
                TargetSheets.Range("コード値").Offset((lngRow - lngStartRow + 1), 0).Select
                Exit Function
            End If
'------------<Modify End   azuma 2007/12/21 (PH4)> ★★★☆-----------------------
        
        End If
        
        
        CodeValue(lngIndex).strCodeValue = func_ChkQuoteshon(Trim(TargetSheets.Cells(lngRow, lngCol)), "'")
        
        
        lngCol = TargetSheets.Range("コード内容").Column
        '一覧コード内容必須チェック
        If Trim(TargetSheets.Cells(lngRow, lngCol)) = "" Then
            Application.ScreenUpdating = True
            Call gfunc_ErrorMsg(3, 15016, "コード内容", (lngRow - lngStartRow + 1) & "行目")
            TargetSheets.Range("コード内容").Offset((lngRow - lngStartRow + 1), 0).Select
            Exit Function
        Else
            '一覧コード内容桁数チェック

            If LenB(StrConv(TargetSheets.Cells(lngRow, lngCol), vbFromUnicode)) > 60 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 15017, "コード値", "全角30文字以下で入力して下さい。" & vbCrLf & (lngRow - lngStartRow + 1) & "行目")
                TargetSheets.Range("コード内容").Offset((lngRow - lngStartRow + 1), 0).Select
                Exit Function
            End If
        End If
        
        CodeValue(lngIndex).strValueName = func_ChkQuoteshon(Trim(TargetSheets.Cells(lngRow, lngCol)), "'")
'------------<Modify Start azuma 2008/01/10 (PH4)> ★★★☆-----------------------
''        '半角カンマを全角カンマに置換
''        CodeValue(lngIndex).strValueName = Replace(CodeValue(lngIndex).strValueName, ",", "，")
'------------<Modify End   azuma 2008/01/10 (PH4)> ★★★☆-----------------------
        
        lngCol = TargetSheets.Range("コード内容英字").Column
        '一覧コード内容英字桁数チェック
        If Trim(TargetSheets.Cells(lngRow, lngCol)) <> "" Then
            If LenB(StrConv(TargetSheets.Cells(lngRow, lngCol), vbFromUnicode)) > 60 Then
                Application.ScreenUpdating = True
                Call gfunc_ErrorMsg(3, 15018, "コード内容英字", "半角60文字以下で入力して下さい。" & vbCrLf & (lngRow - lngStartRow + 1) & "行目")
                TargetSheets.Range("コード内容英字").Offset((lngRow - lngStartRow + 1), 0).Select
                Exit Function
            End If
        End If
        
        CodeValue(lngIndex).strValueNameE = func_ChkQuoteshon(Trim(TargetSheets.Cells(lngRow, lngCol)), "'")
'------------<Modify Start azuma 2008/01/10 (PH4)> ★★★☆-----------------------
''        '半角カンマを全角カンマに置換
''        CodeValue(lngIndex).strValueNameE = Replace(CodeValue(lngIndex).strValueNameE, ",", "，")
'------------<Modify End   azuma 2008/01/10 (PH4)> ★★★☆-----------------------
        
        lngIndex = lngIndex + 1
    Next lngRow


    gfunc_UpdInputCheck = True

    Exit Function

ErrorSection:

    gfunc_UpdInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_UpdInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function




'*************************************************************************
'関数名　　：更新処理(メイン)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           CodeValue()         I      画面のコード値一覧格納
'
'戻り値　　：Boolean
'
'機能説明　：更新
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_DoUpdate(ByRef TargetSheets As Object, ByRef CodeValue() As typCodeValue) As Boolean


On Error GoTo ErrorSection

    Dim dtKoushinYmdFirst   As Date         '検索時　更新日付
    Dim strCode           As String       'コードNO
    Dim strError            As String
    Dim lngStatus           As Long         '更新済みチェックのステータス
    Dim lngMsgId            As Long         'エラーメッセージID
    Dim strDate             As String
    Dim strTime             As String
    Dim blnInsFlg           As Boolean      '新規登録フラグ(True:Insert,False:Update)
    Dim lngRow              As Long


    gfunc_DoUpdate = False
    
    blnInsFlg = False


    'コードNO　取得
    strCode = CStr(CCur(TargetSheets.Range("コードNO").Value) + 1000)


    'トランザクション開始
    cnAdo.BeginTrans
    

    'コードテーブルへの処理
    If func_KYK_CODE(TargetSheets _
                   , strCode _
                   , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If

    'コード値テーブルへの処理
    If func_KYK_CODE_VALUE(TargetSheets _
                   , strCode _
                   , CodeValue() _
                   , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If


    'コミット
    cnAdo.CommitTrans


    gfunc_DoUpdate = True

    Exit Function

RollbackSection:
    'ロールバック
    cnAdo.RollbackTrans

    gfunc_DoUpdate = False
    Exit Function

ErrorSection:

    gfunc_DoUpdate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_DoUpdate", Err.Number, Err.Description)
    On Error GoTo 0
    On Error Resume Next
    'ロールバック
    cnAdo.RollbackTrans
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------



End Function



'*************************************************************************
'関数名　　：コードテーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strCode             I       コードNO
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：コードテーブルへの登録を行う
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_CODE(ByVal TargetSheets As Object _
                           , ByVal strCode As String _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim lngDankai               As Long
    Dim strNo                   As String
    Dim strCodeName             As String
    Dim strCodeNameE            As String
    Dim strBikoh                As String


    func_KYK_CODE = False


    strCodeName = func_ChkQuoteshon(Trim(TargetSheets.Range("コード名称").Value), "'")
    strCodeNameE = func_ChkQuoteshon(Trim(TargetSheets.Range("コード名称英字").Value), "'")
    strBikoh = func_ChkQuoteshon(Trim(TargetSheets.Range("摘要").Value), "'")
    
    strSql = ""
    strSql = strSql & " UPDATE  " & TBL_CODE
    strSql = strSql & "    SET  "
    strSql = strSql & "         EXT_INT_KBN        = '1'"
    strSql = strSql & "        ,CODE_ID            = '" & "zokusei_cd" & CCur(strCode) - 1000 & "'"
    strSql = strSql & "        ,CODE_NAME          = '" & strCodeName & "'"
    strSql = strSql & "        ,KOHSHIN_YMD        = SYSDATE"
    strSql = strSql & "        ,KOHSHIN_PGM_ID     = '" & UPDATE_PGM_ID & "'"
    strSql = strSql & "        ,KOHSHIN_TANTOHSHA  = '" & UPDATE_USER & "'"
    strSql = strSql & "        ,SAKUJO_FLG         = '0'"
    strSql = strSql & "        ,ACTIVE_FLG         = '" & Mid(TargetSheets.Range("アクティブフラグ").Value, 1, 1) & "'"
    strSql = strSql & "        ,KOKUNAI_KAIGAI_KBN = '" & Mid(TargetSheets.Range("国内海外区分").Value, 1, 1) & "'"
    strSql = strSql & "        ,BIKOH              = '" & strBikoh & "'"
    strSql = strSql & "        ,CODE_NAME_E        = '" & strCodeNameE & "'"
    strSql = strSql & " WHERE   CODE_NO            ='" & strCode & "'"
    

    '実行
    If Trim(strSql) <> "" Then
        blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)

        If blnRet = False Then
    
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
    
            Exit Function
        End If
    End If


    If lngRow = 0 Then
        '登録
        strSql = ""
        strSql = strSql & " INSERT INTO " & TBL_CODE & " ("
        strSql = strSql & "  CODE_NO "
        strSql = strSql & " ,EXT_INT_KBN "
        strSql = strSql & " ,CODE_ID "
        strSql = strSql & " ,CODE_NAME "
        strSql = strSql & " ,TOHROKU_YMD "
        strSql = strSql & " ,KOHSHIN_YMD "
        strSql = strSql & " ,KOHSHIN_PGM_ID "
        strSql = strSql & " ,KOHSHIN_TANTOHSHA "
        strSql = strSql & " ,SAKUJO_FLG"
        strSql = strSql & " ,ACTIVE_FLG"
        strSql = strSql & " ,KOKUNAI_KAIGAI_KBN"
        strSql = strSql & " ,BIKOH"
        strSql = strSql & " ,CODE_NAME_E"
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "  ("
        strSql = strSql & " '" & strCode & "'"
        strSql = strSql & ",'1'"
        strSql = strSql & ",'" & "zokusei_cd" & CCur(strCode) - 1000 & "'"
        strSql = strSql & ",'" & strCodeName & "'"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",'0'"
        strSql = strSql & ",'" & Mid(TargetSheets.Range("アクティブフラグ").Value, 1, 1) & "'"
        strSql = strSql & ",'" & Mid(TargetSheets.Range("国内海外区分").Value, 1, 1) & "'"
        strSql = strSql & ",'" & strBikoh & "'"
        strSql = strSql & ",'" & strCodeNameE & "'"
        strSql = strSql & " )"

        
        '実行
        If Trim(strSql) <> "" Then
            blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
    
            If blnRet = False Then
        
                If Trim(strErrCode) <> "" Then
                    strError = strErrCode
                End If
        
                Exit Function
            End If
        End If
        
    End If

    Erase vData

    func_KYK_CODE = True

    Exit Function

ErrorSection:

    func_KYK_CODE = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_CODE", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function



'*************************************************************************
'関数名　　：コード値テーブル登録処理
'
'引　　数　：
'           TargetSheets        I       処理対象ワークシート
'           strCode             I       コードNO
'           CodeValue()         I       コード値データ
'           strError            O       エラーコード
'
'
'戻り値　　：なし
'
'機能説明　：コードテーブルへの登録を行う
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KYK_CODE_VALUE(ByVal TargetSheets As Object _
                           , ByVal strCode As String _
                           , ByRef CodeValue() As typCodeValue _
                           , ByRef strError As String) As Boolean
On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim lngCnt                  As Long


    func_KYK_CODE_VALUE = False
    
    '論理削除
    strSql = ""
    strSql = strSql & " UPDATE  " & TBL_CODE_VALUE
    strSql = strSql & "    SET  "
    strSql = strSql & "         KOHSHIN_YMD       = SYSDATE"
    strSql = strSql & "        ,KOHSHIN_PGM_ID    = '" & UPDATE_PGM_ID & "'"
    strSql = strSql & "        ,KOHSHIN_TANTOHSHA = '" & UPDATE_USER & "'"
    strSql = strSql & "        ,SAKUJO_FLG        = '1'"
    strSql = strSql & " WHERE   CODE_NO           ='" & strCode & "'"
    
    '実行
    If Trim(strSql) <> "" Then
        blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)

        If blnRet = False Then
    
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
    
            Exit Function
        End If
    End If
    
    'テーブルの更新
    For lngCnt = 0 To UBound(CodeValue)
    
        strSql = ""
        strSql = strSql & " UPDATE  " & TBL_CODE_VALUE
        strSql = strSql & "    SET  "
        strSql = strSql & "         VALUE_NAME        = '" & CodeValue(lngCnt).strValueName & "'"
        strSql = strSql & "        ,VALUE_NAME_E      = '" & CodeValue(lngCnt).strValueNameE & "'"
        strSql = strSql & "        ,KOHSHIN_YMD       = SYSDATE"
        strSql = strSql & "        ,KOHSHIN_PGM_ID    = '" & UPDATE_PGM_ID & "'"
        strSql = strSql & "        ,KOHSHIN_TANTOHSHA = '" & UPDATE_USER & "'"
        strSql = strSql & "        ,SAKUJO_FLG        = '0'"
        strSql = strSql & " WHERE   CODE_NO           ='" & strCode & "'"
        strSql = strSql & "   AND   CODE_VALUE        ='" & CodeValue(lngCnt).strCodeValue & "'"
        
        '実行
        If Trim(strSql) <> "" Then
            blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)
    
            If blnRet = False Then
        
                If Trim(strErrCode) <> "" Then
                    strError = strErrCode
                End If
        
                Exit Function
            End If
        End If
    
    
        If lngRow = 0 Then
            '登録
            strSql = ""
            strSql = strSql & " INSERT INTO " & TBL_CODE_VALUE & " ("
            strSql = strSql & "  CODE_NO "
            strSql = strSql & " ,CODE_VALUE "
            strSql = strSql & " ,VALUE_NAME "
            strSql = strSql & " ,VALUE_NAME_E "
            strSql = strSql & " ,TOHROKU_YMD "
            strSql = strSql & " ,KOHSHIN_YMD "
            strSql = strSql & " ,KOHSHIN_PGM_ID "
            strSql = strSql & " ,KOHSHIN_TANTOHSHA "
            strSql = strSql & " ,SAKUJO_FLG"
            strSql = strSql & " )"
            strSql = strSql & " VALUES"
            strSql = strSql & "  ("
            strSql = strSql & " '" & strCode & "'"
            strSql = strSql & ",'" & CodeValue(lngCnt).strCodeValue & "'"
            strSql = strSql & ",'" & CodeValue(lngCnt).strValueName & "'"
            strSql = strSql & ",'" & CodeValue(lngCnt).strValueNameE & "'"
            strSql = strSql & ",SYSDATE"
            strSql = strSql & ",SYSDATE"
            strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
            strSql = strSql & ",'" & UPDATE_USER & "'"
            strSql = strSql & ",'0'"
            strSql = strSql & " )"
    
            
            '実行
            If Trim(strSql) <> "" Then
                blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
        
                If blnRet = False Then
            
                    If Trim(strErrCode) <> "" Then
                        strError = strErrCode
                    End If
            
                    Exit Function
                End If
            End If
            
        End If
    
    
    Next lngCnt
    


    Erase vData

    func_KYK_CODE_VALUE = True

    Exit Function

ErrorSection:

    func_KYK_CODE_VALUE = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KYK_CODE_VALUE", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

    Erase vData


End Function





