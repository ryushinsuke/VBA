Attribute VB_Name = "bas10Initialize"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料・コード登録
'
'オブジェクト名：bas10Initialize
'
'機能概要　：初期処理
'
'更新履歴　：2007/11/26 SRA 東       新規作成
'
'*************************************************************************
Const MODULE_NAME = "bas10Initialize"

'*************************************************************************
'関数名　　：初期化メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：初期起動時に行われる初期処理のメイン
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub g_subInitialize()

    'コンボ項目の初期化
    Call subIniCombo
    
    '画面の初期化
    Call g_subRateCodeIniScreenH(Worksheets(MAIN_SHEETNAME))   'ヘッダー部
    Call g_subCodeIniScreenD(Worksheets(MAIN_SHEETNAME))   '明細部
    
End Sub


'*************************************************************************
'関数名　　：コード登録画面のクリア処理(ヘッダー部)
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：ヘッダー部のセルをクリアする
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub g_subRateCodeIniScreenH(ByRef TargetSheets As Object)
On Error GoTo ErrHandler

    ' ヘッダー部の初期化
    With TargetSheets

        .Range("コードNO").Value = ""
        .cmdSearch.Enabled = True
        .cmdUp.Enabled = False
    End With
    
Exit Sub

ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "g_subRateCodeIniScreenH", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Sub

'*************************************************************************
'関数名　　：コード登録画面のクリア処理(明細部)
'
'引　　数　：TargetSheets       I       処理対象シート
'
'戻り値　　：なし
'
'機能説明　：明細部行を全て削除する
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub g_subCodeIniScreenD(ByRef TargetSheets As Object)
On Error GoTo ErrHandler

    Dim lngCnt      As Long
    Dim lngDankai   As Long
    
    
    ' 明細部の初期化
    With TargetSheets
        .Range("コード名称").Value = ""
        .Range("コード名称英字").Value = ""
        .Range("アクティブフラグ") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), "1", ACTIVE_FLG_LIST)
        .Range("国内海外区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), "0", KOKUNA_KAIGAI_KBN_LIST)
        .Range("摘要") = ""
        
        'コード内容行削除
        Call gKsC_fncKsCmnCheckRowDelete(ThisWorkbook.Worksheets(MAIN_SHEETNAME), True)
    End With
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時コードNO") = ""
    
Exit Sub
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "g_subCodeIniScreenD", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Sub



'コンボ項目の初期化
Public Sub subIniCombo()

    Dim strErrMsg As String
    
    strErrMsg = ""

    'コードNOのデータ取得
    If fucGetZokuseiCodeList(strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 15001, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(CODE_LIST)
    
    'アクティブフラグリスト作成
    If fucGetComboCodeList(ACTIVE_FLG_LIST, strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 15002, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(ACTIVE_FLG_LIST)
    
    '国内海外区分リスト作成
    If fucGetComboCodeList(KOKUNA_KAIGAI_KBN_LIST, strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 15003, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(KOKUNA_KAIGAI_KBN_LIST)
    
    

End Sub

'*************************************************************************
'関数名　　：コードテーブル抽出処理
'
'引　　数　：strErrMsg      O       エラーメッセージ
'
'戻り値　　：Boolean
'
'機能説明　：コードテーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規
'更新履歴　：2008/01/21 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'
'*************************************************************************
Private Function fucGetZokuseiCodeList(ByRef strErrMsg As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql          As String
    Dim vData()         As Variant
    Dim lngCol          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long
    Dim lngListCol      As Long
    Dim lngListRow      As Long
    
    fucGetZokuseiCodeList = False
    
    strSql = ""
    strSql = strSql & " SELECT CODE_NO"
    strSql = strSql & "   FROM " & TBL_CODE
    strSql = strSql & "  WHERE SUBSTR(LPAD(CODE_NO,10,'0'),LENGTH(LPAD(CODE_NO,10,'0'))-10,10) > '0000001000'"
    strSql = strSql & "    AND SAKUJO_FLG = '0'"
    strSql = strSql & "  ORDER BY SUBSTR(LPAD(CODE_NO,10,'0'),LENGTH(LPAD(CODE_NO,10,'0'))-10,10)"
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Activate
    
    
    '「コードNOリスト」のデータセル範囲をクリア
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
        lngListCol = .Range("コードNOリスト").Column
        .Range(.Cells(2, lngListCol), .Cells(65536, lngListCol)).ClearContents
    End With
    
    lngListRow = 0
    '取得データをセルに設定
    For lngCnt = 0 To lngRow - 1
'------------<Modify Start azuma 2008/01/21 (PH4)> ★★★☆-----------------------
''        If IsNumeric(vData(0, lngCnt)) Then
        If gkyk_IsNumeric(vData(0, lngCnt)) Then
'------------<Modify End   azuma 2008/01/21 (PH4)> ★★★☆-----------------------
            ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(2 + lngListRow, lngListCol).Value = CStr(CCur(vData(0, lngCnt)) - 1000)
            lngListRow = lngListRow + 1
        End If
    Next lngCnt
    
    Erase vData
    
    
    fucGetZokuseiCodeList = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fucGetZokuseiCodeList", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    strErrMsg = "fucGetZokuseiCodeList" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：コンボ用リスト抽出処理
'
'引　　数　：strListName    I       取得するリスト名
'          ：strErrMsg      O       エラーメッセージ
'
'戻り値　　：Boolean
'
'機能説明　：コードテーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規
'
'*************************************************************************
Private Function fucGetComboCodeList(ByVal strListName As String, ByRef strErrMsg As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql          As String
    Dim vData()         As Variant
    Dim lngCol          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long
    Dim lngListCol      As Long
    Dim lngListRow      As Long
    Dim strCode         As String
    
    fucGetComboCodeList = False
    
    Select Case strListName
        Case ACTIVE_FLG_LIST
            strCode = "48"
        Case KOKUNA_KAIGAI_KBN_LIST
            strCode = "49"
    End Select
    
    
    strSql = ""
    strSql = strSql & " SELECT CODE_VALUE||'" & LIST_SEPARATOR & "'||VALUE_NAME"
    strSql = strSql & "   FROM " & TBL_CODE_VALUE
    strSql = strSql & "  WHERE CODE_NO = '" & strCode & "'"
    strSql = strSql & "    AND SAKUJO_FLG = '0'"
    strSql = strSql & " "
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Activate
    
    
    'データセル範囲をクリア
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
        lngListCol = .Range(strListName).Column
        .Range(.Cells(2, lngListCol), .Cells(65536, lngListCol)).ClearContents
    End With
    
    
    '取得データをセルに設定
    For lngCnt = 0 To lngRow - 1
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(2 + lngCnt, lngListCol).Value = Trim(vData(0, lngCnt))
    Next lngCnt
    
    Erase vData
    
    
    fucGetComboCodeList = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fucGetComboCodeList", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    strErrMsg = "fucGetComboCodeList" & vbCrLf & Err.Description

End Function


'*************************************************************************
'関数名　　：dataシートのセル名再定義
'
'引　　数　：strListName    I       取得するリスト名
'
'戻り値　　：無し
'
'機能説明　：名前定義を再設定する。
'
'更新履歴　：2007/11/26 SRA Y.Azuma    新規
'
'*************************************************************************
Private Sub subNameDefine(ByVal strListName As String)

    Dim RowCnt          As Long
    Dim lngListCol      As Long
    
    lngListCol = ThisWorkbook.Worksheets(DATA_SHEETNAME).Range(strListName).Column
    
    '*** 名前定義
        
    For RowCnt = 2 + 0 To 65536
        If Trim(ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(RowCnt, lngListCol).Value) = "" Then
            RowCnt = RowCnt - 1
            Exit For
        End If
    Next RowCnt
    
    '再定義
    ThisWorkbook.Names.Add Name:=strListName, _
     RefersToR1C1:="=data!R2C" & lngListCol & ":R" & RowCnt & "C" & lngListCol
    
End Sub

