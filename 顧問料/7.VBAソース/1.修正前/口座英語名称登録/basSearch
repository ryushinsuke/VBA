Attribute VB_Name = "basSearch"
Option Explicit

'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー算出システム・口座英語名称登録
'
'オブジェクト名：basSearch
'
'機能概要　：外部委託口座の検索
'
'更新履歴　：2008/06/26 NRI堀江   新規作成
'
'*************************************************************************

Private Const MODULE_NAME As String = "basSearch"

'一覧表示欄取得レコード
Private Enum eIchiranRec
PRTCD                       '口座番号
EIJI_NAME                   '英字名称
NAME_J                      '口座名称
KOHZA_NO                    '口座英語名称テーブルの講座NO

End Enum

'*************************************************************************
'
'関数名　　：検索ボタン処理
'
'引　数　　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2008/06/26 NRI堀江   新規作成
'
'*************************************************************************
Function fncSearch() As Long

    Const PROCEDURE_NAME As String = "fncSearch"

On Error GoTo ErrorHandler

    Dim lngRet          As Long
    Dim strSoufubi      As String
    Dim lngRowCnt       As Long
    Dim lngRow          As Long
    Dim vntRec()        As Variant
    Dim lngCnt          As Long
    Dim kouzaNum        As String
    

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncSearch = 0

    With Sheets(SHEET_MAIN)
        Application.ScreenUpdating = False
        
        '変更後の英語名称欄を初期化
        'Sheets(SHEET_TEMP).Cells(2, 41).Value = ""
        
        '変更比較FLAG合計の初期化
        .Range("変更比較FLAG合計").Value = ""
        '一覧表示欄 削除(初期処理)
        fncKsCmnClearField 1
                
        '口座番号の入力チェック
        kouzaNum = .Range("口座番号").Value
        If kouzaNum = vbNullString Then
        
        Else
            If Len(kouzaNum) >= 8 Then
                MsgBox "口座番号：入力桁数が不正です。", Buttons:=vbOKOnly, Title:="エラー"
                .Range("口座番号").Select
                Exit Function
            Else
                If Len(kouzaNum) < 7 Then
                    kouzaNum = String(7 - Len(kouzaNum), "0") & kouzaNum
                Else
                End If
            End If
        End If
        .Range("口座番号").Value = kouzaNum

        '基準日の桁数・形式をチェック
        lngRet = fncChkDateFormat(.Range("基準日").Value, MSG1_KIJUNBI)
        
        'エラー時処理
        If lngRet <> 0 Then
            .Range("基準日").Select
            fncSearch = lngRet
            Exit Function
        End If
        
        '一覧表示欄取得
       lngRet = fncIchiranRead(Left(.Range("外部委託先").Value, 1), .Range("基準日").Value, .Range("口座番号").Value, vntRec, lngRowCnt)
       
       'エラー時処理
        If lngRet <> 0 Then
            fncSearch = lngRet
            Exit Function
        End If

        If lngRowCnt > 0 Then

            '一覧表示欄 行追加
            fncKsCmnAddNrow lngRowCnt

            'データセット
            lngRow = LIST_DATA_TOP_ROW
            For lngCnt = 0 To lngRowCnt - 1

                .Cells(lngRow, COLN_PRTCD) = vntRec(eIchiranRec.PRTCD, lngCnt)
                .Cells(lngRow, COLN_EIJI_NAME) = vntRec(eIchiranRec.EIJI_NAME, lngCnt)
                .Cells(lngRow, COLN_NAME_J) = vntRec(eIchiranRec.NAME_J, lngCnt)
                .Cells(lngRow, COLN_KOHZA_NO) = vntRec(eIchiranRec.KOHZA_NO, lngCnt)
                
                '変更前の口座英語名称コピー
                .Cells(lngRow, COLN_EIJI_NAME_REF) = vntRec(eIchiranRec.EIJI_NAME, lngCnt)

                lngRow = lngRow + 1
            Next
            
            .Range(SELECT_EIJI_NAME).Select

        Else
            '26005 該当データが存在しません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 26005, MSG1_ICHIRAN_DISP, , True
            fncSearch = 26005
            Exit Function

        End If
        
        .Range("変更比較FLAG合計").Formula = "=SUM(" & _
        fncCmnCellAdrCnv(COLN_HENKOU_FLG) & Trim(Str(LIST_DATA_TOP_ROW)) & ":" & _
        fncCmnCellAdrCnv(COLN_HENKOU_FLG) & Trim(Str(LIST_DATA_TOP_ROW + lngRowCnt - 1)) & ")"

    End With

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)

    Exit Function

ErrorHandler:
    Application.ScreenUpdating = True
    fncSearch = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：一覧表示欄取得
'
'引　数　　：ARG1   I   GI_no       String 外部委託先番号(1桁)
'　　　　　：ARG2   I   kijunbi     String 基準日("YYYYMMDD")
'　　　　　：ARG3   I   kouzaNum    String 口座番号
'　　　　　：ARG4   O   vntRec      Variant データ配列
'　　　　　：ARG5   O   lngRow      Long 明細行数
'
'戻り値　　：Long   エラー番号
'
'機能説明　：一覧表示情報を取得する
'
'更新履歴　：2008/06/27 NRI堀江   新規作成
'更新履歴　：2008/07/30 SRA Y.Azuma    修正     連結障害対応(No.4、No.5)
'
'*************************************************************************
Function fncIchiranRead(GI_no As String, _
                        kijunbi As String, _
                        kouzaNum As String, _
                        vntRec() As Variant, _
                        lngRow As Long) As Long

    Const PROCEDURE_NAME As String = "fncIchiranRead"

On Error GoTo ErrHandler
    
    Dim strRet      As String
    Dim strSql      As String
    Dim lngCol      As Long
    Dim strErrCd    As String
    Dim blnRet      As Boolean
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncIchiranRead = 0
    
    If kouzaNum <> vbNullString Then
        strSql = ""
        strSql = strSql & "SELECT" & vbCrLf
        strSql = strSql & "     A.PRTCD," & vbCrLf
        strSql = strSql & "     B.EIJI_NAME," & vbCrLf
        strSql = strSql & "     A.NAME_J," & vbCrLf
        strSql = strSql & "     B.KOHZA_NO" & vbCrLf
        strSql = strSql & "FROM" & vbCrLf
        strSql = strSql & "     VW_DT001D           A," & vbCrLf
        strSql = strSql & "     KYK_GI_KOHZA_EIJI   B" & vbCrLf
        strSql = strSql & "WHERE" & vbCrLf
'------------<連結障害対応20080730 20080416 SRA東 START> -----------------------
        strSql = strSql & "     A.PRTCD     = '" & func_ChkQuoteshon(kouzaNum, "'") & "'" & vbCrLf
'        strSql = strSql & "     A.PRTCD     = '" & kouzaNum & "'" & vbCrLf
'------------<連結障害対応20080730 20080416 SRA東 END  > -----------------------
        strSql = strSql & "AND  A.PRTCD     = B.KOHZA_NO(+)" & vbCrLf
        strSql = strSql & "AND  A.SETTEI_KBN= '1'" & vbCrLf
        strSql = strSql & "AND  (A.CALLOFF_DATE IS NULL OR" & vbCrLf
        strSql = strSql & "      A.CALLOFF_DATE = '0' OR" & vbCrLf
        
        '基準日を入力していたら
        If kijunbi <> vbNullString Then
            strSql = strSql & "      A.CALLOFF_DATE > '" & kijunbi & "')" & vbCrLf
        
        '基準日がブランクだったら
        Else
            strSql = strSql & "      A.CALLOFF_DATE > '0')" & vbCrLf
        End If
        
        strSql = strSql & "AND  A.DELT_FLG  = '0'" & vbCrLf
        strSql = strSql & "AND  b.SAKUJO_FLG(+) = '0'" & vbCrLf
        
        blnRet = fncKsCmnDoExequteSql(MainMenu.gcSELECT, strSql, vntRec, lngCol, lngRow, strErrCd)
        
    Else
        strSql = ""
        strSql = strSql & "SELECT DISTINCT" & vbCrLf
        strSql = strSql & "     C.PRTCD," & vbCrLf
        strSql = strSql & "     D.EIJI_NAME," & vbCrLf
        strSql = strSql & "     C.NAME_J," & vbCrLf
        strSql = strSql & "     D.KOHZA_NO" & vbCrLf
        strSql = strSql & "FROM" & vbCrLf
        strSql = strSql & "     KYK_GI_SHIHARAI_KIKAN       A," & vbCrLf            '外部委託支払い期間
        strSql = strSql & "     KYK_GI_KEISAN_KIKAN         B," & vbCrLf            '外部委託計算期間
        strSql = strSql & "     VW_DT001D                   C," & vbCrLf            '口座属性
        strSql = strSql & "     KYK_GI_KOHZA_EIJI           D" & vbCrLf             '口座英字名称
        strSql = strSql & "WHERE" & vbCrLf
        strSql = strSql & "     A.GI_SHIHARAI_KIKAN_ID  = B.GI_SHIHARAI_KIKAN_ID" & vbCrLf
        strSql = strSql & "AND  B.KOHZA_NO              = C.PRTCD" & vbCrLf
        strSql = strSql & "AND  C.PRTCD                 = D.KOHZA_NO(+)" & vbCrLf
        strSql = strSql & "AND C.SETTEI_KBN             = '1'" & vbCrLf
        strSql = strSql & "AND (C.CALLOFF_DATE IS NULL OR" & vbCrLf
        strSql = strSql & "     C.CALLOFF_DATE          = '0'  OR" & vbCrLf
        
        '基準日が指定されたら
        If kijunbi <> vbNullString Then
            strSql = strSql & "      C.CALLOFF_DATE > '" & kijunbi & "')" & vbCrLf
        
        '基準日がブランクだったら
        Else
            strSql = strSql & "      C.CALLOFF_DATE > '0')" & vbCrLf
        End If
        
        strSql = strSql & "AND  A.SAKUJO_FLG = '0'" & vbCrLf
        strSql = strSql & "AND  B.SAKUJO_FLG = '0'" & vbCrLf
        strSql = strSql & "AND  C.DELT_FLG  = '0'" & vbCrLf
        strSql = strSql & "AND  D.SAKUJO_FLG(+) = '0'" & vbCrLf
        
        '外部委託先が指定されたら
        If GI_no <> vbNullString Then
            strSql = strSql & "AND A.GI_NO        = '" & GI_no & "'" & vbCrLf
        End If
        
        '基準日が指定されたら
        If kijunbi <> vbNullString Then
            strSql = strSql & "AND   A.GI_SHIHARAI_KIKAN_FROM <= '" & kijunbi & "'" & vbCrLf
            strSql = strSql & "AND   A.GI_SHIHARAI_KIKAN_TO   >= '" & kijunbi & "'" & vbCrLf
        End If
        
        strSql = strSql & "ORDER BY" & vbCrLf
        strSql = strSql & "     C.PRTCD" & vbCrLf
        
        blnRet = fncKsCmnDoExequteSql(MainMenu.gcSELECT, strSql, vntRec, lngCol, lngRow, strErrCd)

        If blnRet = False Then
        fncIchiranRead = strErrCd
        Exit Function
        End If
     End If
        Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
        Exit Function


ErrHandler:
    fncIchiranRead = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function
