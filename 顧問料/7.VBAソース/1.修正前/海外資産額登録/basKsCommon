Attribute VB_Name = "basKsCommon"
Option Explicit

Const MODULE_NAME = "basKsCommon"

Public Const TBL_KAIGAI_SHISAN_GAKU = "KYK_KAIGAI_SHISAN_GAKU"              '海外資産額テーブル名定義

Public Const UPDATE_USER = "APL001"
Public Const UPDATE_PGM_ID = "海外資産額登録"
'---------<Add Start 2012/07/30 海外資産額アップロード機能追加> -------
Public Const UPDATE_PGM_ID_UPLD = "海外資産額登録（汎用アップロード）"
'---------<Add End   2012/07/30 > -------------------------------------

Public Const MAIN_SHEETNAME = "main"
Public Const TEMPLATE_SHEETNAME = "template"
'---------<Add Start 2012/07/30 海外資産額アップロード機能追加> -------
Public Const UPLD_SHEETNAME = "upload"
Public Const LOG_SHEETNAME = "log"
Public Const DATA_SHEETNAME = "data"
'---------<Add End   2012/07/30 > -------------------------------------

Private Const mCELLNAME = "C"           '対象チェックボックスの表示位置
Public Const mLINKCELLNAME = "AJ"       '対象チェックボックスリンクセルの位置(チェックボックスの値を格納)

Private Const mCELLNAME_DEC = "Y"       '確定チェックボックスの表示位置
Public Const mLINKCELLNAME_DEC = "AK"   '確定チェックボックスリンクセルの位置(チェックボックスの値を格納)

Public Const LIST_COPY_SEARCH_ROW = 3   '検索用コピー元行
Public Const LIST_COPY_NEW_ROW = 6      '新規用コピー元行

Public Const START_ROW = 13             '明細開始行

Public blnProcessing As Boolean         '処理中フラグ   True:検索・初期化処理中

Public Const CHECK_ON = "TRUE"
Public Const CHECK_OFF = "FALSE"

'海外資産額テーブルの取得項目順
Public Enum EmGetDetailInfo
    KOHZA_NO = 0            '口座番号
    NAME_RE                 '口座名称
    MNGCD                   '通貨コード
    SHISAN_GAKU             '資産額
    KEIYAKU_TAISHOH         '契約対象
    KAKUTEI_FLG             '確定フラグ
    TOHROKU_YMD             '登録日時
End Enum

'海外資産テーブル構造体
Public Type typKaigaiShisan
    lngRow          As Long
    strKohzaNo      As String
    strKijunYmd     As String
    strShisanGaku   As String
    strKakuteiFlg   As String
    dtKoushinYmd    As Date
End Type

'---------<Add Start 2012/07/30 海外資産額アップロード機能追加> -------
'アップロードファイル構造体
Public Type typUpldRec
    lngRow          As Long   'レコードの行番号
    strKohzaNo      As String '口座
    strShisanGaku   As String '資産額
    strReason       As String 'エラー理由
End Type
'---------<Add End   2012/07/30 > -------------------------------------

'*************************************************************************
'関数名　　：明細行削除メイン処理
'
'引　　数　：
'           TargetSheets        I       削除対象シート
'           AllDel              I       全削除フラグ(初期値:False)　True:全削除
'
'戻り値　　：Long       エラー番号
'
'機能説明　：明細行の削除を行う。
'
'更新履歴　：2006/07/05 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnCheckRowDelete(TargetSheets As Object, Optional AllDel As Boolean = False) As Long
On Error GoTo ErrorSection
    Dim lngCnt As Long


    gKsC_fncKsCmnCheckRowDelete = 0
    
    lngCnt = TargetSheets.Range("対象").Row + 1
        
    With TargetSheets
        Do While (.Range(mLINKCELLNAME & lngCnt) <> vbNullString)
            If AllDel = False Then
            '選択削除
                If .Range(mLINKCELLNAME & lngCnt) Then
                    Call fncKsCmnDeleteRow(TargetSheets, lngCnt)
                Else
                    lngCnt = lngCnt + 1
                End If
            Else
            '全削除
                Call fncKsCmnDeleteRow(TargetSheets, lngCnt)
            End If
        Loop
    End With
    
    Exit Function

ErrorSection:
    gKsC_fncKsCmnCheckRowDelete = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnCheckRowDelete", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：明細行削除処理
'
'引　　数　：
'           iDelRow       I       削除対象ROW
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の削除を行う。
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function fncKsCmnDeleteRow(TargetSheets As Object, iDelRow As Long) As Long
On Error GoTo ErrorSection

    fncKsCmnDeleteRow = 0
    
    If TargetSheets.Range(mLINKCELLNAME & iDelRow) = "" Then
        Exit Function
    End If
    
    '対象チェックボックスの削除処理
    Call fncCmnDelCheckBox(TargetSheets, mLINKCELLNAME & iDelRow)
    
    '確定チェックボックスの削除処理
    Call fncCmnDelCheckBox(TargetSheets, mLINKCELLNAME_DEC & iDelRow)
    
    '明細行の削除処理
    TargetSheets.Rows(iDelRow & ":" & iDelRow).Select
    ThisWorkbook.Application.CutCopyMode = False
    Selection.Delete Shift:=xlUp

    TargetSheets.Cells(iDelRow, 2).Select

    Exit Function

ErrorSection:
'    MsgBox Err.Description
    fncKsCmnDeleteRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnDeleteRow", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：チェックボックスの削除
'
'引　　数　：
'           CellName       I       削除対象セル
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function fncCmnDelCheckBox(ByRef objTarget As Object, CellName As String) As Long
Dim c As Object
    
On Error GoTo ErrorSection
    
    With objTarget
        For Each c In .Shapes
            If Mid(c.Name, 1, 8) = "CheckBox" Then
                If .OLEObjects(c.Name).LinkedCell = CellName Then
                    .OLEObjects(c.Name).Delete
                End If
            End If
        Next
    End With

    Exit Function

ErrorSection:
    fncCmnDelCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnDelCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
End Function

'*************************************************************************
'関数名　　：明細行追加メイン処理
'
'引　　数　：
'           iInsRow       I       追加対象ROW
'           iSrcRow       I       複写元ROW
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の追加を行う。
'
'更新履歴　：2007/11/30 SRA T.Azuma    新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnInsRow(TargetSheets As Object, iInsRow As Long, iSrcRow As Long) As Long
    
On Error GoTo ErrorSection

    gKsC_fncKsCmnInsRow = 0
    
    
    ThisWorkbook.Sheets(TEMPLATE_SHEETNAME).Rows(iSrcRow & ":" & iSrcRow).Copy
    With TargetSheets
        .Select
        .Rows(iInsRow & ":" & iInsRow).Select
        .Rows(iInsRow & ":" & iInsRow).Insert Shift:=xlDown
        ThisWorkbook.Application.CutCopyMode = False
    End With

    '対象チェックボックスの追加
    Call fncCmnSetCheckBox(TargetSheets, mCELLNAME & iInsRow, mLINKCELLNAME & iInsRow)
    
    '確定チェックボックスの追加
    Call fncCmnSetCheckBox(TargetSheets, mCELLNAME_DEC & iInsRow, mLINKCELLNAME_DEC & iInsRow)
    
    
    Select Case iSrcRow
    Case LIST_COPY_SEARCH_ROW
    '検索時
'        TargetSheets.Cells(iInsRow, 15).Select
        
    Case LIST_COPY_NEW_ROW
    '新規追加
        TargetSheets.Cells(iInsRow, 4).Select
        
    Case Else
        TargetSheets.Cells(iInsRow, 15).Select
    End Select
    
    Exit Function

ErrorSection:
    gKsC_fncKsCmnInsRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnInsRow", Err.Number, Err.Description)
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

'*************************************************************************
'関数名　　：チェックボックスの作成
'
'引　　数　：
'           CellName       I       作成対象セル
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function fncCmnSetCheckBox(ByRef objTarget As Object _
                                , ByVal CellName As String _
                                , ByVal LinkCellName As String) As Long
    
On Error GoTo ErrorSection
    fncCmnSetCheckBox = 0
    
    Dim lngZoom     As Long
    Dim lngLeftSet  As Long
    
    lngZoom = ThisWorkbook.Application.ActiveWindow.Zoom
    ThisWorkbook.Application.ActiveWindow.Zoom = 100
    
    If Mid(LinkCellName, 1, 2) = mLINKCELLNAME Then
        lngLeftSet = 10
    ElseIf Mid(LinkCellName, 1, 2) = mLINKCELLNAME_DEC Then
        lngLeftSet = 28
    Else
        lngLeftSet = 10
    End If
    
    With objTarget.Range(CellName)
        ThisWorkbook.Worksheets(MAIN_SHEETNAME).OLEObjects.Add( _
            ClassType:="Forms.CheckBox.1", _
            Link:=False, _
            DisplayAsIcon:=False, _
            Left:=.Left + lngLeftSet, _
            Top:=.Top + 2.5, _
            Width:=10.5, _
            Height:=10). _
        Select
        Selection.LinkedCell = LinkCellName
        ThisWorkbook.Worksheets(MAIN_SHEETNAME).Range(LinkCellName).Value = False
    End With

    ThisWorkbook.Application.ActiveWindow.Zoom = lngZoom
    Exit Function

ErrorSection:
    fncCmnSetCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnSetCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

'*************************************************************************
'関数名　　：明細行追加位置取得処理
'
'引　　数　：TargetSheets       I       処理対象シート
'
'
'戻り値　　：明細行の追加行番号
'
'機能説明　：明細行の追加行番号を返す
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function fncKsCmnSearchNewRow(TargetSheets As Object) As Long

On Error GoTo ErrorSection

    fncKsCmnSearchNewRow = 0
    
    
    With TargetSheets
        fncKsCmnSearchNewRow = .Range(mLINKCELLNAME & 65536).End(xlUp).Row + 1
    End With
    
    If fncKsCmnSearchNewRow < TargetSheets.Range("対象").Row Then
        fncKsCmnSearchNewRow = TargetSheets.Range("対象").Row + 1
    End If
    
    Exit Function

ErrorSection:

    fncKsCmnSearchNewRow = 0
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnSearchNewRow", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：書式フォーマット取得
'
'引　　数　：
'           strValue        I       編集対象文字列
'           lngCol          I       編集対象セル列番号
'
'戻り値　　：編集文字列
'
'機能説明　：各セルに応じた書式で整形した文字列を返す。
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'更新履歴　：2008/01/22 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'更新履歴　：2008/02/12 SRA Y.Azuma    変更     (PH4)総合障害No.4の対応
'
'*************************************************************************
Public Function func_Format(ByVal strValue As String, ByVal lngCol As Long) As String

    Dim strFormat       As String
    Dim lngGakuCol      As Long     '資産額のカラム番号
    
    '明細の列番号を取得
    With ThisWorkbook.Worksheets(MAIN_SHEETNAME)
        lngGakuCol = .Range("資産額").Column
    End With

    '書式フォーマット設定
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
'    If Not IsNull(strValue) And IsNumeric(strValue) Then
    If Not IsNull(strValue) And gkyk_IsNumeric(strValue) Then
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
    
        Select Case lngCol
        Case lngGakuCol
'------------<Modify Start azuma 2008/02/12 (PH4)> ★★★☆-----------------------
            strFormat = "#,##0.00"         '額
'            strFormat = "#,##0.###"         '額
'------------<Modify End   azuma 2008/02/12 (PH4)> ★★★☆-----------------------
        End Select

'------------<Modify Start azuma 2008/02/12 (PH4)> ★★★☆-----------------------
        
        func_Format = "" & Format(strValue, strFormat)

'        If Abs(strValue - Fix(strValue)) > 0 Then
'            func_Format = "" & Format(strValue, strFormat)
'        Else
'            func_Format = "" & Format(strValue, "#,##0")
'        End If
'------------<Modify End   azuma 2008/02/12 (PH4)> ★★★☆-----------------------


'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
    Else
        func_Format = strValue
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
    End If

End Function


'*************************************************************************
'関数名　　：月末日取得
'
'引　　数　：
'           strYYYYMM       I       年月
'
'戻り値　　：月末日(YYYYMMDD)
'
'機能説明　：指定年月の月末日を求める。指定年月が不正の場合NULL
'
'更新履歴　：2007/11/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function func_GetLastDay(ByVal strYYYYMM As String) As String
On Error Resume Next

    Dim wDate       As Date     '日付編集用WORK
    Dim strDate     As String   '月末日

    func_GetLastDay = ""

    '基準年月の月末日取得
    If IsDate(Mid(strYYYYMM, 1, 4) & "/" & Mid(strYYYYMM, 5, 2) & "/01") = True Then
        wDate = Mid(strYYYYMM, 1, 4) & "/" & Mid(strYYYYMM, 5, 2) & "/01"
        wDate = DateAdd("m", 1, wDate)
        wDate = DateAdd("d", -1, wDate)
        strDate = Format(wDate, "YYYYMMDD")
    Else
        Exit Function
    End If
    
    func_GetLastDay = strDate

End Function

'*************************************************************************
'関数名　　：前月末日取得
'
'引　　数　：
'           strYYYYMM       I       年月
'
'戻り値　　：前月末日(YYYYMMDD)
'
'機能説明　：指定年月の前月末日を求める。指定年月が不正の場合NULL
'
'更新履歴　：2010/04/15 SRA T.mizutani    新規作成
'
'*************************************************************************
Public Function func_GetZenLastDay(ByVal strYYYYMM As String) As String
On Error Resume Next

    Dim wDate       As Date     '日付編集用WORK
    Dim strDate     As String   '前月末日

    func_GetZenLastDay = ""

    '基準年月の月末日取得
    If IsDate(Mid(strYYYYMM, 1, 4) & "/" & Mid(strYYYYMM, 5, 2) & "/01") = True Then
        wDate = Mid(strYYYYMM, 1, 4) & "/" & Mid(strYYYYMM, 5, 2) & "/01"
        wDate = DateAdd("d", -1, wDate)
        strDate = Format(wDate, "YYYYMMDD")
    Else
        Exit Function
    End If
    
    func_GetZenLastDay = strDate

End Function

