Attribute VB_Name = "basBPrcsByAsset"
Option Explicit

'*************************************************************************
'
'プロジェクト名：新顧問料契約管理システム・WEB時価ﾃﾞｰﾀ取込処理
'
'オブジェクト名：basBPrcsByAsset
'
'機能概要　：資産別時価ビジネスロジック
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/26 SRA T.Tanaka    DBアクセスをADOに統一
'　　　　　：2006/01/28 SRA T.Tanaka    『国内CB』、『その他資産』の集計対象を変更
'　　　　　：2006/12/04 SRA Iida        DB変更・共通化・仕様追加・資産コード修正
'*************************************************************************
Private Const MODULE_NAME As String = "basBPrcsByAsset"

Private mcolKouzaNo As Collection
Private mcolSyuBnr  As Collection
Private mcolkouzaData As Collection      '<2006/12/07 ADD  IIDA>

Private Const BNR_CD1_TOKUKIN As String = "00100010"
Private Const BNR_CD2_KYOUSAI As String = "00200010"
Private Const BNR_CD3_JAKA_BS As String = "00300010"
Private Const BNR_ID1_TOKUKIN As Long = 1
Private Const BNR_ID2_KYOUSAI As Long = 2
Private Const BNR_ID3_JAKA_BS As Long = 3
Private Const BNR_SHISAN      As Long = 9

'<----- 資産コードに対する集計対象帳票科目コード -------------------------->
'<2006/12/04 ADD S iida>
'-----------------------------------------------------------------------
'集計分類 00100010（年金特金(科目別)）
'-----------------------------------------------------------------------
'<<国内債権>>
Public Const S1_KMK_CD1 As String = "0010:0020:0030:0040:" & _
                                     "0060:0070:0080:0090:0100:" & _
                                     "0110:0120:0130:0140:0150:0160:"
'<<国内債権（短期資産含む)>>
Public Const S1_KMK_CD2 As String = "0010:0020:0030:0040:" & _
                                     "0060:0070:0080:0090:0100:" & _
                                     "0110:0120:0130:0140:0150:0160:"
'<<国内債権>>
Public Const S1_KMK_CD3 As String = "0010:0020:0030:0040:" & _
                                     "0060:0070:0150:0160:"
'<<国内ＣＢ>>
Public Const S1_KMK_CD4 As String = "0050:0170:"
'<<国内株式>>
Public Const S1_KMK_CD5 As String = "0190:0200:"
'<<外国債券>>
Public Const S1_KMK_CD6 As String = "0210:"
'<<外国株式>>
Public Const S1_KMK_CD7 As String = "0220:"
'<<国内株・ＣＢ・外国債権>>
Public Const S1_KMK_CD8 As String = "0050:0170:0190:0200:0210:"
'<<その他資産>>
Public Const S1_KMK_CD9 As String = "0080:0090:0100:0110:0120:0130:0140:"
'-----------------------------------------------------------------------
'集計分類 00200010（共済）
'-----------------------------------------------------------------------
'<<国内債権>>
Public Const S2_KMK_CD1 As String = "0010:0020:0030:0040:0050:" & _
                                     "0060:0070:0180:0190:0200:" & _
                                     "0210:0220:0230:0240:0250:0260:0270:"
'<<国内債権（短期資産含む)>>
Public Const S2_KMK_CD2 As String = "0010:0020:0030:0040:0050:" & _
                                     "0060:0070:0180:0190:0200:" & _
                                     "0210:0220:0230:0240:0250:0260:270:"
'<<国内債権>>
Public Const S2_KMK_CD3 As String = "0010:0020:0030:0040:0050:" & _
                                     "0060:0070:"
'<<国内ＣＢ>>
Public Const S2_KMK_CD4 As String = "0090:0100:"
'<<国内株式>>
Public Const S2_KMK_CD5 As String = "0120:0130:"
'<<外国債券>>
Public Const S2_KMK_CD6 As String = "0140:0150:"
'<<外国株式>>
Public Const S2_KMK_CD7 As String = "0160:"
'<<国内株・ＣＢ・外国債権>>
Public Const S2_KMK_CD8 As String = "0090:0100:0120:0130:0140:0150:"
'<<その他資産>>
Public Const S2_KMK_CD9 As String = "0180:0190:0200:0210:0220:0230:0240:" & _
                                     "0250:0260:0270:"
'-----------------------------------------------------------------------
'集計分類 00300010（年金時価ベース）
'-----------------------------------------------------------------------
'<<国内債権>>
Public Const S3_KMK_CD1 As String = "0010:0040:0220:0240:0250:0260:"
'<<国内債権（短期資産含む)>>
Public Const S3_KMK_CD2 As String = "0010:0040:0220:0240:0250:0260:"
'<<国内債権>>
Public Const S3_KMK_CD3 As String = "0010:0040:"
'<<国内ＣＢ>>
Public Const S3_KMK_CD4 As String = "0050:0070:"
'<<国内株式>>
Public Const S3_KMK_CD5 As String = "0080:0100:"
'<<外国債券>>
Public Const S3_KMK_CD6 As String = "0110:0140:"
'<<外国株式>>
Public Const S3_KMK_CD7 As String = "0150:0170:"
'<<国内株・ＣＢ・外国債権>>
Public Const S3_KMK_CD8 As String = "0050:0070:0080:0100:0110:0140:"
'<<その他資産>>
Public Const S3_KMK_CD9 As String = "0220:0240:0250:0260:"
'<2006/12/04 ADD E iida>
'<----- 資産コードに対する集計対象帳票科目コード -------------------------->
'<2006/12/04 DEL S iida>
''集計分類 00100010（年金特金(科目別)）
'Private Const S1_KMK_CD2 As String = "0010:0020:0030:0040:" & _
'                                     "0060:0070:0080:0090:0100:" & _
'                                     "0110:0120:0130:0140:0150:0160:"
'Private Const S1_KMK_CD3 As String = "0050:0170:"
'Private Const S1_KMK_CD1 As String = "0190:0200:"
'Private Const S1_KMK_CD5 As String = "0210:"
'Private Const S1_KMK_CD4 As String = "0220:"
'Private Const S1_KMK_CD6 As String = "0180:0230:"
'Private Const S1_KMK_CD0 As String = S1_KMK_CD3 & S1_KMK_CD1 & S1_KMK_CD5
'
''集計分類 00200010（共済）
'Private Const S2_KMK_CD2 As String = "0010:0020:0030:0040:0050:" & _
'                                     "0060:0070:"
'Private Const S2_KMK_CD3 As String = "0090:0100:"
'Private Const S2_KMK_CD1 As String = "0120:0130:"
'Private Const S2_KMK_CD5 As String = "0140:0150:"
'Private Const S2_KMK_CD4 As String = "0160:"
'Private Const S2_KMK_CD6 As String = "0170:0180:0190:0200:0210:0220:0230:0240:0250:0260:0270:0280:"
'Private Const S2_KMK_CD0 As String = S2_KMK_CD3 & S2_KMK_CD1 & S2_KMK_CD5
'
''集計分類 00300010（年金時価ベース）
'Private Const S3_KMK_CD2 As String = "0010:0040:"
'Private Const S3_KMK_CD3 As String = "0050:0070:"
'Private Const S3_KMK_CD1 As String = "0080:0100:"
'Private Const S3_KMK_CD5 As String = "0110:0140:"
'Private Const S3_KMK_CD4 As String = "0150:0170:"
'Private Const S3_KMK_CD6 As String = "0180:0190:0200:0210:0220:0230:0240:0250:0260:"
'Private Const S3_KMK_CD0 As String = S3_KMK_CD3 & S3_KMK_CD1 & S3_KMK_CD5
'
''(未収金・未払金)を集計する帳票科目コードに含み、時価の集計値から未払費用を差し引く資産｡
'Private Const SHISAN_CD_OTHER As String = "6"   '資産コード = 6（その他資産）
'<2006/12/04 DEL E iida>

'<2006/12/04 UPDATE S iida>
Private ArrData2()  As COL_Shisan

Type COL_Shisan
    levsCDKouzaNo_S     As String       '口座番号
    levsCDFandNo_S      As String       'ファンドＮＯ
    levsCDFandName_S    As String       'ファンド名
    levsCDSyuBnr_S      As String       '集計分類
    levsCDCKmkCd_S      As String       '帳票科目コード
    levsCDShisanBR_S    As String       '資産分類
    levsCDShisanCD_S    As String       '資産コード
    levsCDBkZndk_S      As Currency     '簿価残高
    levsCDJikaGk_S      As Currency     '時価総額
    levsCDMibarai_S     As Currency     '未払計
End Type
'<2006/12/04 UPDATE E iida>
Private Enum COL_D
    levsCDfandNo = 1    'ファンドＮＯ
    levsCDDateTo        '終端基準日
    levsCDDateFr        '初端基準日    '未使用
    levsCDSyuBnr        '集計分類
    levsCDCKmkCd        '帳票科目コード
    levsCDBkZndk        '簿価残高
    levsCDJikaGk = 17   '時価総額
    levsCDMBSyoh        '未払消費税
    levsCDMBTokh        '未払特法税
    levsCDMBSHsy        '未払信託報酬
    levsCDMBTKmn        '未払投資顧問料
End Enum

'<2006/12/04 MOV S IIDA> 定義共通　CONSTへ
'Private Enum COL_U
'    levsCUFundNo = 1    'ファンドＮＯ
'    levsCUKouzaNo        '口座番号
'    levsCUShisan        '資産コード
'    levsCUYYYYMM        '基準日
'    levsCUJikaGk        '時価
'End Enum
'<2006/12/04 MOV E IIDA>

'<2006/12/14 ADD S iida>
Private ArrShisanKei()   As ShisanJIka

Type Kouzadata
    strfandno   As String
    strKouza    As String
End Type

Type ShisanJIka
    curjika     As Currency
    curMibarai  As Currency
End Type

'*************************************************************************
'関数名　　：ダウンロードデータの絞り込む
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：取込条件の対象外のデータを削除する。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/30 SRA T.Tanaka    ファイル形式チェックの追加に伴う変更
'　　　　　：2006/02/09 SRA T.Tanaka    集計分類は口座毎に異なるのでここでは処理しない
'　　　　　：2006/02/10 SRA T.Tanaka    帳票科目コードは集計分類毎に異なるのでここでは処理しない
'
'*************************************************************************
Private Function fncPickData() As Long
    
    Const PROCEDURE_NAME As String = "fncPickData"
    
    On Error GoTo ErrHandler
    
    Dim lngRet  As Long
    Dim lngrow  As Long
    Dim blnFlg(1) As Boolean
    Dim lngcnt   As Long         '<2006/12/18 ADD iida>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncPickData = -1
    
    lngcnt = 0
    lngrow = fncGetRowHeader(Sheets(D_PRC_BY_ASSET))
    '<2006/12/18 ADD S iida>
    If lngrow = 0 Then
        Call gfunc_ErrorMsg(3, ERR_CHECK_FILE, ERRMSG6_INPUTFILE, "", True)
        GoTo ErrHandler
        'Err.Raise ERR_CHECK_FILE
    End If
    '<2006/12/18 ADD S iida>
    
    lngRet = fncChkDataFormat(lngrow)
    If lngRet <> 0 Then
        Call gfunc_ErrorMsg(3, ERR_CHECK_FILE, ERRMSG6_INPUTFILE, "", True)
        GoTo ErrHandler
        'Err.Raise ERR_CHECK_FILE
    End If
    
    lngrow = lngrow + 1
    
    With Sheets(D_PRC_BY_ASSET)
    
        Do
            Erase blnFlg
            '終端基準日　＝　入力画面・基準年月日
            If .Cells(lngrow, levsCDDateTo) = glngDate Then
                blnFlg(1) = True
            End If
            
            If blnFlg(1) Then
                lngrow = lngrow + 1
            Else
                .Range(lngrow & ":" & lngrow).Delete
            End If
            
            '<2006/12/18 ADD S iida>
            If blnFlg(1) = True Then
                lngcnt = lngcnt + 1
            End If
            '<2006/12/18 ADD E iida>
            
        Loop Until .Cells(lngrow, levsCCComDat) = DET_FOOTER
        
        '<2006/12/18 ADD S iida>
        '対象ﾃﾞｰﾀが残っているかチェック
        If lngcnt = 0 Then
            Call gfunc_ErrorMsg(3, ERRMSG_NODATA_SHEET, ERRMSG6_INPUTFILE, "", True)
            GoTo ErrHandler
        End If
        '<2006/12/18 ADD S iida>
        
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncPickData = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 UPDATE iida>
    fncPickData = -1
    'fncPickData = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：アップロード用シート作成
'
'引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
'
'戻り値　　：エラー番号
'
'機能説明　：データの取得と集計を行う。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'
'*************************************************************************
Public Function fncMakePrcsByAsset() As Long
                
    Const PROCEDURE_NAME As String = "fncMakePrcsByAsset"
    
    On Error GoTo ErrHandler
    
    Dim lngRet      As Long
    Dim strsql      As String
    Dim strcon      As String
    Dim mShisanData() As COL_Shisan
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Do
        lngRet = fncGetUserSheetData(SHEET_USR2, mcolKouzaNo, 1)
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit Do
        End If
        lngRet = fncGetUserSheetData(SHEET_USR2, mcolSyuBnr, 2)
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit Do
        End If
        
        lngRet = fncBChkCollection(mcolKouzaNo)
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            Call gfunc_ErrorMsg(3, ERRMSG_ERR_NO_KOUZA, "", "", True)
            GoTo ErrHandler
            'Exit Do
        End If
        
        'Debug.Print fncGetCollectionItem(colSyuBnr, "121", strSql)
        
        lngRet = fncPickData
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit Do
        End If
        
        lngRet = fncSetShisanCD
        If lngRet <> 0 Then
            GoTo ErrHandler
        End If
        
        lngRet = fncSetData()
        '<2006/12/18 UPDATE iida>
        If lngRet <> 0 Then
            GoTo ErrHandler
            'Exit Do
        End If
        
        lngRet = fncCalcData()
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
        End If
        
    Loop Until True
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakePrcsByAsset = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 DEL iida>
    fncMakePrcsByAsset = -1
    'fncMakePrcsByAsset = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：データの取得
'
'引　　数　：なし
'
'戻り値　　：エラー番号
'
'機能説明　：「ファンドＮＯ」から「口座番号」・「資産コード｣を取得する。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/26 SRA T.Tanaka    DBアクセスをADOに統一
'　　　　　：2006/01/28 SRA T.Tanaka    エラー処理(０件対応、メッセージ)の修正
'　　　　　：2006/01/30 SRA T.Tanaka    エラー処理(メッセージ)の修正
'　　　　　：2006/02/22 SRA T.Tanaka    資産コードの取得元を変更
'　　　　　：2006/12/04 SRA Iida        DB変更に伴う修正
'*************************************************************************
Private Function fncSetData() As Long
                
    Const PROCEDURE_NAME As String = "fncSetData"

    On Error GoTo ErrHandler
    
    Dim lngcnt      As Long
    Dim lngRet      As Long
    Dim strsql      As String
    Dim strcon      As String
    Dim strYYYYMM   As String
    Dim recSel      As ADODB.Recordset
    Dim strbikou    As String
    Dim ArrFandNO()     As Variant      '<2006/12/18 ADD IIDA>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncSetData = -1
       
    gusrErr.MsgNaiyou = ERRMSG0_FUNDNO  'メッセージ内容
    strbikou = strbikou & D_PRICES_TRUST
    Erase ArrFandNO
    strcon = fncGetTargetFundCode(Sheets(D_PRC_BY_ASSET), ArrFandNO())
    If strcon = vbNullString Then
        '<2006/12/18 UPDATE iida>
        gusrErr.ErrNum = ERRMSG_NODATA_SHEET
        GoTo ErrHandler
        'Err.Raise ERR_NO_DATA_SHEET
    Else
        '<2006/11/28 UPDATE S Iida> KK01→VW_DT001に変更
        strsql = ""
        strsql = strsql & fncGetConVWDT001D
        strsql = strsql & " AND TRIM(sintaku_bank_prtcd) IN (" & strcon & ")"
        strcon = strsql
        
        'strSql = strSql & fncGetConKK01
        'strSql = strSql & " AND TRIM(k.shintaku_kouza_bk) IN (" & strcon & ")"
        '<2006/11/28 UPDATE E Iida>
    End If
    
    gusrErr.MsgNaiyou = ERRMSG1_SELECT  'メッセージ内容
    '<2006/11/28 UPDATE S Iida> KK01→VW_DT001に変更
    strsql = ""
    strsql = strsql & " SELECT SINTAKU_BANK_PRTCD,SINTAKU_BANK_CD,PRTCD,NAME_RJ,YAKUJO_SHORI "
    strsql = strsql & " FROM VW_DT001D "
    strsql = strsql & strcon
    strsql = strsql & " Order by PRTCD "

    'strSql = strSql & " SELECT k.shintaku_kouza_bk,k.SHINTAKU_BK_CD,k.kouza_no"
    'strSql = strSql & " FROM kk01 k"
    'strSql = strSql & " Order by k.kouza_no"
    '<2006/11/28 UPDATE E Iida>
    
    Set recSel = Nothing
    cmADO.CommandText = StrConv(strsql, vbUpperCase)
    Set recSel = New ADODB.Recordset
    recSel.Open StrConv(strsql, vbUpperCase), cnAdo, adOpenKeyset, adLockOptimistic

    If recSel.EOF = True Then
        recSel.Close
        Set recSel = Nothing
        '<2006/12/27 ADD S iida>
        gusrErr.ErrNum = ERRMSG_NO_DATA_KOUZA
        strbikou = ""
        strbikou = gfunc_ErrorMsg(3, ERRMSG_NO_LOOK_KOUZA, "", "", False)
        '<2006/12/27 ADD E iida>
        '<2006/12/18 UPDATE>
        GoTo ErrHandler
        'Err.Raise ERR_NO_DATA_DB
    Else
        '口座データ格納
        '<2006/12/07 ADD S iida >
        If fncSetKouza(recSel, mcolkouzaData) = False Then GoTo ErrHandler
        recSel.Close
        Set recSel = Nothing
    End If
    '資産別時価独自処理
    If fncMakeTarget() = False Then GoTo ErrHandler
        
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncSetData = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 UPDATE iida>
    fncSetData = -1
    'fncSetData = Err.Number
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_ORACLE     'メッセージ区分
        .MsgSyousai = D_PRC_BY_ASSET
        '<2006/12/27 ADD S iida>
        If Err.Number = 0 Then
            If .ErrNum = 0 Then
                .ErrNum = Err.Number
            End If
        End If
        '<2006/12/27 ADD E iida>
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With
    
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：データの集計
'
'引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
'
'戻り値　　：エラー番号
'
'機能説明　：データの取得と集計を行う。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/30 SRA T.Tanaka    ファンドＮＯを列削除
'
'*************************************************************************
Public Function fncCalcData() As Long
                
    Const PROCEDURE_NAME As String = "fncCalcData"
    
    On Error GoTo ErrHandler
    
    Dim blnret      As Boolean
    Dim lngrow      As Long
    Dim lngcnt      As Long
    Dim strKouzaNO  As String
    Dim strbikou    As String
    Dim curjika     As Currency
    Dim curMBarai   As Currency
    Dim strShisanCD As String
    Dim lngucnt     As Long
    Dim strfandno   As String
    Dim strshisan   As String
    Dim varShisanKei() As Currency
    Dim strFandname As String
    Dim rngArea     As Range
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncCalcData = -1
          
    lngucnt = 0
    Erase ArrShisanKei
    ReDim Preserve ArrShisanKei(BNR_SHISAN)
    For lngcnt = 1 To UBound(ArrData2)
        With Sheets(SHEET_UPD2)
            gusrErr.ErrNum = 0
            If lngcnt = 1 Then
                strfandno = ArrData2(lngcnt).levsCDFandNo_S
                strshisan = ArrData2(lngcnt).levsCDShisanCD_S
            End If
            'ﾌｧﾝﾄﾞNOが変わったら
            If strfandno <> ArrData2(lngcnt).levsCDFandNo_S Then
                '資産計を出す
                With Sheets(SHEET_UPD2)
                        For lngrow = 1 To BNR_SHISAN
                            If ArrShisanKei(lngrow).curjika > 0 Then
                                lngucnt = lngucnt + 1
                                .Cells(lngucnt, levsCUJika) = ArrShisanKei(lngrow).curjika       '時価セット
                                .Cells(lngucnt, levsCUSisanBr) = "0"                             '資産分類
                                Select Case lngrow
                                    Case 1
                                        strshisan = "0002"
                                    Case 2
                                        strshisan = "0009"
                                    Case 3
                                        strshisan = "0017"
                                    Case 4
                                        strshisan = "0003"
                                    Case 5
                                        strshisan = "0001"
                                    Case 6
                                        strshisan = "0005"
                                    Case 7
                                        strshisan = "0004"
                                    Case 8
                                        strshisan = "0020"
                                    Case 9
                                        strshisan = "0006"
                                End Select
                                .Cells(lngucnt, levsCUSisanCd) = strshisan
                                .Cells(lngucnt, levsCUfandno) = strfandno
                                .Cells(lngucnt, levsCUBankCd) = Sheets(SHEET_MAIN).cmbBank.Value
                                .Cells(lngucnt, levsCUKouzaNo) = strKouzaNO
                                .Cells(lngucnt, levsCUFandName) = strFandname
                                .Cells(lngucnt, levsCUDate) = glngDate
                            End If
                        Next
                        strfandno = ArrData2(lngcnt).levsCDFandNo_S
                        Erase ArrShisanKei
                        ReDim Preserve ArrShisanKei(BNR_SHISAN)
                        lngcnt = lngcnt - 1
                End With
            Else
                'ﾌｧﾝﾄﾞNOが同じなら
                strKouzaNO = ArrData2(lngcnt).levsCDKouzaNo_S
                strFandname = ArrData2(lngcnt).levsCDFandName_S
                Select Case ArrData2(lngcnt).levsCDShisanCD_S
                    Case "0002"
                        ArrShisanKei(1).curjika = ArrShisanKei(1).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0009"
                        ArrShisanKei(2).curjika = ArrShisanKei(2).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0017"
                        ArrShisanKei(3).curjika = ArrShisanKei(3).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0003"
                        ArrShisanKei(4).curjika = ArrShisanKei(4).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0001"
                        ArrShisanKei(5).curjika = ArrShisanKei(5).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0005"
                        ArrShisanKei(6).curjika = ArrShisanKei(6).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0004"
                        ArrShisanKei(7).curjika = ArrShisanKei(7).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0020"
                        ArrShisanKei(8).curjika = ArrShisanKei(8).curjika + ArrData2(lngcnt).levsCDJikaGk_S + ArrData2(lngcnt).levsCDMibarai_S
                    Case "0006"
                        ArrShisanKei(9).curjika = ArrShisanKei(9).curjika + ArrData2(lngcnt).levsCDJikaGk_S - ArrData2(lngcnt).levsCDMibarai_S
                End Select
            End If
                
Continue:
            With gusrErr
                If .ErrNum <> 0 Then
                    .ModuleId = MODULE_NAME         'モジュールID
                    .Procedure = PROCEDURE_NAME     'プロシージャID
                    .MsgCode = ERR_MSGCD_USER       'メッセージ区分
                    .MsgSyousai = strbikou          'メッセージ詳細
                    .ErrDescript = Err.Description
                    fncWriteErrSheet
                End If
            End With
            
        End With
    Next
    
    '資産計を出す
    With Sheets(SHEET_UPD2)
        For lngrow = 1 To BNR_SHISAN
            If ArrShisanKei(lngrow).curjika > 0 Then
                lngucnt = lngucnt + 1
                .Cells(lngucnt, levsCUJika) = ArrShisanKei(lngrow).curjika       '時価セット
                .Cells(lngucnt, levsCUSisanBr) = "0"                             '資産分類
                Select Case lngrow
                    Case 1
                        strshisan = "0002"
                    Case 2
                        strshisan = "0009"
                    Case 3
                        strshisan = "0017"
                    Case 4
                        strshisan = "0003"
                    Case 5
                        strshisan = "0001"
                    Case 6
                        strshisan = "0005"
                    Case 7
                        strshisan = "0004"
                    Case 8
                        strshisan = "0020"
                    Case 9
                        strshisan = "0006"
                End Select
                .Cells(lngucnt, levsCUSisanCd) = strshisan
                .Cells(lngucnt, levsCUfandno) = strfandno
                .Cells(lngucnt, levsCUBankCd) = Sheets(SHEET_MAIN).cmbBank.Value
                .Cells(lngucnt, levsCUKouzaNo) = strKouzaNO
                .Cells(lngucnt, levsCUFandName) = strFandname
                .Cells(lngucnt, levsCUDate) = glngDate
            End If
        Next
    End With
    
    '時価列の表示形式を変更
    With Sheets(SHEET_UPD2)
        .Columns("G:G").NumberFormatLocal = "0000"
        .Columns("C:C").NumberFormatLocal = "0000000"
        .Columns("I:I").NumberFormatLocal = "#,##0"
    End With
    Sheets(SHEET_UPD2).Activate
    Range("A1:I65535").Sort Key1:=Columns("A"), Key2:=Columns("G")
    blnret = Range("A1:I65535").Columns.AutoFit
    Sheets(SHEET_UPD2).Visible = False

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncCalcData = 0
    Exit Function
    
ErrHandler:
    fncCalcData = -1
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_VB         'メッセージ区分
        .MsgNaiyou = ERRMSG_CALC_DATA   'メッセージ内容
        .MsgSyousai = strbikou          'メッセージ詳細
        .ErrNum = Err.Number
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With
    
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：ダウンロードファイル形式チェック
'
'引　　数　：ARG1   I   pRow    Long    項目名の行番号
'
'戻り値　　：エラー番号
'
'機能説明　：使用されている項目について、ヘッダーのみチェックする。
'
'更新履歴　：2006/01/30 SRA T.Tanaka    新規作成
'
'*************************************************************************
Private Function fncChkDataFormat(ByRef pRow As Long) As Long
    
    Const PROCEDURE_NAME As String = "fncChkDataFormat"
                                               

    On Error GoTo ErrHandler
    
    Dim lngCol  As Long
    Dim arrDef      As Variant
    Dim arrDownLoad As Variant
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDataFormat = -1
    
    arrDef = Array("ファンドＮＯ", _
                   "終端基準日", "初端基準日", _
                   "集計分類", "帳票科目コード", _
                   "簿価残高", "運用額", "回収額", "利息・配当金", _
                   "売買・償還損益", "先物等損益", "実現損益", _
                   "未収収益", "時価残高", "評価損益", "先物等評価損益", _
                   "時価総額")
    
    With Sheets(D_PRC_BY_ASSET)
        arrDownLoad = .Range(.Cells(1, levsCDfandNo), .Cells(pRow, levsCDJikaGk))
    End With
    
    For lngCol = LBound(arrDownLoad, 2) To UBound(arrDownLoad, 2)
        Select Case lngCol
        Case levsCDfandNo, levsCDDateTo, levsCDSyuBnr, levsCDCKmkCd, levsCDJikaGk
            'ファンドＮＯ、終端基準日、集計分類、帳票科目コード、時価総額
            If StrConv(arrDownLoad(pRow, lngCol), vbUpperCase + vbWide) <> arrDef(lngCol - 1) Then
                '<2006/12/18 UPDATE iida>
                GoTo ErrHandler
                'Err.Raise ERR_CHECK_FILE
            End If
        End Select
    Next lngCol
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDataFormat = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 UPDATE iida>
    fncChkDataFormat = -1
    'fncChkDataFormat = Err.Number
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_USER       'メッセージ区分
        .MsgNaiyou = gfunc_ErrorMsg(3, ERRMSG_FILE_FORMAT, "", "", False)                  'メッセージ内容
        .MsgSyousai = D_PRC_BY_ASSET    'メッセージ詳細
        .ErrNum = ERRMSG_FILE_FORMAT
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：時価のチェック
'
'引　　数　：ARG1   I   pRange      Variant     ワークシートデータの配列
'引　　数　：ARG1   I   sRange()    String      ワークシートデータの文字列
'引　　数　：ARG1   I   pRow        Long        処理対象の行番号
'
'戻り値　　：エラー番号
'
'機能説明　：時価が未集計のとき、エラーを返す。
'
'更新履歴　：2006/02/02 SRA T.Tanaka    新規作成
'
'*************************************************************************
Public Function fncBChkJika(ByRef pRange As Variant, ByRef sRange() As String, _
                            ByVal pRow As Long) As Long
    
    Const PROCEDURE_NAME As String = "fncBChkJika"
                                               
    On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    If pRange(pRow, levsCUJika - 1) = vbNullString Then
        '時価が未集計ならば、
        'Err.Raise ERR_NOT_CALC
    End If
                   
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
ErrHandler:
    fncBChkJika = Err.Number
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_USER       'メッセージ区分
        .ErrNum = Err.Number
        .ErrDescript = Err.Description
        .MsgNaiyou = ERRMSG_UPLOAD      'メッセージ内容
        .MsgSyousai = sRange(pRow)      'メッセージ詳細
        fncWriteErrSheet
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：fncMakeTarget
'
'引　　数　：なし
'
'戻り値　　：エラー番号
'
'機能説明　：集計分類対応表にある口座が集計対象
'
'更新履歴　：2006/12/10 SRA Iida    新規作成
'
'*************************************************************************
Private Function fncMakeTarget() As Boolean
    
    Const PROCEDURE_NAME As String = "fncMakeTarget"
                                               
    On Error GoTo ErrHandler
    
    Dim blnret          As Boolean
    Dim lngrow          As Long
    Dim lngcnt          As Long
    Dim strKouzaNO      As String
    Dim strSyuBnr       As String
    Dim rngKozaNo       As Range
    Dim strbikou        As String
    Dim lngTopRow       As Long
    Dim lngEndRow       As Long
    Dim ArrData1()      As Variant

    Dim strKamoku       As String
    Dim VarShisan()     As String
    Dim lngucnt         As Long
    Dim lngDcnt         As Long
    Dim curMiba         As Currency
    Dim Arrkouza        As Variant
    Dim strFandname     As String
    Dim straa           As String

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakeTarget = False
    
    'ダウンロードファイル格納
    lngTopRow = fncGetRowHeader(Sheets(D_PRC_BY_ASSET))
    lngEndRow = fncGetRowFooter(Sheets(D_PRC_BY_ASSET))
    With Sheets(D_PRC_BY_ASSET)
        Erase ArrData1
        ArrData1 = Range("A" & lngTopRow + 1 & ":" & "U" & lngEndRow - 1).Value
    End With
    
    lngDcnt = 0
    For lngrow = 1 To UBound(ArrData1)
       'ファンドNOで
        If fncGetCollectionItem3(mcolkouzaData, ArrData1(lngrow, 1), Arrkouza) = True Then
            strKouzaNO = Arrkouza(2)
            strbikou = ""
            strbikou = strbikou & D_PRC_BY_ASSET
            strbikou = strbikou & ":ファンドNO=" & ArrData1(lngrow, 1)
            strbikou = strbikou & ":口座番号=" & strKouzaNO
            
            If strKouzaNO = vbNullString Then
                '口座属性に存在しなければ
                gusrErr.ErrNum = ERRMSG_NO_DATA_KOUZA
                GoTo Continue
            End If
            If fncGetCollectionItem(mcolKouzaNo, strKouzaNO, straa) = True Then
                If straa <> vbNullString Then
                    '集計分類に存在しているのでファンド名称を取得
                    strFandname = ""
                    strFandname = Arrkouza(3)
                    
                    '<2006/12/26 DEL S iida>
'                    '信託銀行チェック
'                    If Trim(Arrkouza(1)) <> StrConv(Sheets(SHEET_MAIN).cmbBank.Value, vbNarrow) Then
'                        gusrErr.ErrNum = ERRMSG_MISS_DATA
'                        GoTo Continue
'                    End If
                    '<2006/12/26 DEL E iida>
                    
                    '集計分類を取得
                     If fncGetCollectionItem(mcolSyuBnr, strKouzaNO, strSyuBnr) = True Then
                         If ArrData1(lngrow, 4) = Left(strSyuBnr, 8) Then
                             '集計分類一致
                             '資産分類・資産コードを取得
                             strKamoku = ""
                             strKamoku = ArrData1(lngrow, 5)
                             If fncGetShisanCD(Left(strSyuBnr, 8), strKamoku, VarShisan) = True Then
                                 '新しく配列を作成
                                 For lngucnt = 1 To UBound(VarShisan)
                                     curMiba = 0
                                     lngDcnt = lngDcnt + 1
                                     ReDim Preserve ArrData2(lngDcnt)
                                     With ArrData2(lngDcnt)
                                         .levsCDKouzaNo_S = strKouzaNO
                                         .levsCDFandName_S = strFandname
                                         .levsCDFandNo_S = ArrData1(lngrow, 1)
                                         .levsCDSyuBnr_S = ArrData1(lngrow, 4)
                                         .levsCDCKmkCd_S = ArrData1(lngrow, 5)
                                         .levsCDShisanBR_S = "0"                   '資産分類
                                         .levsCDShisanCD_S = VarShisan(lngucnt)    '資産コード
                                         .levsCDBkZndk_S = ArrData1(lngrow, 6)
                                         .levsCDJikaGk_S = ArrData1(lngrow, 17)
                                         '未払加算
                                         For lngcnt = 18 To 21
                                            If IsNumeric(ArrData1(lngrow, lngcnt)) = False Then
                                                gusrErr.ErrNum = ERRMSG_ERR_NOT_NUMBER
                                                GoTo Continue
                                            End If
                                            .levsCDMibarai_S = curMiba + ArrData1(lngrow, lngcnt)
                                         Next
                                     End With
                                 Next
                             Else
                                '資産コードが取得できない
                                'gusrErr.ErrNum = ERRMSG_ERR_NO_SHISAN
                                GoTo Continue
                             End If
                         End If
                     End If
                End If
            Else
                
            End If
        End If
Continue:
        With gusrErr
            If .ErrNum <> 0 Then
                .ModuleId = MODULE_NAME         'モージュールID
                .Procedure = PROCEDURE_NAME     'プロシージャID
                .MsgCode = ERR_MSGCD_USER       'メッセージ区分
                .ErrNum = Err.Number
                .ErrDescript = Err.Description
                .MsgSyousai = strbikou           'メッセージ詳細"
                fncWriteErrSheet
            End If
        End With
    Next
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakeTarget = True
    Exit Function
    
ErrHandler:
    fncMakeTarget = False
    
    With gusrErr
        If .ErrNum <> 0 Then
            .ModuleId = MODULE_NAME         'モージュールID
            .Procedure = PROCEDURE_NAME     'プロシージャID
            .MsgCode = ERR_MSGCD_USER       'メッセージ区分
            .ErrNum = Err.Number
            .ErrDescript = Err.Description
            .MsgNaiyou = ERRMSG_UPLOAD      'メッセージ内容
            .MsgSyousai = ""                'メッセージ詳細"
            fncWriteErrSheet
        End If
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：コレクションのチェック
'
'引　　数　：ARG1   I   Target      Collection  チェックするコレクション
'
'戻り値　　：エラー番号
'
'機能説明　：有効値が格納されていない場合、エラーを返す。
'
'更新履歴　：2006/02/02 SRA T.Tanaka    新規作成
'
'*************************************************************************
Private Function fncBChkCollection(ByRef Target As Collection) As Long
    
    Const PROCEDURE_NAME As String = "fncBChkCollection"
                                               
    Dim lngcnt  As Long
    Dim blnChk  As Boolean
    
    On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncBChkCollection = -1
    
    For lngcnt = 1 To Target.Count
        Select Case Target(lngcnt)
        Case vbNullString
        Case USER_SHEET_END
        Case Else
            blnChk = True
        End Select
    Next lngcnt
    
    If blnChk = False Then
        '<2006/12/18 UPDATE iida>
        gusrErr.ErrNum = ERRMSG_ERR_NO_KOUZA
        GoTo ErrHandler
        'Err.Raise ERR_NO_DATA_COL
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncBChkCollection = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 UPDATE iida>
    'fncBChkCollection = Err.Number
    fncBChkCollection = -1
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_USER       'メッセージ区分
        .ErrDescript = Err.Description
        .MsgSyousai = D_PRC_BY_ASSET    'メッセージ詳細
        fncWriteErrSheet
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function
'<2006/12/10 DEL S iida>
''*************************************************************************
''関数名　　：処理口座のチェック
''
''引　　数　：なし
''
''戻り値　　：エラー番号
''
''機能説明　：集計分類対応表にある口座が集計対象
''
''更新履歴　：2006/02/14 SRA T.Tanaka    新規作成
''
''*************************************************************************
'Private Function fncBChkTarget() As Long
'
'    Const PROCEDURE_NAME As String = "fｎcBChkJika"
'
'    On Error GoTo ErrHandler
'
'    Dim blnRet      As Boolean
'    Dim lngrow      As Long
'    Dim lngcnt      As Long
'    Dim strKouzaNo   As String
'    Dim strSyuBnr   As String
'    Dim rngKozaNo   As Range
'    Dim strBikou    As String
'
'    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    '集計分類対応表に存在しない口座は Upload2シートから削除する。
'    lngrow = 1
'    With Sheets(SHEET_UPD2)
'        Do
'            strKouzaNo = Trim(.Cells(lngrow, levsCUKouzaNo))
'            blnRet = fncGetCollectionItem(mcolSyuBnr, strKouzaNo, strSyuBnr)
'            If blnRet Then
'                lngrow = lngrow + 1
'            Else
'                .Range(lngrow & ":" & lngrow).Delete
'            End If
'
'        Loop Until .Cells(lngrow, levsCUFundNo) = vbNullString
'    End With
'
'    '集計分類対応表に存在する口座が Upload2シートに存在しない場合、エラーを出力する。
'    With mcolKouzaNo
'        For lngcnt = 1 To .Count
'            strKouzaNo = .Item(lngcnt)
'            Select Case strKouzaNo
'            Case vbNullString
'                GoTo Continue
'            Case USER_SHEET_END
'                Exit For
'            End Select
'            Set rngKozaNo = Nothing
'            Set rngKozaNo = Sheets(SHEET_UPD2).Cells.Find(strKouzaNo)
'            If rngKozaNo Is Nothing Then
'                strBikou = ""
'                strBikou = strBikou & D_PRC_BY_ASSET
'                strBikou = strBikou & ":口座番号=" & strKouzaNo
'                With gusrErr
'                    .ModuleId = MODULE_NAME         'モージュールID
'                    .Procedure = PROCEDURE_NAME     'プロシージャID
'                    .MsgCode = ERR_MSGCD_USER       'メッセージ区分
'                    .ErrNum = ERR_NO_DATA_SHEET
'                    .MsgNaiyou = ERRMSG_NOT_CLAC_USER2      'メッセージ内容
'                    .MsgSyousai = strBikou     'メッセージ詳細"
'                    fncWriteErrSheet
'                End With
'            End If
'Continue:
'        Next lngcnt
'    End With
'
'    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    Exit Function
'ErrHandler:
'    fncBChkTarget = Err.Number
'
'    With gusrErr
'        .ModuleId = MODULE_NAME         'モージュールID
'        .Procedure = PROCEDURE_NAME     'プロシージャID
'        .MsgCode = ERR_MSGCD_USER       'メッセージ区分
'        .ErrNum = Err.Number
'        .ErrDescript = Err.Description
'        .MsgNaiyou = ERRMSG_UPLOAD      'メッセージ内容
'        .MsgSyousai = """      'メッセージ詳細"
'        fncWriteErrSheet
'    End With
'
'    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
'End Function
'<2006/12/10 DEL E iida>
'<2006/12/10 DEL S iida>

'*************************************************************************
'関数名　　：データの集計
'
'引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
'
'戻り値　　：エラー番号
'
'機能説明　：データの取得と集計を行う。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/30 SRA T.Tanaka    ファンドＮＯを列削除
'
'*************************************************************************
'Public Function fncCalcData() As Long
'
'    Const PROCEDURE_NAME As String = "fncCalcData"
'
'    On Error GoTo ErrHandler
'
'    Const LEN_SYU_BNR As Long = 8   '集計分類
'
'    Dim blnRet      As Boolean
'    Dim lngrow      As Long
'    Dim lngcnt      As Long
'    Dim strFundNo   As String
'    Dim rngFandNo   As Range
'    Dim strKouzaNo   As String
'    Dim strShisan   As String
'    Dim strKMKCD1   As Variant
'    Dim strKMKCD2   As Variant
'    Dim strKMKCD3   As Variant
'    Dim strAkmkCD   As Variant
'    Dim lngArrId    As Long
'    Dim strbikou    As String
'    Dim strSyuBnr   As String       '集計分類
'    Dim curJikaGk   As Currency
'    Dim curMBarai   As Currency
'    Dim lngColCalc  As Long
'
'    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    lngrow = 1
'    lngcnt = fncGetRowHeader(Sheets(D_PRC_BY_ASSET))
'
'    strKMKCD1 = Array(S1_KMK_CD0, S1_KMK_CD1, S1_KMK_CD2, S1_KMK_CD3, S1_KMK_CD4, S1_KMK_CD5, S1_KMK_CD6)
'    strKMKCD2 = Array(S2_KMK_CD0, S2_KMK_CD1, S2_KMK_CD2, S2_KMK_CD3, S2_KMK_CD4, S2_KMK_CD5, S2_KMK_CD6)
'    strKMKCD3 = Array(S3_KMK_CD0, S3_KMK_CD1, S3_KMK_CD2, S3_KMK_CD3, S3_KMK_CD4, S3_KMK_CD5, S3_KMK_CD6)
'    strAkmkCD = Array(strKMKCD1, strKMKCD2, strKMKCD3)
'
'    With Sheets(SHEET_UPD2)
'        Do
'            gusrErr.ErrNum = 0
'            curJikaGk = 0
'            Set rngFandNo = Nothing
'
'            If strKouzaNo <> Trim(.Cells(lngrow, levsCUKouzaNo)) Then
'                '口座が変わったら、
'                strFundNo = Trim(.Cells(lngrow, levsCUFundNo))
'                strKouzaNo = Trim(.Cells(lngrow, levsCUKouzaNo))
'                '口座単位に集計する未払い費用を初期化
'                curMBarai = 0
'            End If
'
'            strShisan = Trim(.Cells(lngrow, levsCUShisan))
'
'            strbikou = ""
'            strbikou = strbikou & D_PRC_BY_ASSET
'            strbikou = strbikou & ":ファンドNO=" & strFundNo
'            strbikou = strbikou & ":口座番号=" & strKouzaNo
'            strbikou = strbikou & ":資産コード=" & strShisan
'
'            strFundNo = fncReplaceFandNo(strFundNo)
'
'            Select Case strShisan
'            Case "0" To "6"
'            Case vbNullString
'                gusrErr.ErrNum = ERR_NO_SHISAN
'                GoTo Continue
'            Case Else
'                GoTo Continue
'            End Select
'
'            blnRet = fncGetCollectionItem(mcolSyuBnr, strKouzaNo, strSyuBnr)
'            If blnRet = False Then
'                gusrErr.ErrNum = ERR_NO_DATA_COL2
'                GoTo Continue
'            Else
'                strSyuBnr = Left$(strSyuBnr, LEN_SYU_BNR)
'                Select Case strSyuBnr
'                Case BNR_CD1_TOKUKIN
'                    lngArrId = BNR_ID1_TOKUKIN - 1
'                    'lngColCalc = levsCDBkZndk       '簿価残高
'                Case BNR_CD2_KYOUSAI
'                    lngArrId = BNR_ID2_KYOUSAI - 1
'                    'lngColCalc = levsCDBkZndk       '簿価残高
'                Case BNR_CD3_JAKA_BS
'                    lngArrId = BNR_ID3_JAKA_BS - 1
'                    'lngColCalc = levsCDJikaGk       '時価総額
'                Case Else
'                    gusrErr.ErrNum = ERR_NO_DATA_COL2
'                    GoTo Continue
'                End Select
'                lngColCalc = levsCDJikaGk       '時価総額
'            End If
'
'            With Sheets(D_PRC_BY_ASSET)
'
'                '既に処理対象のファンドＮＯの場合、２行目に移動しないように１行戻る。
'                Set rngFandNo = .Cells.Find(strFundNo, .Cells(lngcnt - 1, levsCDfandNo))
'                If rngFandNo Is Nothing Then
'                    GoTo Continue
'                Else
'                    lngcnt = rngFandNo.Row
'                End If
'                Do
'                    If .Cells(lngcnt, levsCDSyuBnr) = strSyuBnr Then
'                        If InStr(strAkmkCD(lngArrId)(strShisan), .Cells(lngcnt, levsCDCKmkCd)) > 0 Then
'
'                            If IsNumeric(.Cells(lngcnt, lngColCalc)) Then
'                                curJikaGk = curJikaGk + CCur(.Cells(lngcnt, lngColCalc))
'                            Else
'                                gusrErr.ErrNum = ERR_NOT_NUMBER
'                                GoTo Continue
'                            End If
'
'                            If IsNumeric(.Cells(lngcnt, levsCDMBSyoh)) Then
'                                curMBarai = curMBarai + CCur(.Cells(lngcnt, levsCDMBSyoh))
'                            Else
'                                gusrErr.ErrNum = ERR_NOT_NUMBER
'                                GoTo Continue
'                            End If
'                            If IsNumeric(.Cells(lngcnt, levsCDMBTokh)) Then
'                                curMBarai = curMBarai + CCur(.Cells(lngcnt, levsCDMBTokh))
'                            Else
'                                gusrErr.ErrNum = ERR_NOT_NUMBER
'                                GoTo Continue
'                            End If
'                            If IsNumeric(.Cells(lngcnt, levsCDMBTKmn)) Then
'                                curMBarai = curMBarai + CCur(.Cells(lngcnt, levsCDMBTKmn))
'                            Else
'                                gusrErr.ErrNum = ERR_NOT_NUMBER
'                                GoTo Continue
'                            End If
'                            If IsNumeric(.Cells(lngcnt, levsCDMBSHsy)) Then
'                                curMBarai = curMBarai + CCur(.Cells(lngcnt, levsCDMBSHsy))
'                            Else
'                                gusrErr.ErrNum = ERR_NOT_NUMBER
'                                GoTo Continue
'                            End If
'
'                        End If
'                    End If
'                    lngcnt = lngcnt + 1
'                Loop Until strFundNo <> .Cells(lngcnt, levsCCComDat)
'            End With
'
'            If strShisan = SHISAN_CD_OTHER Then
'                curJikaGk = curJikaGk - curMBarai
'            End If
'
'            .Cells(lngrow, levsCUJikaGk) = curJikaGk
'Continue:
'            With gusrErr
'                If .ErrNum = ERR_NOT_NUMBER _
'                Or .ErrNum = ERR_NO_DATA_COL2 _
'                Or .ErrNum = ERR_NO_SHISAN Then
'                    .ModuleId = MODULE_NAME         'モージュールID
'                    .Procedure = PROCEDURE_NAME     'プロシージャID
'                    .MsgCode = ERR_MSGCD_USER       'メッセージ区分
'                    .MsgSyousai = strbikou          'メッセージ詳細
'                    .ErrDescript = Err.Description
'                    fncWriteErrSheet
'                    'エラーだったら、行削除
'                    Sheets(SHEET_UPD2).Range(lngrow & ":" & lngrow).Delete
'                Else
'                    lngrow = lngrow + 1
'                End If
'            End With
'
'        Loop Until .Cells(lngrow, levsCUFundNo) = vbNullString
'
'        'ファンドＮＯを列削除
'        .Columns("A:A").Delete Shift:=xlToLeft
'
'        '時価列の表示形式を変更
'        .Columns("D:D").NumberFormatLocal = "#,##0"
'
'    End With
'
'    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    Exit Function
'ErrHandler:
'    fncCalcData = Err.Number
'
'    With gusrErr
'        .ModuleId = MODULE_NAME         'モージュールID
'        .Procedure = PROCEDURE_NAME     'プロシージャID
'        .MsgCode = ERR_MSGCD_VB         'メッセージ区分
'        .MsgNaiyou = ERRMSG_CALC_DATA   'メッセージ内容
'        .MsgSyousai = strbikou          'メッセージ詳細
'        .ErrNum = Err.Number
'        .ErrDescript = Err.Description
'        fncWriteErrSheet
'    End With
'
'    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
'End Function
'<2006/12/10 DEL E iida>

