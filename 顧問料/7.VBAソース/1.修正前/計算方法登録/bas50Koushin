Attribute VB_Name = "bas50Koushin"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・計算方法
'
'オブジェクト名：bas50Koushin
'
'機能概要　：更新処理
'
'更新履歴　：2006/07/04 SRA 東       新規作成
'更新履歴　：2007/03/14 SRA 安保     PH3対応
'
'*************************************************************************

Const MODULE_NAME = "bas50Koushin"

Const UPDATE_USER = "APL001"
Const UPDATE_PGM_ID = "計算方法登録"


'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
Public Type typRateTekiyohKikan
    KOHZA_NO                    As String
    SEIKYU_KIKAN_ID             As String   '検索時の請求期間ID
    SHISAN_BUNRUI               As String
    SHISAN_CODE                 As String
    RATE_TEKIYOH_KIKAN_ID       As String   '検索時の適用期間ID
    RATE_TEKIYOH_KIKAN_FROM     As String
    RATE_TEKIYOH_KIKAN_TO       As String
    RATE_TEKIYOH_KIKAN_NISSU    As String
    PX_SHINTAKU_KBN             As String
    KISO_SUCHI_KEISAN_HOHHOH    As String
    RATE_CODE                   As String
    KEISAN_HOHHOH               As String
    SHISAN_WARIAI               As String
    RATE_TEKIYOH_KIKAN_ID_NEW   As String   '登録時の適用期間ID
End Type
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------

'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
'Public Const Sisan1_MaxCols = 9     '一般資産の入力エリア数
Public Const Sisan1_MaxCols = 12     '一般資産の入力エリア数
'*** 2007/03/14 PH3対応 Modified By H.Anpo End
Public Const Sisan2_MaxCols = 7     '調整資産の入力エリア数
'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
Public Const Sisan3_MaxCols = 6     'T21調整資産の入力エリア数
'Public Const Sisan3_MaxCols = 5     'T21調整資産の入力エリア数
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------


'*************************************************************************
'関数名　　：入力チェック処理(更新時)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Sisan1()            O           一般資産           構造体
'           Sisan2()            O           月末顧問料調整資産  構造体
'           Sisan3()            O           T21調整資産        構造体
'
'戻り値　　：Boolean
'
'機能説明　：メインシートの更新時入力チェックを行い
'
'更新履歴　：2006/07/10 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/24 SRA Y.Azuma    変更     閉鎖口座のチェック追加(No.78)
'更新履歴　：2006/12/13 SRA Y.Azuma    変更     (仕変)入金日区分削除
'更新履歴　：2006/12/25 SRA Y.Azuma    変更     (仕変)初回最終区分追加
'更新履歴　：2007/01/26 SRA Y.Azuma    変更     (PH1)入金日区分の復活
'更新履歴　：2008/01/22 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'更新履歴　：2008/01/31 SRA Y.Azuma    変更     (PH4)総合障害No.6対応(口座閉鎖チェック解除)
'
'*************************************************************************
Public Function gfuncKeisan_UpdInputCheck(ByRef TargetSheets As Object _
                                        , ByRef Sisan1() As Variant _
                                        , ByRef Sisan2() As Variant _
                                        , ByRef Sisan3() As Variant) As Boolean
On Error GoTo ErrorSection


    Dim strKozaNo       As String
    Dim strKikan        As String
    Dim strDate         As String
    Dim strTime         As String
    Dim strCallOff_Date As String   '<------------ Modify azuma 2006/08/24
    
    gfuncKeisan_UpdInputCheck = False
    strKozaNo = ""
    

'１．契約情報のチェック

    '口座名称存在(口座名称の必須チェックで代用)
    If Trim(TargetSheets.Range("口座名称").Value) = "" Then
    'Error
        '"口座番号が未入力"
        
       Call gfunc_ErrorMsg(3, 1500, "口座名称", "検索ボタンを押下して下さい。")
        
        Exit Function
    End If


    '①口座番号の検索時同一チェック
    strKozaNo = gfunc_KozaNoFormat(Trim(TargetSheets.Range("口座番号")))
    If StrComp(ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時口座ＮＯ"), strKozaNo) <> 0 Then
        '"口座番号：検索時と口座番号が異なります。"
        Call gfunc_ErrorMsg(3, 1501, "口座番号", "")
        Exit Function
    End If
    
    'ゼロパディング後を再設定
    TargetSheets.Range("口座番号") = gfunc_KozaNoFormat(Trim(TargetSheets.Range("口座番号")))
    
    
    '②【顧問料請求期間】
    
    '②-0　必須チェック
    If Trim(TargetSheets.Range("顧問請求From")) = "" Then
        '"顧問料請求期間：請求期間FROMが未入力です。"
        Call gfunc_ErrorMsg(3, 1502, "顧問料請求期間From", "")
        Exit Function
    End If
    
    If Trim(TargetSheets.Range("顧問請求To")) = "" Then
        '"顧問料請求期間：請求期間TOが未入力です。"
        Call gfunc_ErrorMsg(3, 1503, "顧問料請求期間To", "")
        Exit Function
    End If
    

    '②-1　日付妥当チェック
    If gfunc_CheckDate(TargetSheets.Range("顧問請求From")) = False Then
        '"顧問料請求期間：入力に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1504, "顧問料請求期間From", "日付の妥当性に問題があります。")
        Exit Function
    End If
  
    If gfunc_CheckDate(TargetSheets.Range("顧問請求To")) = False Then
        '"顧問料請求期間：入力に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1505, "顧問料請求期間To", "日付の妥当性に問題があります。")
        Exit Function
    End If
  
    '②-2　日付大小チェック
    If gfunc_CheckKikan(TargetSheets.Range("顧問請求From"), _
                        TargetSheets.Range("顧問請求To")) = False Then
        '"期間の指定に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1506, "顧問請求期間From,To", "顧問請求期間Fromが顧問請求期間Toより先日付が指定されています。")
        Exit Function
    End If
  
    '②-3  既存重複チェック
    '▼▼▼J.TACHIBANA ADD 20060718
    'If subCheck2_3(strKozaNo, (TargetSheets.Range("顧問請求From")), _
    '                    (TargetSheets.Range("顧問請求To"))) Then
    If func_Check2_3(strKozaNo, (TargetSheets.Range("顧問請求From")), _
                        (TargetSheets.Range("顧問請求To"))) = False Then
    '▲▲▲J.TACHIBANA ADD 20060718
        '"期間の指定に誤りがあります。"
'------------<Modify Start T.Ichikawa 2007/06/07> -----------------------
'        Call gfunc_ErrorMsg(3, 1507, "顧問請求期間From,To", _
'                            "同一口座番号で期間の重複したデータ登録既に登録されています。")
        Call gfunc_ErrorMsg(3, 1507, "顧問請求期間From,To", _
                            "同一口座番号で期間の重複したデータが既に登録されています。")
'------------<Modify End   T.Ichikawa 2007/06/07> -----------------------
        Exit Function
    End If
        
'------------<Modify Start azuma 2006/12/13 総No.30> -----------------------
'③【信託期間】

      '③-1　日付妥当チェック
    If Trim(TargetSheets.Range("信託From")) <> "" Then
        If gfunc_CheckDate((TargetSheets.Range("信託From"))) = False Then
            '"入力に誤りがあります。"
            Call gfunc_ErrorMsg(3, 1510, "信託期間From", "日付の妥当性に問題があります。")
            Exit Function
        End If
    End If

    If Trim(TargetSheets.Range("信託To")) <> "" Then
        If gfunc_CheckDate((TargetSheets.Range("信託To"))) = False Then
            '"入力に誤りがあります。"
            Call gfunc_ErrorMsg(3, 1511, "信託期間To", "日付の妥当性に問題があります。")
            Exit Function
        End If
    End If

      '③-2　日付大小チェック
    If Trim(TargetSheets.Range("信託From")) <> "" And Trim(TargetSheets.Range("信託To")) <> "" Then
        If gfunc_CheckKikan((TargetSheets.Range("信託From")), _
                            (TargetSheets.Range("信託To"))) = False Then
            '"期間の指定に誤りがあります。"
            Call gfunc_ErrorMsg(3, 1512, "信託期間From,To", "信託Fromが信託Toより先日付で指定されてます。")
            Exit Function
        End If
    End If

'    '③-0　必須チェック
'    If Trim(TargetSheets.Range("信託From")) = "" Then
'        '"顧問料請求期間：信託期間1FROMが未入力です。"
'        Call gfunc_ErrorMsg(3, 1508, "信託期間From", "")
'        Exit Function
'    End If
'
'    If Trim(TargetSheets.Range("信託To")) = "" Then
'        '"顧問料請求期間：信託期間1TOが未入力です。"
'        Call gfunc_ErrorMsg(3, 1509, "信託期間To", "")
'        Exit Function
'    End If
'
'      '③-1　日付妥当チェック
'    If gfunc_CheckDate((TargetSheets.Range("信託From"))) = False Then
'        '"入力に誤りがあります。"
'        Call gfunc_ErrorMsg(3, 1510, "信託期間From", "日付の妥当性に問題があります。")
'        Exit Function
'    End If
'
'    If gfunc_CheckDate((TargetSheets.Range("信託To"))) = False Then
'        '"入力に誤りがあります。"
'        Call gfunc_ErrorMsg(3, 1511, "信託期間To", "日付の妥当性に問題があります。")
'        Exit Function
'    End If
'
'      '③-2　日付大小チェック
'    If gfunc_CheckKikan((TargetSheets.Range("信託From")), _
'                        (TargetSheets.Range("信託To"))) = False Then
'        '"期間の指定に誤りがあります。"
'        Call gfunc_ErrorMsg(3, 1512, "信託期間From,To", "信託Fromが信託Toより先日付で指定されてます。")
'        Exit Function
'    End If

'------------<Modify End   azuma 2006/12/13 総No.30> -----------------------
        
'④【契約期間】
    
    '④-0　必須チェック
    If Trim(TargetSheets.Range("契約From")) = "" Then
        '"顧問料請求期間：請求期間FROMが未入力です。"
        Call gfunc_ErrorMsg(3, 1513, "契約期間From", "")
        Exit Function
    End If
    
    If Trim(TargetSheets.Range("契約To")) = "" Then
        '"顧問料請求期間：請求期間TOが未入力です。"
        Call gfunc_ErrorMsg(3, 1514, "契約期間To", "")
        Exit Function
    End If
        
    '④-1　日付妥当チェック
    If gfunc_CheckDate((TargetSheets.Range("契約From"))) = False Then
        '"入力に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1515, "契約期間From", "日付の妥当に問題があります。")
        Exit Function
    End If
  
    If gfunc_CheckDate((TargetSheets.Range("契約To"))) = False Then
        '"入力に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1516, "契約期間To", "日付の妥当性に問題があります。")
        Exit Function
    End If
  
  
    '④-2　日付大小チェック
    If gfunc_CheckKikan((TargetSheets.Range("契約From")), _
                        (TargetSheets.Range("契約To"))) = False Then
        '"期間の指定に誤りがあります。"
        Call gfunc_ErrorMsg(3, 1517, "契約期間From,To", "契約期間Fromが契約期間Toより先日付が指定されています。")
        Exit Function
    End If
    

'------------<Modify Start azuma 2006/12/13 総No.30> -----------------------
''⑤【契約金額】の
'    '必須チェック
'    If Trim(TargetSheets.Range("契約金額")) = "" Then
'        '"契約金額：請求期間FROMが未入力です。"
'        Call gfunc_ErrorMsg(3, 1518, "契約金額", "")
'        Exit Function
'    End If
    
    
    '数値チェック
    If Trim(TargetSheets.Range("契約金額")) <> "" Then
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
'        If IsNumeric(TargetSheets.Range("契約金額")) = False Then
        If gkyk_IsNumeric(TargetSheets.Range("契約金額")) = False Then
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
            '"契約金額：数値で入力して下さい。"
            Call gfunc_ErrorMsg(3, 1519, "契約金額", "")
            Exit Function
        End If
    End If
'    If IsNumeric(TargetSheets.Range("契約金額")) = False Then
'        '"契約金額：数値で入力して下さい。"
'        Call gfunc_ErrorMsg(3, 1519, "契約金額", "")
'        Exit Function
'    End If
'------------<Modify End   azuma 2006/12/13 総No.30> -----------------------
        
    

'⑥【入金区分】(必須チェック)
    If Trim(TargetSheets.Range("入金日区分")) = "" Then
        '"入金日区分：入金日が未入力です。"
        Call gfunc_ErrorMsg(3, 1520, "入金日区分", "")
        Exit Function
    End If


'⑦【年間日数】(必須チェック)
    If Trim(TargetSheets.Range("年間日数")) = "" Then
        '"年間日数：コード区分が未入力です。"
        Call gfunc_ErrorMsg(3, 1521, "年間日数", "")
        Exit Function
    End If
    
    
'------------<Modify Start azuma 2008/01/31 (PH4)> ★★★☆-----------------------
'''------------<Modify Start azuma 2006/08/24 No.078> -----------------------
'''⑧　閉鎖口座のチェック
''    '　閉鎖口座年月日の取得(検索時に取得済み)
''    strCallOff_Date = ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("口座閉鎖年月日")
''
''    If Trim(strCallOff_Date) <> "0" And _
''       CStr(Trim(strCallOff_Date)) < CStr(TargetSheets.Range("顧問請求To")) Then
''        '"顧問料請求期間Toより前にこの口座が閉鎖されるまたは、されている為更新できません。"
''        Call gfunc_ErrorMsg(3, 1588, "", "口座閉鎖年月日：" & gfunc_ymdFormat(strCallOff_Date))
''        Exit Function
''    End If
'''------------<Modify End   azuma 2006/08/24 No.078> -----------------------
'------------<Modify End   azuma 2008/01/31 (PH4)> ★★★☆-----------------------
    
    
'------------<Modify Start azuma 2006/12/25 > -----------------------
'【初回最終区分】(必須チェック)
    If Trim(TargetSheets.Range("初回最終区分")) = "" Then
        '"初回最終区分：未入力です。"
        Call gfunc_ErrorMsg(3, 1520, "初回最終区分", "")
        Exit Function
    End If
'------------<Modify End   azuma 2006/12/25 > -----------------------
    
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'【平残断面区分】(必須チェック)
    If Trim(TargetSheets.Range("平残断面区分")) = "" Then
        '"平残断面区分：未入力です。"
        Call gfunc_ErrorMsg(3, 1520, "平残断面区分", "")
        Exit Function
    End If

'【前払後払区分】(必須チェック)
    If Trim(TargetSheets.Range("前払後払区分")) = "" Then
        '"前払後払区分：未入力です。"
        Call gfunc_ErrorMsg(3, 1520, "前払後払区分", "")
        Exit Function
    End If

'【ゼロ円請求書区分】(必須チェック)
    If Trim(TargetSheets.Range("ゼロ円請求書区分")) = "" Then
        '"ゼロ円請求書区分：未入力です。"
        Call gfunc_ErrorMsg(3, 1520, "ゼロ円請求書区分", "")
        Exit Function
    End If
'*** 2007/03/14 PH3対応 Added By H.Anpo End
    
    
'２．一般資産情報チェック
    If func_CheckShisan1(TargetSheets, Sisan1) = False Then
        Exit Function
    End If
    


'３．月末顧問料調整資産チェック
    If func_CheckShisan2(TargetSheets, Sisan2) = False Then
        Exit Function
    End If

'４．Ｔ２１調整資産チェック
    If func_CheckShisan3(TargetSheets, Sisan3) = False Then
        Exit Function
    End If


'*** 2007/03/14 PH3対応 Added By H.Anpo Start
    '項目関連チェックシートを使用して関連チェックを行う
    If func_CheckKanrenSheet(TargetSheets, Sisan1, Sisan2, Sisan3) = False Then
        Exit Function
    End If

    '断面系の場合、請求管理テーブルとの関連チェックを行う
    If Mid(Trim(TargetSheets.Range("平残断面区分")), 1, 1) = "2" Then
        '請求管理テーブルとの関連チェックを行う
        If func_CheckSeikyuKanri() = False Then
            Call gfunc_ErrorMsg(3, 1717, "請求情報", "断面系では「通期」以外は指定できません。")
            Exit Function
        End If
    End If
'*** 2007/03/14 PH3対応 Added By H.Anpo End

    gfuncKeisan_UpdInputCheck = True

    Exit Function
    
ErrorSection:

    gfuncKeisan_UpdInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncKeisan_UpdInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function




'*************************************************************************
'関数名　　：更新処理(メイン)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Sisan1()            O           一般資産
'           Sisan2()            O           月末顧問料調整資産
'           Sisan3()            O           T21調整資産
'           lngId               O           請求期間ID(採番したもの)
'
'戻り値　　：Boolean
'
'機能説明　：更新
'
'更新履歴　：2006/07/10 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfuncKeisan_DoUpdate(ByRef TargetSheets As Object _
                                   , ByRef Sisan1() As Variant _
                                   , ByRef Sisan2() As Variant _
                                   , ByRef Sisan3() As Variant _
                                   , ByRef lngId As Long) As Boolean


On Error GoTo ErrorSection

    Dim lngKikanId          As Long         '採番　　請求期間ID
    Dim lngKikanIdFirst     As Long         '検索時　請求期間ID
    Dim strKohzaNo          As String       '口座番号
    Dim strTime             As String
    Dim strError            As String
    Dim lngWork             As Long
    Dim lngStatus           As Long         '更新済みチェックのステータス
    Dim lngMsgId            As Long         'エラーメッセージID
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
    Dim typTekiyohKikan()   As typRateTekiyohKikan
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    gfuncKeisan_DoUpdate = False
    
    '検索時の請求期間ID　取得
    lngKikanIdFirst = func_GetKikanIdFirst
    
    '口座番号　取得
    strKohzaNo = gfunc_KozaNoFormat(TargetSheets.Range("口座番号").Value2)
    
    
    'トランザクション開始
    cnAdo.BeginTrans
    
    '更新済みチェックと排他処理
    If func_UpdateCheck(TargetSheets, lngStatus, lngKikanIdFirst) = False Then
        
        If lngStatus = 1 Or lngStatus = 2 Then
            '0:正常,1:ロック,2:削除済,-1:その他
            Select Case lngStatus
                Case 1
                '他セッションからのロック
                    lngMsgId = 1522
                Case 2
                '削除済み
                    lngMsgId = 1523
            End Select
            
            'エラーメッセージ出力
            Call gfunc_ErrorMsg(3, lngMsgId, "", "")
        End If
        
        GoTo RollbackSection
        Exit Function
    End If
    
    
    '①対象メインテーブルへの更新
    '　①-1 請求期間ＩＤの採番
    If func_GetSeikyuuId(lngKikanId) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '　①-2 顧問料請求期間へのInsert
    If func_InsSEIKYU_KIKAN(TargetSheets _
                           , lngKikanId _
                           , lngKikanIdFirst _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'    '　①-3 顧問料請求期間への論理削除
'    If func_DelCommon("KYK_SEIKYU_KIKAN", strKohzaNo, lngKikanIdFirst) = False Then
'        GoTo RollbackSection
'        Exit Function
'    End If
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    '　①-4 料率適用期間へのInsert
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
    ReDim typTekiyohKikan(0)
    '　①-4-1 料率適用期間の論理削除対象の取得
    If func_GetRateTekiyohKikan(lngKikanIdFirst, typTekiyohKikan) = False Then
        GoTo RollbackSection
        Exit Function
    End If
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    
    '(一般資産)
    If func_InsRATE_TEKIYOH_KIKAN(strKohzaNo _
                           , lngKikanId _
                           , 1 _
                           , Sisan1() _
                           , typTekiyohKikan() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '(月末顧問料調整資産)
    If func_InsRATE_TEKIYOH_KIKAN(strKohzaNo _
                           , lngKikanId _
                           , 2 _
                           , Sisan2() _
                           , typTekiyohKikan() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '(T21調整資産)
    If func_InsRATE_TEKIYOH_KIKAN(strKohzaNo _
                           , lngKikanId _
                           , 3 _
                           , Sisan3() _
                           , typTekiyohKikan() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'    '　①-5 料率適用期間への論理削除
'    If func_DelCommon("KYK_RATE_TEKIYOH_KIKAN", strKohzaNo, lngKikanIdFirst) = False Then
'        GoTo RollbackSection
'        Exit Function
'    End If
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    '　①-6 組入資産へのInsert
    '(一般資産)
    If func_InsKUMIIRE_SHISAN(strKohzaNo _
                           , lngKikanId _
                           , Sisan1() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '(月末顧問料調整資産)
    If func_InsKUMIIRE_SHISAN(strKohzaNo _
                           , lngKikanId _
                           , Sisan2() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    '(T21調整資産)
    If func_InsKUMIIRE_SHISAN(strKohzaNo _
                           , lngKikanId _
                           , Sisan3() _
                           , strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'    '　①-7 組入資産への論理削除
'    If func_DelCommon("KYK_KUMIIRE_SHISAN", strKohzaNo, lngKikanIdFirst) = False Then
'        GoTo RollbackSection
'        Exit Function
'    End If
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    
    '②その他テーブルへの更新
    
'------------<Modify Start azuma 2007/03/02 > -----------------------
'処理順序を変更
    '　②-2 8テーブルインサート
    If func_InsSelTables(lngKikanId, lngKikanIdFirst, typTekiyohKikan(), strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
'------------<Modify End   azuma 2007/03/02 > -----------------------
    
    '　②-1 12テーブル論理削除
    If func_Del12Tables(lngKikanIdFirst, strError) = False Then
        GoTo RollbackSection
        Exit Function
    End If
    
    

    'コミット
    cnAdo.CommitTrans

    '登録に使用した請求期間IDを戻す
    lngId = lngKikanId
    
    gfuncKeisan_DoUpdate = True
    
    Exit Function
    
RollbackSection:
    'ロールバック
    cnAdo.RollbackTrans
    
    gfuncKeisan_DoUpdate = False
    Exit Function
    
ErrorSection:

    gfuncKeisan_DoUpdate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncKeisan_DoUpdate", Err.Number, Err.Description)
    On Error GoTo 0
    On Error Resume Next
    'ロールバック
    cnAdo.RollbackTrans
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------



End Function



'*************************************************************************
'関数名　　：顧問請求期間の既存登録重複チェック
'
'引　　数　：
'           strFrom       I     顧問請求期間From(YYYMMDD)
'           strDateTo     I     顧問請求期間To(YYYYMMDD)
'
'戻り値　　：Boolean
'
'機能説明　：更新時チェック②-3
'
'更新履歴　：2006/07/07 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/25 SRA Y.Azuma    変更     請求期間重複チェックの条件変更(No.80)
'更新履歴　：2008/01/22 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'
'*************************************************************************
Private Function func_Check2_3(ByVal strKozaNo As String, ByVal strFrom As String, ByVal strDateTo As String) As Boolean

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim lngKikanIdFirst         As Long         '検索時　請求期間ID

    func_Check2_3 = False
    
    strErrCode = ""
    Erase vData

    '検索時請求期間IDの取得
    lngKikanIdFirst = func_GetKikanIdFirst()


    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     count(*)"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SEIKYU_KIKAN"
    strSql = strSql & " WHERE"
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
'    strSql = strSql & "     KOHZA_NO = '" & strKozaNo & "'  AND"
    strSql = strSql & "     KOHZA_NO = '" & func_ChkQuoteshon(strKozaNo, "'") & "'  AND"
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
    If lngKikanIdFirst <> -1 Then
        strSql = strSql & "     SEIKYU_KIKAN_ID <> " & lngKikanIdFirst & " AND"
    End If
    strSql = strSql & "     SAKUJO_FLG = '0'      AND"
'------------<Modify Start azuma 2006/08/25 No.080> -----------------------
    strSql = strSql & "     (    ('" & strFrom & "' <= TO_CHAR(SEIKYU_KIKAN_TO)"
    strSql = strSql & "      AND  '" & strDateTo & "' >= TO_CHAR(SEIKYU_KIKAN_TO)  )      "
    strSql = strSql & "     OR   ('" & strFrom & "' <= TO_CHAR(SEIKYU_KIKAN_FROM) "
    strSql = strSql & "      AND  '" & strDateTo & "' >= TO_CHAR(SEIKYU_KIKAN_FROM))  "
    strSql = strSql & "     )"
''    strSql = strSql & "     (   ('" & strFrom & "' <= TO_CHAR(SEIKYU_KIKAN_TO)  )           "
''    strSql = strSql & "      OR ('" & strDateTo & "' >= TO_CHAR(SEIKYU_KIKAN_FROM)) "
''    strSql = strSql & "     )"
'------------<Modify End   azuma 2006/08/25 No.080> -----------------------
    strSql = strSql & " "

    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            'Error
            Exit Function
        End If
    Else
        Exit Function
    End If

    '存在の確認
    If lngRow > 0 Then
        If CStr(vData(0, 0)) <> "0" Then
            'データがある場合期間が重複してるデータが存在している。
            Exit Function
        End If
    End If
    
    
    Erase vData
    
    func_Check2_3 = True
    
    Exit Function

ErrorSection:

    func_Check2_3 = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Check2_3", Err.Number, Err.Description)
    On Error GoTo 0
    
    Erase vData
    
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function



'*************************************************************************
'関数名　　：資産情報チェック(一般資産)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Sisan()             O           資産の構造体配列
'
'戻り値　　：Boolean
'
'機能説明　：一般資産情報の更新時入力チェック
'
'更新履歴　：2006/07/07 SRA Y.Azuma    新規作成
'更新履歴　：2006/10/10 SRA Y.Azuma    変更     期間毎のN6資産割合合計対応(連結No.6)
'更新履歴　：2006/10/13 SRA Y.Azuma    変更     (連結)合成料率未登録対応
'更新履歴　：2006/10/13 SRA Y.Azuma    変更     (連結)JVA計算後の資産割合設定済み対応
'更新履歴　：2007/01/12 SRA Y.Azuma    変更     UAT要望対応
'更新履歴　：2007/03/14 SRA H.Anpo     変更     PH3対応
'更新履歴　：2007/05/23 SRA Y.Azuma    変更     (PH2)料率０対応
'更新履歴　：2007/06/11 SRA T.Ichikawa 変更     PH3.5対応
'
'*************************************************************************
Private Function func_CheckShisan1(ByRef TargetSheets As Object _
                                 , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngCnt          As Long
'------------<Modify Start azuma 2006/10/10 > -----------------------
    Dim varSisan()      As Variant  'Double       '資産割合の合計
    Dim strSisanType()  As String       '資産タイプ
    Dim lngN6KikanCnt   As Long         'N6期間数
'    Dim dblSisan        As Double       '資産割合の合計
'------------<Modify End   azuma 2006/10/10 > -----------------------
    Dim blnN6flg        As Boolean      'N6,N7存在フラグ
    
    Dim lngPre          As Long         '料率チェックで利用 <-- Modify azuma 2006/08/01 No.032
    Dim lngCur          As Long         '料率チェックで利用 <-- Modify azuma 2006/08/01 No.032
    Dim lngComp         As Long         '料率チェックで利用 <-- Modify azuma 2006/08/01 No.032
    Dim lngCmpCnt       As Long         '料率チェックで利用 <-- Modify azuma 2006/08/01 No.032
    Dim strKK33Dankai() As String       '<------------ Modify azuma 2006/08/01 No.032
    Dim blnRet          As Boolean      '
    

    
    Const Meisai = "一般資産　"

    func_CheckShisan1 = False
    
'------------<Modify Start azuma 2006/10/10 > -----------------------
    Erase varSisan
    lngN6KikanCnt = -1
'    dblSisan = 0
'------------<Modify End   azuma 2006/10/10 > -----------------------
    
    blnN6flg = False
    
    ReDim Sisan(0)
    
    With TargetSheets
    
    '一般資産の構造体配列への取込とソート
    If func_Sisan1_To_Dim(TargetSheets, Sisan) = False Then
        Exit Function
    End If
    
'------------<Modify Start azuma 2006/08/01 No.032> -----------------------
    'チェック用に料率を取得する。
    blnRet = func_GetKK33Dankai(strKK33Dankai())
    If blnRet = False Then
        Call gfunc_ErrorMsg(4, 1585, "料率一覧取得 ", "(ＫＫ３３)")
        Erase strKK33Dankai
        Exit Function
    End If
'------------<Modify End   azuma 2006/08/01 No.032> -----------------------
    
    
    For lngCnt = 1 To UBound(Sisan)
        
'''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'        '請求書種類チェック
'        If Trim(Sisan(lngCnt, 12)) = -1 Then
'            '"請求書の種類を特定できません。"
'            Call gfunc_ErrorMsg(3, 1700, "", Meisai & Sisan(lngCnt, 0) & "行目")
'            Exit Function
'        End If
'
'''*** 2007/03/14 PH3対応 Added By H.Anpo End
        
        
        '①【資産保有期間】
        '　①-0 From/Toの必須チェック
        If Trim(Sisan(lngCnt, 1)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1524, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If Trim(Sisan(lngCnt, 2)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1525, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
            
        '　①-1 日付の妥当チェック
        If gfunc_CheckDate(Sisan(lngCnt, 1)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1526, "顧問料保有期間From ", "日付の妥当性に問題があります。" & vbCrLf & _
                                Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If gfunc_CheckDate(Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1527, "顧問料保有期間To ", "日付の妥当性に問題があります。" & vbCrLf & _
                                Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-2 大小チェック
        If gfunc_CheckKikan(Sisan(lngCnt, 1), Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1528, "顧問料保有期間From/To ", _
                                "顧問料保有期間Fromが顧問料保有期間Toより先日付が指定されています。" _
                               & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-3 請求期間内チェック
        If CStr(.Range("顧問請求From")) > CStr(Sisan(lngCnt, 1)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1529, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If CStr(.Range("顧問請求To")) < CStr(Sisan(lngCnt, 2)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1530, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        
        '　①-4 抜け、重複チェック
            '★★★ 別途 ループ後に実施
        
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        '⑤【顧問料計算方法】
        '　⑤-1 必須チェック
        If Trim(Sisan(lngCnt, 7)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1536, "顧問料計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        
        
        '②【資産】
        '　②-0 必須チェック
        If Trim(Sisan(lngCnt, 3)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1531, "資産コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        '　②-1 顧問料計算方法が"通常"のチェック
        '　②-2 顧問料計算方法が"通常"でない場合
        If Trim(Sisan(lngCnt, 7)) = "1" Then
        '「１:通常」の場合
            If Trim(Sisan(lngCnt, 3)) <> "00000" Then
                '入力不正
                Call gfunc_ErrorMsg(3, 1532, "基礎数値計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
        Else
        '「１:通常」の以外場合
            If Trim(Sisan(lngCnt, 3)) = "00000" Or Trim(Mid(Sisan(lngCnt, 3), 1, 1)) <> "0" Then
                '入力不正
                Call gfunc_ErrorMsg(3, 1565, "基礎数値計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
        
        End If
        
        '③【料率コード】
        '　③-1 必須チェック
        If Trim(Sisan(lngCnt, 4)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1533, "料率コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
'------------<Modify Start azuma 2007/01/12 > -----------------------
        Else
            Dim blnDataFlg  As Boolean
            Call func_CodeListSearch(CStr(Sisan(lngCnt, 4)), ThisWorkbook.Name, DATA_SHEETNAME, RATE_CODE_LIST, blnDataFlg)
            If blnDataFlg = False Then
                '存在チェックエラー
                Call gfunc_ErrorMsg(3, 1590, "料率コード ", "存在しないコードが入力又は選択されています。" & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
'------------<Modify End   azuma 2007/01/12 > -----------------------
        End If
        
        
        
        '④【基礎数値種類、基礎数値計算方法】
        '　④-1 必須チェック
        If Trim(Sisan(lngCnt, 5)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1534, "基礎数値種類 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If Trim(Sisan(lngCnt, 6)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1535, "基礎数値計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
       
        
'*** 2007/03/14 PH3対応 Deleted By H.Anpo Start
''        '⑤【顧問料計算方法】
''        '　⑤-1 必須チェック
''        If Trim(Sisan(lngCnt, 7)) = "" Then
''            '"未入力。"
''            Call gfunc_ErrorMsg(3, 1536, "顧問料計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
''            Exit Function
''        End If
'*** 2007/03/14 PH3対応 Deleted By H.Anpo End
        
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        '【期初期末区分】
        If Trim(Sisan(lngCnt, 9)) = "" Then
            '"未入力。"
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa Start ***
'            Call gfunc_ErrorMsg(3, 1536, "期初期末区分 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Call gfunc_ErrorMsg(3, 1536, "期初期末時価 ", Meisai & Sisan(lngCnt, 0) & "行目")
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa End   ***
            Exit Function
        End If
        
        '【顧客指定区分】
        If Trim(Sisan(lngCnt, 10)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1536, "顧客指定区分 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        
        
        '　⑤-2 N6の場合の資産割合必須チェック
        If Trim(Sisan(lngCnt, 7)) = "2" And Trim(Sisan(lngCnt, 8)) = "" Then
            '"未入力。"
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa Start
''*** 2007/03/14 PH3対応 Modified By H.Anpo Start
''            Call gfunc_ErrorMsg(3, 1537, "Ｎ６型資産割合 ", "顧問料計算方法がＮ６の場合は資産割合を入力して下さい。" _
''                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'            Call gfunc_ErrorMsg(3, 1537, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１の場合は資産割合を入力して下さい。" _
'                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
''*** 2007/03/14 PH3対応 Modified By H.Anpo End
            Call gfunc_ErrorMsg(3, 1537, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１・Ｎ１２の場合は資産割合を入力して下さい。" _
                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa End
            Exit Function
'------------<Modify Start azuma 2007/01/12 > -----------------------
        ElseIf Trim(Sisan(lngCnt, 7)) = "1" And Trim(Sisan(lngCnt, 8)) <> "" Then
        '0:通常
            '過剰入力 ※資産全体で資産割合に入力があるとエラーとする。
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa Start
''*** 2007/03/14 PH3対応 Modified By H.Anpo Start
''            Call gfunc_ErrorMsg(3, 1578, "Ｎ６型資産割合 ", "顧問料計算方法がＮ６以外で資産割合に入力があります。" _
''                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'            Call gfunc_ErrorMsg(3, 1578, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１以外で資産割合に入力があります。" _
'                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
''*** 2007/03/14 PH3対応 Modified By H.Anpo End
            Call gfunc_ErrorMsg(3, 1578, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１・Ｎ１２以外で資産割合に入力があります。" _
                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa End

            Exit Function
        ElseIf Trim(Sisan(lngCnt, 7)) = "3" Then
        '3:N7型
        
        Dim lngShisanStart As Long      '一般資産の明細開始行
            '一般資産の明細開始行を求める
            lngShisanStart = fncKsCmnSearchDataTopRow(TargetSheets, 1)
        
            If Trim(TargetSheets.Cells(lngShisanStart + Sisan(lngCnt, 0) - 1, 27)) <> "" Then
            '過剰入力
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa Start
''*** 2007/03/14 PH3対応 Modified By H.Anpo Start
''                Call gfunc_ErrorMsg(3, 1578, "Ｎ６型資産割合 ", "顧問料計算方法がＮ６以外で資産割合に入力があります。" _
''                                    & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'                Call gfunc_ErrorMsg(3, 1578, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１以外で資産割合に入力があります。" _
'                                    & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
''*** 2007/03/14 PH3対応 Modified By H.Anpo End
                Call gfunc_ErrorMsg(3, 1578, "資産割合 ", "顧問料計算方法がＮ６・Ｎ１１・Ｎ１２以外で資産割合に入力があります。" _
                                    & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa End
                Exit Function
            End If
        End If
''------------<Modify Start azuma 2006/10/13 > -----------------------
'        ElseIf Trim(Sisan(lngCnt, 7)) = "1" And Trim(Sisan(lngCnt, 8)) <> "" Then
'            '過剰入力 ※資産全体で資産割合に入力があるとエラーとする。
'            Call gfunc_ErrorMsg(3, 1578, "Ｎ６型資産割合 ", "顧問料計算方法がＮ６以外で資産割合に入力があります。" _
'                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'            Exit Function
'        End If
''        ElseIf Trim(Sisan(lngCnt, 7)) <> "2" And Trim(Sisan(lngCnt, 8)) <> "" Then
''            '過剰入力
''            Call gfunc_ErrorMsg(3, 1578, "Ｎ６型資産割合 ", "顧問料計算方法がＮ６以外で資産割合に入力があります。" _
''                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
''            Exit Function
''        End If
''------------<Modify End   azuma 2006/10/13 > -----------------------
'------------<Modify End   azuma 2007/01/12 > -----------------------
        
        'N6存在チェック
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa Start
''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''------------<Modify Start azuma 2006/10/13 > -----------------------
''        If Trim(Sisan(lngCnt, 7)) <> "" And (Trim(Sisan(lngCnt, 7)) = "2" Or Trim(Sisan(lngCnt, 7)) = "3") Then
'''        If Trim(Sisan(lngCnt, 7)) <> "" And Trim(Sisan(lngCnt, 7)) = "2" Then
'''------------<Modify End   azuma 2006/10/13 > -----------------------
'        'N11の条件を追加
'        If Trim(Sisan(lngCnt, 7)) <> "" _
'        And (Trim(Sisan(lngCnt, 7)) = "2" Or Trim(Sisan(lngCnt, 7)) = "3" Or Trim(Sisan(lngCnt, 7)) = "4") Then
''*** 2007/03/14 PH3対応 Added By H.Anpo End
        'N12の条件を追加
        If Trim(Sisan(lngCnt, 7)) <> "" And (Trim(Sisan(lngCnt, 7)) = "2" Or _
            Trim(Sisan(lngCnt, 7)) = "3" Or Trim(Sisan(lngCnt, 7)) = "4" Or Trim(Sisan(lngCnt, 7)) = "5") Then
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa End
            
            blnN6flg = True
            ' 資産割合の加算
'------------<Modify Start azuma 2006/10/10 > -----------------------
            
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'            If CStr(Sisan(lngCnt - 1, 1)) <> CStr(Sisan(lngCnt, 1)) Or _
'               CStr(Sisan(lngCnt - 1, 2)) <> CStr(Sisan(lngCnt, 2)) Then
            If CStr(Sisan(lngCnt - 1, 1)) <> CStr(Sisan(lngCnt, 1)) Or _
               CStr(Sisan(lngCnt - 1, 2)) <> CStr(Sisan(lngCnt, 2)) Or _
               (lngCnt > 1 And Trim(Sisan(lngCnt - 1, 7)) <> Trim(Sisan(lngCnt, 7))) _
               Then
'*** 2007/03/14 PH3対応 Added By H.Anpo End
            '期間変更された
               lngN6KikanCnt = lngN6KikanCnt + 1
               ReDim Preserve varSisan(lngN6KikanCnt)
               ReDim Preserve strSisanType(lngN6KikanCnt)
            End If
            
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
'            If IsNumeric(Sisan(lngCnt, 8)) = True Then
            If gkyk_IsNumeric(Sisan(lngCnt, 8)) = True Then
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
                varSisan(lngN6KikanCnt) = varSisan(lngN6KikanCnt) + CDec(Sisan(lngCnt, 8)) 'CDbl(Sisan(lngCnt, 8))
            End If
            strSisanType(lngN6KikanCnt) = CStr((Sisan(lngCnt, 7)))
'            If IsNumeric(Sisan(lngCnt, 8)) = True Then
'                dblSisan = dblSisan + CDbl(Sisan(lngCnt, 8))
'            End If
'------------<Modify End   azuma 2006/10/10 > -----------------------
        End If
        
'------------<Modify Start azuma 2006/08/01 No.032> -----------------------
        'N6,N7の料率額、料率設定チェック
        If Trim(Sisan(lngCnt, 7)) <> "" And _
          (Trim(Sisan(lngCnt, 7)) = "2" Or Trim(Sisan(lngCnt, 7)) = "3") Then
            
            '料率配列のインデックスサーチ
            lngCur = func_KK33DankaiCnt(CStr(Sisan(lngCnt, 4)), strKK33Dankai)
            
            '料率額が設定されている場合エラー
            If CDbl(strKK33Dankai(lngCur, 21)) > 0 Then
                Call gfunc_ErrorMsg(3, 1583, "料率コード", Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
            
'------------<Modify Start azuma 2007/05/23 > -----------------------
'            '料率額が設定されてない場合エラー
'            If CDbl(strKK33Dankai(lngCur, 22)) <= 0 Then
'                Call gfunc_ErrorMsg(3, 1584, "料率コード", Meisai & Sisan(lngCnt, 0) & "行目")
'                Exit Function
'            End If
'------------<Modify End   azuma 2007/05/23 > -----------------------
        End If

'------------<Modify End   azuma 2006/08/01 No.032> -----------------------
        
''*** 2007/03/14 PH3対応 Added By H.Anpo Start
        '請求書種類チェック
        If Trim(Sisan(lngCnt, 12)) = -1 Then
            '"請求書の種類を特定できません。"
            Call gfunc_ErrorMsg(3, 1700, "", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
''*** 2007/03/14 PH3対応 Added By H.Anpo End
    
    Next lngCnt
    
    '⑥【N6方資産割合】
    '　⑥-1 合計チェック
'------------<Modify Start azuma 2006/10/10 > -----------------------
    If blnN6flg = True Then
        For lngN6KikanCnt = 0 To UBound(varSisan)
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'            If (strSisanType(lngN6KikanCnt) = "2" And varSisan(lngN6KikanCnt) <> 100) Or _
'               (strSisanType(lngN6KikanCnt) = "3" And (varSisan(lngN6KikanCnt) <> 100 And varSisan(lngN6KikanCnt) <> 0)) Then
            If (strSisanType(lngN6KikanCnt) = "2" And varSisan(lngN6KikanCnt) <> 100) Or _
               (strSisanType(lngN6KikanCnt) = "3" And (varSisan(lngN6KikanCnt) <> 100 And varSisan(lngN6KikanCnt) <> 0)) Or _
               (strSisanType(lngN6KikanCnt) = "4" And (varSisan(lngN6KikanCnt) <> 100)) Then
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                '"各資産の和が100になりません。"
                Call gfunc_ErrorMsg(3, 1538, "", "期間：" & lngN6KikanCnt + 1 & vbCrLf _
                                                 & "合計値：" & CDec(varSisan(lngN6KikanCnt)))
                Exit Function
            End If
        Next lngN6KikanCnt
    End If
'    If blnN6flg = True And dblSisan <> 100 Then
'        '"各資産の和が100になりません。"
'        Call gfunc_ErrorMsg(3, 1538, "", "合計値：" & dblSisan)
'        Exit Function
'    End If
'------------<Modify End   azuma 2006/10/10 > -----------------------
    
    '⑦【資産保有期間の関連チェック】
    '　⑦-1 同一期間のデータとの同一チェック
    '　　同一期間の場合顧問料計算方法に"N6"か"N7"が選択されていること
    '　　同一期間の場合基礎数値種類、基礎数値計算方法、顧問料計算方法が同じになる

    
    '　①-4 保有期間の抜け、重複チェック
    For lngCnt = 1 To UBound(Sisan)
        
        'Ⅰ　資産保有期間での昇順ソート処理　(ソート済み)
        
        If lngCnt = 1 Then
        
            'Ⅱ　顧問料請求期間Fromと始まりが一致してるか確認
            If CStr(.Range("顧問請求From")) <> CStr(Sisan(lngCnt, 1)) Then
                '一致しない場合エラー
                Call gfunc_ErrorMsg(3, 1570, "", Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
            
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
            If Mid(.Range("平残断面区分"), 1, 1) = "2" Then
                '断面系の場合
                '顧問料請求期間Toと資産保有期間Toが一致してるか確認
                If CStr(.Range("顧問請求To")) <> CStr(Sisan(lngCnt, 2)) Then
                    '一致しない場合エラー
                    '資産保有期間Toと顧問料請求期間Toが一致していません。
                    Call gfunc_ErrorMsg(3, 1701, "資産保有期間To", Meisai & Sisan(lngCnt, 0) & "行目")
                    Exit Function
                End If
            
                '1行目の基礎数値計算方法が「期初」であるか確認
                If CStr(Sisan(lngCnt, 6)) <> "7" Then
                    '一致しない場合エラー
                    '「期初」のデータがありません。
                    Call gfunc_ErrorMsg(3, 1702, "基礎数値計算方法", Meisai & Sisan(lngCnt, 0) & "行目")
                    Exit Function
                End If
            
            End If
            
'*** 2007/03/14 PH3対応 Added By H.Anpo End

        Else
        
        'Ⅲ　カレント行のToの翌日が次行のFromになっているか確認
                
            If CStr(Sisan(lngCnt - 1, 1)) = CStr(Sisan(lngCnt, 1)) Then
            '前行FromとカレントFromが一致する場合
            
'------------<Modify Start azuma 2006/10/13 > -----------------------
                '前行と資産も同じならNG
                If CStr(Sisan(lngCnt - 1, 3)) = CStr(Sisan(lngCnt, 3)) Then
                    Call gfunc_ErrorMsg(3, 1571, "", Meisai & Sisan(lngCnt, 0) & "行目")
                    Exit Function
'                '顧問料計算方法が「00000：運用資産全体」ならNG
'                If CStr(Sisan(lngCnt, 3)) = "00000" Then
'                    Call gfunc_ErrorMsg(3, 1571, "", Meisai & Sisan(lngCnt, 0) & "行目")
'                    Exit Function
'------------<Modify End   azuma 2006/10/13 > -----------------------
                Else
                '顧問料計算方法が「00000：運用資産全体」以外 N6またはN7
                    
                    If CStr(Sisan(lngCnt - 1, 3)) <> "00000" And CStr(Sisan(lngCnt, 3)) <> "00000" Then
                    '前行もカレント行も顧問料計算方法が「00000：運用資産全体」以外の場合
                    
                        '前行とカレント行で資産保有期間が一致？
                        If CStr(Sisan(lngCnt - 1, 1)) = CStr(Sisan(lngCnt, 1)) And _
                           CStr(Sisan(lngCnt - 1, 2)) = CStr(Sisan(lngCnt, 2)) Then
                        '期間が一致している
                        
                            '前行とカレント行で基礎数値種類、基礎数値計算方法、顧問料計算方法が一致すること
                            If Not (CStr(Sisan(lngCnt - 1, 5)) = CStr(Sisan(lngCnt, 5)) And _
                                    CStr(Sisan(lngCnt - 1, 6)) = CStr(Sisan(lngCnt, 6)) And _
                                    CStr(Sisan(lngCnt - 1, 7)) = CStr(Sisan(lngCnt, 7))) Then
                                Call gfunc_ErrorMsg(3, 1572, "", "対象行：　" & Sisan(lngCnt - 1, 0) & _
                                                                 "行目と" & Sisan(lngCnt, 0) & "行目")
                                Exit Function
                            End If
                            
                            '------------<Modify Start azuma 2006/08/01 No.032> -----------------------
                            '料率毎の段階数、段階範囲の一致確認(N6同士、N7同士のみ)
                            lngPre = func_KK33DankaiCnt(CStr(Sisan(lngCnt - 1, 4)), strKK33Dankai)
                            lngCur = func_KK33DankaiCnt(CStr(Sisan(lngCnt, 4)), strKK33Dankai)
                            lngComp = 0
                            For lngCmpCnt = 1 To 20
'Debug.Print lngCmpCnt & ":" & strKK33Dankai(lngPre, lngCmpCnt) & "\\" & strKK33Dankai(lngCur, lngCmpCnt)
                                lngComp = lngComp + Abs(StrComp(strKK33Dankai(lngPre, lngCmpCnt), strKK33Dankai(lngCur, lngCmpCnt)))
                            Next lngCmpCnt
                            
                            '０以外は、段階数または段階範囲が異なる
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
'                            If lngComp <> 0 Then
'                                Call gfunc_ErrorMsg(3, 1582, "", "対象行：　" & Sisan(lngCnt - 1, 0) & _
'                                                                 "行目と" & Sisan(lngCnt, 0) & "行目")
'                                Exit Function
'                            End If
                            
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa Start
'                            'N11の場合はチェックしない
'                            If Trim(Sisan(lngCnt, 7)) <> "4" Then
                            'N11またはN12の場合はチェックしない
                            If Not (CStr(Trim(Sisan(lngCnt, 7))) = "4" Or CStr(Trim(Sisan(lngCnt, 7))) = "5") Then
'*** 2007/06/11 PH3.5対応 Modified By T.Ichikawa End
                                If lngComp <> 0 Then
                                    Call gfunc_ErrorMsg(3, 1582, "", "対象行：　" & Sisan(lngCnt - 1, 0) & _
                                                                     "行目と" & Sisan(lngCnt, 0) & "行目")
                                    Exit Function
                                End If
                            End If
'*** 2007/03/14 PH3対応 Modified By H.Anpo End
                            
                            
                            
''                            '料率額が設定されている場合エラー
''                            If CDbl(strKK33Dankai(lngPre, 21)) > 0 Then
''                                Call gfunc_ErrorMsg(3, 1583, "", "対象行：　" & Sisan(lngCnt - 1, 0) & "行目")
''                                Exit Function
''                            End If
''                            If CDbl(strKK33Dankai(lngCur, 21)) > 0 Then
''                                Call gfunc_ErrorMsg(3, 1584, "", "対象行：　" & Sisan(lngCnt - 1, 0) & "行目")
''                                Exit Function
''                            End If
''
''                            '料率額が設定されてない場合エラー
''                            If CDbl(strKK33Dankai(lngPre, 22)) <= 0 Then
''                                Call gfunc_ErrorMsg(3, 1585, "", "対象行：　" & Sisan(lngCnt - 1, 0) & "行目")
''                                Exit Function
''                            End If
''                            If CDbl(strKK33Dankai(lngCur, 22)) <= 0 Then
''                                Call gfunc_ErrorMsg(3, 1586, "", "対象行：　" & Sisan(lngCnt - 1, 0) & "行目")
''                                Exit Function
''                            End If
                            
                            
                            '------------<Modify End   azuma 2006/08/01 No.032> -----------------------
                                                        
                            
                            
                        Else
                        '期間が一致してない
                            
                            '前行Toのプラス１日とカレントFromが一致しない(不連続か重複)NG
                            If CStr(Sisan(lngCnt, 1)) < CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                                Call gfunc_ErrorMsg(3, 1579, "", "重複行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                                Exit Function
                            ElseIf CStr(Sisan(lngCnt, 1)) > CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                                Call gfunc_ErrorMsg(3, 1580, "", "不連続行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                                Exit Function
                            End If
                        
                        End If
                    Else
                    '前行とカレント行が顧問料計算方法が「00000：運用資産全体」の場合
                    
                    '　前行Toのプラス１日とカレントFromが一致しない(不連続か重複)NG
                        If CStr(Sisan(lngCnt, 1)) < CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                            Call gfunc_ErrorMsg(3, 1573, "", "重複行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                            Exit Function
                        ElseIf CStr(Sisan(lngCnt, 1)) > CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                            Call gfunc_ErrorMsg(3, 1574, "", "不連続行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                            Exit Function
                        End If
                    
                    End If
                    
                End If
            Else
            
                
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'            '前行FromとカレントFromが一致しない場合
'                '前行Toのプラス１日とカレントFromが一致しない(不連続か重複)NG
'                If CStr(Sisan(lngCnt, 1)) < CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
'                    Call gfunc_ErrorMsg(3, 1575, "", "重複行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
'                    Exit Function
'                ElseIf CStr(Sisan(lngCnt, 1)) > CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
'                    Call gfunc_ErrorMsg(3, 1576, "", "不連続行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
'                    Exit Function
'                End If
            
                If Mid(.Range("平残断面区分"), 1, 1) = "2" Then
                    '断面系の場合
                                        
                    '資産保有期間Toと顧問料請求期間Toが一致しているかチェック
                    If CStr(Sisan(lngCnt, 2)) <> CStr(Sisan(1, 2)) Then
                        '資産保有期間Toと顧問料請求期間Toが一致していません。
                        Call gfunc_ErrorMsg(3, 1703, "資産保有期間To", "一般資産  対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                    
'1571エラーでチェック
'                    '資産保有期間Fromの重複が無いかチェック
'                    If CStr(Sisan(lngCnt, 1)) = CStr(Sisan(lngCnt - 1, 2)) Then
'                        '資産保有期間Fromが重複しています。
'                        Call gfunc_ErrorMsg(3, 1704, "", "一般資産 重複行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
'                        Exit Function
'                    End If
                
                    '料率コードが全て等しいかチェック
                    If Trim(Sisan(lngCnt, 4)) <> Trim(Sisan(1, 4)) Then
                        '料率コードが一致していません。
                        Call gfunc_ErrorMsg(3, 1705, "料率コード", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                    
                    '基礎数値種類が全て等しいかチェック
                    If Trim(Sisan(lngCnt, 5)) <> Trim(Sisan(1, 5)) Then
                        '基礎数値種類が一致していません。
                        Call gfunc_ErrorMsg(3, 1706, "基礎数値種類", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                    
                    '顧問料計算方法が全て等しいかチェック
                    If Trim(Sisan(lngCnt, 7)) <> Trim(Sisan(1, 7)) Then
                        '顧問料計算方法が一致していません。
                        Call gfunc_ErrorMsg(3, 1707, "顧問料計算方法", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                    
                    '期初期末区分が全て等しいかチェック
                    If Trim(Sisan(lngCnt, 9)) <> Trim(Sisan(1, 9)) Then
                        '期初期末区分が一致していません。
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa Start ***
'                        Call gfunc_ErrorMsg(3, 1708, "期初期末区分", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Call gfunc_ErrorMsg(3, 1708, "期初期末時価", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa End   ***
                        Exit Function
                    End If
                    
                    '顧客指定区分が全て等しいかチェック
                    If Trim(Sisan(lngCnt, 10)) <> Trim(Sisan(1, 10)) Then
                        '顧客指定区分が一致していません。
                        Call gfunc_ErrorMsg(3, 1709, "顧客指定区分", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                    
                    '2行目の移行の基礎数値計算方法が「期初」以外であるか確認
                    If CStr(Sisan(lngCnt, 6)) = "7" Then
                        '「期初」のデータが複数あります。
                        Call gfunc_ErrorMsg(3, 1710, "基礎数値計算方法", "一般資産 対象行：　" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                End If
                    
                Else
                    '平残系の場合
                    '前行FromとカレントFromが一致しない場合
                    '前行Toのプラス１日とカレントFromが一致しない(不連続か重複)NG
                    If CStr(Sisan(lngCnt, 1)) < CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                        Call gfunc_ErrorMsg(3, 1575, "", "重複行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    ElseIf CStr(Sisan(lngCnt, 1)) > CStr(Replace(DateAdd("d", 1, CDate(gfunc_ymdFormat(Sisan(lngCnt - 1, 2)))), "/", "")) Then
                        Call gfunc_ErrorMsg(3, 1576, "", "不連続行：　" & Sisan(lngCnt - 1, 0) & "行目と" & Sisan(lngCnt, 0) & "行目")
                        Exit Function
                    End If
                End If
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                
            End If
            
        End If
        
        
    Next lngCnt

    'Ⅳ　顧問料請求期間Toと終わりが一致してるか確認
    If UBound(Sisan) > 0 Then
        If CStr(.Range("顧問請求To")) <> CStr(Sisan(lngCnt - 1, 2)) Then
            '一致しない場合エラー
            Call gfunc_ErrorMsg(3, 1577, "", Meisai & Sisan(lngCnt - 1, 0) & "行目")
            Exit Function
        End If
    End If


    End With

    'Ｎ６，Ｎ７チェック用の料率配列消去
    Erase strKK33Dankai

    func_CheckShisan1 = True
    
    Exit Function

ErrorSection:

    func_CheckShisan1 = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CheckShisan1", Err.Number, Err.Description)
    On Error GoTo 0

    'Ｎ６，Ｎ７チェック用の料率配列消去
    Erase strKK33Dankai
    
    
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    


End Function

'*************************************************************************
'関数名　　：資産情報チェック(月末顧問料調整資産)
'
'引　　数　：
'
'戻り値　　：Boolean
'
'機能説明　：月末顧問料調整資産情報の更新時入力チェック
'
'更新履歴　：2006/07/07 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_CheckShisan2(ByRef TargetSheets As Object _
                                 , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngCnt          As Long
    Dim strSisanCdPre   As String
    Const Meisai = "調整資産(+/-)　"


    func_CheckShisan2 = False


    strSisanCdPre = ""
    ReDim Sisan(0)
    
    '月末顧問料調整資産の構造体配列への取込とソート
    If func_Sisan2_To_Dim(TargetSheets, Sisan) = False Then
        Exit Function
    End If
    
    With TargetSheets
    
    For lngCnt = 1 To UBound(Sisan)
    
    '①【資産保有期間】
        '　①-0 From/Toの必須チェック
        If Trim(Sisan(lngCnt, 1)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1539, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If Trim(Sisan(lngCnt, 2)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1540, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
            
        '　①-1 日付の妥当チェック
        If gfunc_CheckDate(Sisan(lngCnt, 1)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1541, "顧問料保有期間From ", "日付の妥当性に問題があります。" & vbCrLf & _
                                Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If gfunc_CheckDate(Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1542, "顧問料保有期間To ", "日付の妥当性に問題があります。" & vbCrLf & _
                                Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-2 大小チェック
        If gfunc_CheckKikan(Sisan(lngCnt, 1), Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1543, "顧問料保有期間From/To ", _
                               "顧問料保有期間Fromが顧問料保有期間Toより先日付が指定されています。" _
                                & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-3 請求期間内チェック
        If CStr(.Range("顧問請求From")) > CStr(Sisan(lngCnt, 1)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1544, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If CStr(.Range("顧問請求To")) < CStr(Sisan(lngCnt, 2)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1545, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        '　①-4 同一資産の場合の期間重複チェック
        If strSisanCdPre = Sisan(lngCnt, 3) Then
            '前行の資産保有期間(To)　>=　現在行の保有資産(From)の場合エラー
            If Sisan(lngCnt - 1, 2) >= Sisan(lngCnt, 1) Then
                '入力不正
                Call gfunc_ErrorMsg(3, 1546, "顧問料保有期間 ", "同一資産での期間重複があります。" & _
                                    vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
        
        End If
        
        '資産コード(前行)に資産コード
        strSisanCdPre = Sisan(lngCnt, 3)
    
    '②【資産】
        '　②-0 必須チェック
        If Trim(Sisan(lngCnt, 3)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1547, "資産コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If

        '　②-1 資産コードがAxxxx、Bxxxxであるチェック
        If Mid(Sisan(lngCnt, 3), 1, 1) <> "A" And Mid(Sisan(lngCnt, 3), 1, 1) <> "B" Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1548, "資産コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
    
    '③【料率コード】
        '　③-1 必須チェック
        If Trim(Sisan(lngCnt, 4)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1549, "料率コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
'------------<Modify Start azuma 2007/01/12 > -----------------------
        Else
            Dim blnDataFlg  As Boolean
            Call func_CodeListSearch(CStr(Sisan(lngCnt, 4)), ThisWorkbook.Name, DATA_SHEETNAME, RATE_CODE_LIST, blnDataFlg)
            If blnDataFlg = False Then
                '存在チェックエラー
                Call gfunc_ErrorMsg(3, 1590, "料率コード ", "存在しないコードが入力又は選択されています。" & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
'------------<Modify End   azuma 2007/01/12 > -----------------------
        End If
    
    '④【基礎数値種類・基礎数値計算方法】
        '　④-1 必須チェック
        If Trim(Sisan(lngCnt, 5)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1550, "基礎数値種類 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If Trim(Sisan(lngCnt, 6)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1551, "基礎数値計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If

    Next lngCnt
    End With

    func_CheckShisan2 = True
    
    Exit Function

ErrorSection:

    func_CheckShisan2 = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CheckShisan2", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
End Function

'*************************************************************************
'関数名　　：資産情報チェック(T21調整資産)
'
'引　　数　：
'
'戻り値　　：Boolean
'
'機能説明　：T21調整資産情報の更新時入力チェック
'
'更新履歴　：2006/07/07 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_CheckShisan3(ByRef TargetSheets As Object _
                                 , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngCnt          As Long
    Dim strSisanCdPre   As String
    Dim lngTerm         As Long
    Dim strMsg          As String
    Dim lngAdd          As Long
    Const Meisai = "T21調整資産　"

    func_CheckShisan3 = False

    strSisanCdPre = ""
    ReDim Sisan(0)
    
    'T21資産の配列への取込とソート
    If func_Sisan3_To_Dim(TargetSheets, Sisan) = False Then
        Exit Function
    End If
    
    
    With TargetSheets
    For lngCnt = 1 To UBound(Sisan)


    '①【資産保有期間】
        '　①-0 From/Toの必須チェック
        If Trim(Sisan(lngCnt, 1)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1552, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If Trim(Sisan(lngCnt, 2)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1553, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
            
        '　①-1 日付の妥当チェック
        If gfunc_CheckDate(Sisan(lngCnt, 1)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1554, "顧問料保有期間From ", "日付の妥当性に問題があります。" & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If gfunc_CheckDate(Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1555, "顧問料保有期間To ", "日付の妥当性に問題があります。" & vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-2 大小チェック
        If gfunc_CheckKikan(Sisan(lngCnt, 1), Sisan(lngCnt, 2)) = False Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1556, "顧問料保有期間From/To ", _
                               "顧問料保有期間Fromが顧問料保有期間Toより先日付が指定されています。" & vbCrLf _
                                & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        
        '　①-3 請求期間内チェック
        If CStr(.Range("顧問請求From")) > CStr(Sisan(lngCnt, 1)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1557, "顧問料保有期間From ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        If CStr(.Range("顧問請求To")) < CStr(Sisan(lngCnt, 2)) Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1558, "顧問料保有期間To ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
        
        '　①-4 同一資産の場合の期間重複チェック
        If strSisanCdPre = Sisan(lngCnt, 3) Then
            '前行の資産保有期間(To)　>=　現在行の保有資産(From)の場合エラー
            If CStr(Sisan(lngCnt - 1, 2)) >= CStr(Sisan(lngCnt, 1)) Then
                '入力不正
                Call gfunc_ErrorMsg(3, 1559, "顧問料保有期間 ", "同一資産で期間の重複があります。" & vbCrLf _
                                   & Meisai & Sisan(lngCnt, 0) & "行目")
                Exit Function
            End If
        
        End If
        
        '資産コード(前行)に資産コード
        strSisanCdPre = Sisan(lngCnt, 3)
    
    '②【資産】
        '　②-0 必須チェック
        If Trim(Sisan(lngCnt, 3)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1560, "資産コード ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If

        '　②-1 資産コードがZxxxxであるチェック
        If Mid(Sisan(lngCnt, 3), 1, 1) <> "Z" Then
            '入力不正
            Call gfunc_ErrorMsg(3, 1561, "資産コード ", "資産コードは「Zxxxx」を選択して下さい。" & vbCrLf _
                                & Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
    
'------------<Modify Start azuma 2006/08/01 No.031> -----------------------
        '③【基礎数値計算方法】
        '　③-1 必須チェック
        If Trim(Sisan(lngCnt, 4)) = "" Then
            '"未入力。"
            Call gfunc_ErrorMsg(3, 1581, "基礎数値計算方法 ", Meisai & Sisan(lngCnt, 0) & "行目")
            Exit Function
        End If
'------------<Modify End   azuma 2006/08/01 No.031> -----------------------
    
    
'''    '③【時価積数計算期間】
'''    '④【時価積数計算期間(下期)】
'''        For lngTerm = 0 To 1
'''            Select Case lngTerm
'''            Case 0
'''                strMsg = "時価積数計算期間"
'''                lngAdd = 0
'''            Case 1
'''                strMsg = "時価積数計算期間(下期)"
'''                lngAdd = 2
'''            End Select
'''
'''            If Trim(Sisan(lngCnt, 4 + lngAdd)) <> "" Then
'''                '　③-1 日付の妥当チェック
'''                If gfunc_CheckDate(Sisan(lngCnt, 4 + lngAdd)) = False Then
'''                    '入力不正
'''                    Call gfunc_ErrorMsg(3, 1562, strMsg & "From ", "日付の妥当性に問題があります。" & _
'''                                        vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'''                    Exit Function
'''                End If
'''            End If
'''
'''
'''            If Trim(Sisan(lngCnt, 5 + lngAdd)) <> "" Then
'''                '　③-1 日付の妥当チェック
'''                If gfunc_CheckDate(Sisan(lngCnt, 5 + lngAdd)) = False Then
'''                    '入力不正
'''                    Call gfunc_ErrorMsg(3, 1563, strMsg & "To ", "日付の妥当性に問題があります。" & _
'''                                        vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'''                    Exit Function
'''                End If
'''            End If
'''
'''            '　③-2 大小チェック
'''            If Trim(Sisan(lngCnt, 4 + lngAdd)) <> "" And Trim(Sisan(lngCnt, 5 + lngAdd)) <> "" Then
'''                If gfunc_CheckKikan(Sisan(lngCnt, 4 + lngAdd), Sisan(lngCnt, 5 + lngAdd)) = False Then
'''                    '入力不正
'''                    Call gfunc_ErrorMsg(3, 1564, strMsg & "From/To ", strMsg & _
'''                                       "Fromが" & strMsg & "Toより先日付で指定されています。" & _
'''                                        vbCrLf & Meisai & Sisan(lngCnt, 0) & "行目")
'''                    Exit Function
'''                End If
'''            End If
'''        Next lngTerm
    
    
    

    Next lngCnt
    End With

    func_CheckShisan3 = True
    
    Exit Function

ErrorSection:

    func_CheckShisan3 = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CheckShisan3", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
End Function

'*************************************************************************
'関数名　　：明細行開始終了位置取得処理
'
'引　　数　：
'           TargetSheets    I       対象ワークシート
'           iKind           I       対象(1:一般資産、2:月末顧問料調整資産、3:T21調整資産)
'           lngSart         O       明細開始Row
'           lngEnd          O       明細終了Row
'
'戻り値　　：なし
'
'機能説明　：明細行の開始、終了行番号を返す
'
'更新履歴　：2006/07/11 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub sub_SearchStartEndRow(ByRef TargetSheets As Object, ByVal iKind As Long, _
                                  ByRef lngStart As Long, ByRef lngEnd As Long)
    Dim lngKindCnt As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

'    sub_SearchStartEndRow = 0
    
    If iKind < 1 Or iKind > 3 Then
        Exit Sub
    End If
    
    lngCnt = 18
    lngKindCnt = 0
    
    With TargetSheets
        Do While (1)
            If .Cells(lngCnt, 2) = "対象" Then
                lngKindCnt = lngKindCnt + 1
                lngStart = lngCnt + 2
                lngCnt = lngCnt + 2
            End If
            
'            If lngKindCnt = iKind And .Cells(lngCnt, 2) = vbNullString Then
            If lngKindCnt = iKind And .Range(mLINKCELLNAME & lngCnt) = vbNullString Then
                lngEnd = lngCnt - 1
                Exit Sub
            End If
            
            lngCnt = lngCnt + 1
        Loop
    End With
    
    Exit Sub

ErrorHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "sub_SearchStartEndRow", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
'    MsgBox Err.Description

End Sub

'*************************************************************************
'関数名　　：一般資産の明細取得・ソート処理
'
'引　　数　：
'           TargetSheets    I       対象ワークシート
'           Sisan           O       配列
'
'戻り値　　：なし
'
'機能説明　：一般資産の明細を配列に格納する
'
'更新履歴　：2006/07/11 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/25 SRA Y.Azuma    変更     料率適用期間テーブルに備考追加(No.79)
'更新履歴　：2007/01/12 SRA Y.Azuma    変更     UAT要望対応
'更新履歴　：2007/03/14 SRA H.Anpo     変更     PH3対応
'更新履歴　：2007/06/11 SRA T.Ichikawa 変更     PH3.5対応
'
'*************************************************************************
Private Function func_Sisan1_To_Dim(ByRef TargetSheets As Object _
                                  , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngStart        As Long
    Dim lngEnd          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long

    func_Sisan1_To_Dim = False
    
    '一般資産の開始行取得
    Call sub_SearchStartEndRow(TargetSheets, 1, lngStart, lngEnd)
    With TargetSheets
'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
        ReDim Sisan(lngEnd - lngStart + 1, Sisan1_MaxCols)
'''        ReDim Sisan(lngEnd - lngStart + 1, 8)
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------
        
        For lngRow = lngStart To lngEnd
            lngCnt = lngRow - lngStart + 1
            Sisan(lngCnt, 0) = lngCnt               '明細行番号
            Sisan(lngCnt, 1) = Cells(lngRow, 3)     '保有期間From
            Sisan(lngCnt, 2) = Cells(lngRow, 5)     '保有期間To
            Sisan(lngCnt, 3) = Mid(Cells(lngRow, 7), 1, gfunc_Separate("資産リスト"))    '資産
            Sisan(lngCnt, 4) = Mid(Cells(lngRow, 15), 1, gfunc_Separate("料率コードリスト"))  '料率
            Sisan(lngCnt, 5) = Mid(Cells(lngRow, 19), 1, gfunc_Separate("基礎数値種類リスト"))  '基礎数値種類
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'            Sisan(lngCnt, 6) = Mid(Cells(lngRow, 21), 1, gfunc_Separate("基礎数値計算方法リスト"))  '基礎数値計算方法
'            Sisan(lngCnt, 7) = Mid(Cells(lngRow, 25), 1, gfunc_Separate("顧問料計算方法リスト"))  '顧問料計算方法
            Sisan(lngCnt, 6) = Mid(Cells(lngRow, 22), 1, gfunc_Separate("基礎数値計算方法リスト"))  '基礎数値計算方法
            Sisan(lngCnt, 7) = Mid(Cells(lngRow, 26), 1, gfunc_Separate("顧問料計算方法リスト"))  '顧問料計算方法
'*** 2007/03/14 PH3対応 Added By H.Anpo End
'------------<Modify Start azuma 2007/01/12 > -----------------------
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'            Select Case CStr(Mid(Cells(lngRow, 25), 1, gfunc_Separate("顧問料計算方法リスト")))
            Select Case CStr(Mid(Cells(lngRow, 26), 1, gfunc_Separate("顧問料計算方法リスト")))
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                Case "1", "2"
                '通常、N6型
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'                    Sisan(lngCnt, 8) = Cells(lngRow, 27)    '割合
                    Sisan(lngCnt, 8) = Cells(lngRow, 28)    '割合
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                    
                Case "3"
                'N7型
                    Sisan(lngCnt, 8) = Range(mN7_SHISAN_WARIAI & lngRow).Value    '割合
                    
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
                Case "4"
                'N11型
                    Sisan(lngCnt, 8) = Cells(lngRow, 28)    '割合
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                    
'*** 2007/06/11 PH3.5対応 Added By T.Ichikawa Start
                Case "5"
                'N12型
                    Sisan(lngCnt, 8) = Cells(lngRow, 28)    '割合
'*** 2007/06/11 PH3.5対応 Added By T.Ichikawa End

            End Select
'------------<Modify End   azuma 2007/01/12 > -----------------------


'*** 2007/03/14 PH3対応 Added By H.Anpo Start
''------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'            Sisan(lngCnt, 9) = Cells(lngRow, 29)    '備考
''------------<Modify End   azuma 2006/08/25 No.079> -----------------------
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa Start ***
'            Sisan(lngCnt, 9) = Mid(Cells(lngRow, 30), 1, gfunc_Separate("期初期末区分リスト"))  '期初期末区分
            Sisan(lngCnt, 9) = Mid(Cells(lngRow, 30), 1, gfunc_Separate("期初期末時価リスト"))  '期初期末区分
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa End   ***
            Sisan(lngCnt, 10) = Mid(Cells(lngRow, 33), 1, gfunc_Separate("顧客指定区分リスト"))  '顧客指定区分リスト
            Sisan(lngCnt, 11) = Cells(lngRow, 36)    '備考
            Sisan(lngCnt, 12) = gfuncKeisan_GetSeikyushoShurui(TargetSheets, lngRow)   '請求書種類
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        
        Next lngRow
    End With
    
    '一般資産の期間From、期間Toでのソート
    Call sub_DoSort(Sisan, 1)
    
    func_Sisan1_To_Dim = True
    Exit Function

ErrorSection:

    func_Sisan1_To_Dim = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Sisan1_To_Dim", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：月末顧問料調整資産の明細取得・ソート処理
'
'引　　数　：
'           TargetSheets    I       対象ワークシート
'           Sisan           O       配列
'
'戻り値　　：なし
'
'機能説明　：月末顧問料調整資産の明細を配列に格納する
'
'更新履歴　：2006/07/11 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/25 SRA Y.Azuma    変更     料率適用期間テーブルに備考追加(No.79)
'
'*************************************************************************
Private Function func_Sisan2_To_Dim(ByRef TargetSheets As Object _
                                  , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngStart        As Long
    Dim lngEnd          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long

    func_Sisan2_To_Dim = False
    
    '月末顧問料調整資産の開始行取得
    Call sub_SearchStartEndRow(TargetSheets, 2, lngStart, lngEnd)
    With TargetSheets
'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
        ReDim Sisan(lngEnd - lngStart + 1, Sisan2_MaxCols)
'''        ReDim Sisan(lngEnd - lngStart + 1, 6)
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------
        
        For lngRow = lngStart To lngEnd
            lngCnt = lngRow - lngStart + 1
            Sisan(lngCnt, 0) = lngCnt               '明細行番号
            Sisan(lngCnt, 1) = Cells(lngRow, 3)     '保有期間From
            Sisan(lngCnt, 2) = Cells(lngRow, 5)     '保有期間To
            Sisan(lngCnt, 3) = Mid(Cells(lngRow, 7), 1, gfunc_Separate("資産リスト"))    '資産
            Sisan(lngCnt, 4) = Mid(Cells(lngRow, 15), 1, gfunc_Separate("料率コードリスト"))  '料率
            Sisan(lngCnt, 5) = Mid(Cells(lngRow, 19), 1, gfunc_Separate("基礎数値種類リスト"))  '基礎数値種類
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
'            Sisan(lngCnt, 6) = Mid(Cells(lngRow, 21), 1, gfunc_Separate("基礎数値計算方法リスト"))  '基礎数値計算方法
''------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'            Sisan(lngCnt, 7) = Cells(lngRow, 25)     '備考
''------------<Modify End   azuma 2006/08/25 No.079> -----------------------
            Sisan(lngCnt, 6) = Mid(Cells(lngRow, 22), 1, gfunc_Separate("基礎数値計算方法リスト"))  '基礎数値計算方法
            Sisan(lngCnt, 7) = Cells(lngRow, 26)     '備考
'*** 2007/03/14 PH3対応 Modified By H.Anpo End
        Next lngRow
    End With
    
    '資産のソート
    Call sub_DoSort(Sisan, 2)
    
    func_Sisan2_To_Dim = True
    Exit Function

ErrorSection:

    func_Sisan2_To_Dim = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Sisan2_To_Dim", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：T21調整資産の明細取得・ソート処理
'
'引　　数　：
'           TargetSheets    I       対象ワークシート
'           Sisan           O       配列
'
'戻り値　　：なし
'
'機能説明　：T21調整資産の明細を配列に格納する
'
'更新履歴　：2006/07/11 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/01 SRA Y.Azuma    変更     基礎数値計算方法追加
'更新履歴　：2006/08/25 SRA Y.Azuma    変更     料率適用期間テーブルに備考追加(No.79)
'更新履歴　：2008/12/25 SRA Y.Azuma    変更     自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Private Function func_Sisan3_To_Dim(ByRef TargetSheets As Object _
                                  , ByRef Sisan() As Variant) As Boolean
On Error GoTo ErrorSection

    Dim lngStart        As Long
    Dim lngEnd          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long

    func_Sisan3_To_Dim = False
    
    'T21資産の開始行取得
    Call sub_SearchStartEndRow(TargetSheets, 3, lngStart, lngEnd)
    With TargetSheets
'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
        ReDim Sisan(lngEnd - lngStart + 1, Sisan3_MaxCols)
'''        ReDim Sisan(lngEnd - lngStart + 1, 4)
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------
        
        For lngRow = lngStart To lngEnd
            lngCnt = lngRow - lngStart + 1
            Sisan(lngCnt, 0) = lngCnt               '明細行番号
            Sisan(lngCnt, 1) = Cells(lngRow, 3)     '保有期間From
            Sisan(lngCnt, 2) = Cells(lngRow, 5)     '保有期間To
            Sisan(lngCnt, 3) = Mid(Cells(lngRow, 7), 1, gfunc_Separate("資産リスト"))    '資産
'------------<Modify Start azuma 2006/08/01 No.031> -----------------------
            Sisan(lngCnt, 4) = Mid(Cells(lngRow, 15), 1, gfunc_Separate("基礎数値計算方法リスト"))  '基礎数値計算方法
'------------<Modify End   azuma 2006/08/01 No.031> -----------------------

'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
            Sisan(lngCnt, 5) = Mid(Cells(lngRow, 19), 1, gfunc_Separate("代行手数料リスト"))   '代行手数料
            Sisan(lngCnt, 6) = Cells(lngRow, 23)     '備考
''------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'            Sisan(lngCnt, 5) = Cells(lngRow, 19)     '備考
''------------<Modify End   azuma 2006/08/25 No.079> -----------------------
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
        Next lngRow
    End With
    
    '資産のソート
    Call sub_DoSort(Sisan, 3)
    
    func_Sisan3_To_Dim = True
    
    Exit Function

ErrorSection:

    func_Sisan3_To_Dim = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Sisan3_To_Dim", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：資産の明細ソート処理
'
'引　　数　：
'           Sisan           O       配列
'           strType         I       取得タイプ(1:一般,2:月末顧問料調整,3:T21調整)
'
'戻り値　　：なし
'
'機能説明　：T21調整資産の明細を配列に格納する
'
'更新履歴　：2006/07/11 SRA Y.Azuma    新規作成
'更新履歴　：2006/09/11 SRA Y.Azuma    変更     T21資産のソートキー追加
'更新履歴　：2006/10/13 SRA Y.Azuma    変更     (連結)合成料率未登録対応
'
'*************************************************************************
Private Sub sub_DoSort(ByRef Sisan() As Variant, ByVal strType As String)

On Error GoTo ErrorSection


    Dim lngLoopCnt1     As Long
    Dim lngLoopCnt2     As Long
    Dim Work          As Variant
    Dim lngCols         As Long
    Dim lngColCnt       As Long
    Dim strSortKeyPre   As String
    Dim strSortKeyNow   As String
    
    strSortKeyPre = ""
    strSortKeyNow = ""
    
    
    'Work領域設定
    Select Case strType
    Case "1"
    '一般資産
        lngCols = Sisan1_MaxCols
    Case "2"
    '月末顧問料調整資産
        lngCols = Sisan2_MaxCols
    Case "3"
    'T21調整資産
        lngCols = Sisan3_MaxCols
    Case Else
    'その他
        Exit Sub
    End Select
    
    
    
    For lngLoopCnt1 = 1 To UBound(Sisan) - 1
    
        strSortKeyPre = ""
        
        For lngLoopCnt2 = 1 To UBound(Sisan)
        
            'ソート項目設定
            Select Case strType
            Case "1"
            '一般資産
                '資産保有期間From、資産保有期間Toの昇順
'------------<Modify Start azuma 2006/10/13 > -----------------------
                strSortKeyNow = Sisan(lngLoopCnt2, 1) & Sisan(lngLoopCnt2, 2) & Sisan(lngLoopCnt2, 3)
'                strSortKeyNow = Sisan(lngLoopCnt2, 1) & Sisan(lngLoopCnt2, 2)
'------------<Modify End   azuma 2006/10/13 > -----------------------
            Case "2"
            '月末顧問料調整資産
                ''資産コード、資産保有期間From、資産保有期間Toの昇順
                strSortKeyNow = Sisan(lngLoopCnt2, 3) & Sisan(lngLoopCnt2, 1) & Sisan(lngLoopCnt2, 2)
            Case "3"
            'T21調整資産
'------------<Modify Start azuma 2006/09/11 > -----------------------
                '資産コード、資産保有期間From、資産保有期間Toの昇順
                strSortKeyNow = Sisan(lngLoopCnt2, 3) & Sisan(lngLoopCnt2, 1) & Sisan(lngLoopCnt2, 2)
''                '資産保有期間From、資産保有期間Toの昇順
''                strSortKeyNow = Sisan(lngLoopCnt2, 1) & Sisan(lngLoopCnt2, 2)
'------------<Modify End   azuma 2006/09/11 > -----------------------
            End Select
            
            If Trim(strSortKeyPre) <> "" Then
            
                If strSortKeyPre > strSortKeyNow Then
                    
                    For lngColCnt = 0 To lngCols
                        Work = ""
                        Work = Sisan(lngLoopCnt2, lngColCnt)
                        Sisan(lngLoopCnt2, lngColCnt) = Sisan(lngLoopCnt2 - 1, lngColCnt)
                        Sisan(lngLoopCnt2 - 1, lngColCnt) = Work
                    Next lngColCnt
                    
                End If
            
            End If
            
            'ソートキー(前)の設定
            strSortKeyPre = strSortKeyNow
        
        Next lngLoopCnt2
    Next lngLoopCnt1
    
    
    Set Work = Nothing
    
    Exit Sub
    
ErrorSection:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "sub_DoSort(" & strType & ")", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Set Work = Nothing

End Sub

'*************************************************************************
'関数名　　：トランザクションチェック処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           lngStatus       O       エラーステータス(0:正常,1:ロック,2:削除済,-1:その他)
'           lngKikanIdFirst I       検索時請求期間ID
'
'戻り値　　：なし
'
'機能説明　：顧問料請求期間テーブルの排他・ロックチェック
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_UpdateCheck(ByRef TargetSheets As Object _
                                , ByRef lngStatus As Long _
                                , ByVal lngKikanIdFirst As Long) As Boolean

On Error GoTo ErrorSection


    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
'    Dim lngKikanIdFirst         As Long         '検索時の請求期間ID
    Dim strKouzaNo              As String
    

    func_UpdateCheck = False
    
    strErrCode = ""
    lngStatus = -1
    
'    '検索時の請求期間ID取得
''    If IsNull(Worksheets("Template").Range("検索時請求期間ID").Value) Or Trim(Worksheets("Template").Range("検索時請求期間ID").Value) = "" Then
''        lngKikanIdFirst = -1
''    Else
''        lngKikanIdFirst = Worksheets("Template").Range("検索時請求期間ID").Value
''    End If
    
    '口座番号
    strKouzaNo = TargetSheets.Range("口座番号").Value2

    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     SAKUJO_FLG"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SEIKYU_KIKAN"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KOHZA_NO='" & strKouzaNo & "' AND"
    strSql = strSql & "     SEIKYU_KIKAN_ID=" & lngKikanIdFirst
    strSql = strSql & "  FOR UPDATE NOWAIT"

    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
        
            If strErrCode = "ORA-00054" Then
            '他セッションからのロック状態
                lngStatus = 1
            Else
            'その他エラー
                lngStatus = -1
            End If
            
            Exit Function
        End If
    Else
        Exit Function
    End If

    '削除フラグの確認
    If lngRow > 0 Then
        If CStr(vData(0, 0)) <> "0" Then
            '削除フラグが"0"以外の場合、他ユーザーから更新済み
            lngStatus = 2
            Exit Function
        End If
    End If
    
    lngStatus = 0
    func_UpdateCheck = True

    Exit Function

ErrorSection:

    func_UpdateCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_UpdateCheck", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function


'*************************************************************************
'関数名　　：請求期間ID発番処理
'
'引　　数　：
'           lngId       I       採番した請求期間ID
'
'戻り値　　：なし
'
'機能説明　：シーケンスから請求期間IDの採番
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_GetSeikyuuId(ByRef lngId As Long) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_GetSeikyuuId = False

    strSql = "SELECT KYK_ID_SQ.NEXTVAL FROM DUAL"

    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            Exit Function
        Else
            If IsNumeric(vData(0, 0)) Then
                lngId = CLng(vData(0, 0))
            Else
            '数値以外
                Exit Function
            End If
        End If
    Else
        Exit Function
    End If

    func_GetSeikyuuId = True

    Exit Function

ErrorSection:

    func_GetSeikyuuId = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetSeikyuuId", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function


'*************************************************************************
'関数名　　：顧問料請求期間テーブル登録処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           lngId           I       請求期間ID
'           lngKikanIdFirst I       検索時請求期間ID
'           strError        O       エラーコード
'
'戻り値　　：なし
'
'機能説明　：顧問料請求期間テーブルへ登録を行う
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'更新履歴　：2006/12/13 SRA Y.Azuma    変更     (仕変)入金日区分削除
'更新履歴　：2006/12/25 SRA Y.Azuma    変更     (仕変)初回最終区分追加
'更新履歴　：2007/01/26 SRA Y.Azuma    変更     (PH1)入金日区分の復活
'更新履歴　：2007/03/14 SRA H.Anpo     変更     PH3対応
'
'*************************************************************************
Private Function func_InsSEIKYU_KIKAN(ByVal TargetSheets As Object _
                                    , ByVal lngId As Long _
                                    , ByVal lngKikanIdFirst As Long _
                                    , ByRef strError As String) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_InsSEIKYU_KIKAN = False
    
    With TargetSheets
        strSql = ""
        strSql = strSql & " INSERT INTO KYK_SEIKYU_KIKAN ("
        strSql = strSql & " KOHZA_NO                        ,"
        strSql = strSql & " SEIKYU_KIKAN_ID                 ,"
        strSql = strSql & " SEIKYU_KIKAN_FROM               ,"
        strSql = strSql & " SEIKYU_KIKAN_TO                 ,"
        strSql = strSql & " SEIKYU_KIKAN_NISSU              ,"
        strSql = strSql & " SHINTAKU_KIKAN_FROM             ,"
        strSql = strSql & " SHINTAKU_KIKAN_TO               ,"
        strSql = strSql & " KOMON_KEIYAKU_KIKAN_FROM        ,"
        strSql = strSql & " KOMON_KEIYAKU_KIKAN_TO          ,"
        strSql = strSql & " NYUKIN_YMD_KBN                  ,"
        strSql = strSql & " KEIYAKU_KIN                     ,"
        strSql = strSql & " KISHO_GANPON                    ,"
        strSql = strSql & " NENKAN_NISSU_KBN                ,"
'------------<Modify Start azuma 2006/12/25 > -----------------------
        strSql = strSql & " SHOKAI_SAISHU_KBN               ,"
'------------<Modify End   azuma 2006/12/25 > -----------------------
        strSql = strSql & " TOHROKU_YMD                     ,"
        strSql = strSql & " KOHSHIN_YMD                     ,"
        strSql = strSql & " KOHSHIN_PGM_ID                  ,"
        strSql = strSql & " KOHSHIN_TANTOHSHA               ,"
        strSql = strSql & " SAKUJO_FLG                      ,"
        strSql = strSql & " ZENKAI_SEIKYU_KIKAN_ID"
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        strSql = strSql & " ,HEIZAN_DANMEN_KBN"
        strSql = strSql & " ,MAE_ATO_BARAI_KBN"
        strSql = strSql & " ,ZEROEN_SEIKYUSHO_KBN"
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "   ("
        strSql = strSql & " '" & gfunc_KozaNoFormat(.Range("口座番号")) & "'"
        strSql = strSql & ",'" & lngId & "'"
        strSql = strSql & ",'" & .Range("顧問請求From") & "'"
        strSql = strSql & ",'" & .Range("顧問請求To") & "'"
'------------<Modify Start azuma 2006/12/13 総No.30> -----------------------
        strSql = strSql & ",to_date('" & .Range("顧問請求To") & "') - to_date('" & .Range("顧問請求From") & "') + 1"
'        strSql = strSql & ",to_date('" & .Range("信託To") & "') - to_date('" & .Range("信託From") & "') + 1"
'------------<Modify End   azuma 2006/12/13 総No.30> -----------------------
        strSql = strSql & ",'" & .Range("信託From") & "'"
        strSql = strSql & ",'" & .Range("信託To") & "'"
        strSql = strSql & ",'" & .Range("契約From") & "'"
        strSql = strSql & ",'" & .Range("契約To") & "'"
'------------<Modify Start azuma 2007/01/26 > -----------------------
'        strSql = strSql & ",NULL"
        strSql = strSql & ",'" & Mid(.Range("入金日区分"), 1, 1) & "'"
'------------<Modify End   azuma 2007/01/26 > -----------------------
        strSql = strSql & ",'" & Replace(.Range("契約金額"), ",", "") & "'"
        strSql = strSql & ",     NULL"
        strSql = strSql & ",'" & Mid(.Range("年間日数"), 1, 1) & "'"
'------------<Modify Start azuma 2006/12/25 > -----------------------
        strSql = strSql & ",'" & Mid(.Range("初回最終区分"), 1, 1) & "'"
'------------<Modify End   azuma 2006/12/25 > -----------------------
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",     '0'"
        If lngKikanIdFirst = -1 Then
            strSql = strSql & ",NULL"
        Else
            strSql = strSql & ",'" & lngKikanIdFirst & "'"
        End If
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        strSql = strSql & " ,'" & Mid(.Range("平残断面区分"), 1, 1) & "'"
        strSql = strSql & " ,'" & Mid(.Range("前払後払区分"), 1, 1) & "'"
        strSql = strSql & " ,'" & Mid(.Range("ゼロ円請求書区分"), 1, 1) & "'"
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        strSql = strSql & " )"
    End With
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
    
    
    If blnRet = False Then
        If Trim(strErrCode) <> "" Then
            strError = strErrCode
        End If
        
        Exit Function
    End If
    
    Erase vData
    func_InsSEIKYU_KIKAN = True

    Exit Function

ErrorSection:

    func_InsSEIKYU_KIKAN = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsSEIKYU_KIKAN", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData


End Function



'*************************************************************************
'関数名　　：論理削除共通処理１
'
'引　　数　：
'           strTableName    I       処理対象ワークシート
'           strKohzaNo      I       削除対象口座番号
'           lngIdFirst      I       削除対象請求期間ID(検索時の)
'
'戻り値　　：なし
'
'機能説明　：顧問料請求期間、料率適用期間テーブルの論理削除
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_DelCommon(ByVal strTableName As String _
                              , ByVal strKohzaNo As String _
                              , ByVal lngIdFirst As Long) As Boolean
On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean

    func_DelCommon = False
    
    '初回登録時は削除可能な請求期間IDが存在しないので処理を行わない
    If lngIdFirst = -1 Then
        func_DelCommon = True
        Exit Function
    End If
    
    strSql = ""
    strSql = strSql & " UPDATE " & strTableName
    strSql = strSql & " SET "
    strSql = strSql & " KOHSHIN_YMD       = SYSDATE "
    strSql = strSql & ",KOHSHIN_PGM_ID    = '" & UPDATE_PGM_ID & "'"
    strSql = strSql & ",KOHSHIN_TANTOHSHA = '" & UPDATE_USER & "'"
    strSql = strSql & ",SAKUJO_FLG        = '1'"
    strSql = strSql & " WHERE "
'    strSql = strSql & " KOHZA_NO          = '" & strKohzaNo & "' AND"
    strSql = strSql & " SEIKYU_KIKAN_ID   = '" & lngIdFirst & "'"
    
    '実行
    blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)
    
    
    If blnRet = False Then
        Exit Function
    End If
    
    Erase vData
    func_DelCommon = True

    Exit Function

ErrorSection:

    func_DelCommon = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_DelCommon", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData



End Function


'*************************************************************************
'関数名　　：料率適用期間テーブル登録処理
'
'引　　数　：
'           strKohzaNo      I       口座番号
'           lngId           I       請求期間ID
'           iKind           I       対象(1:一般資産、2:月末顧問料調整資産、3:T21調整資産)
'           strKohzaNo      I       資産情報配列
'           typTekiyohKikan I/O     検索時の料率適用期間テーブル
'           strError        O       エラーコード
'
'戻り値　　：なし
'
'機能説明　：料率適用期間テーブルへの登録を行う
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/01 SRA Y.Azuma    変更     T21調整資産に基礎数値計算方法追加
'更新履歴　：2006/08/10 SRA Y.Azuma    変更     料率適用期間IDの設定方法変更(No.41)
'更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
'更新履歴　：2006/08/16 SRA Y.Azuma    変更     合成料率テーブル登録機能追加
'更新履歴　：2006/08/25 SRA Y.Azuma    変更     料率適用期間テーブルに備考追加(No.79)
'更新履歴　：2006/10/10 SRA Y.Azuma    変更     期間毎のN6資産割合合計対応(連結No.6)
'更新履歴　：2006/10/13 SRA Y.Azuma    変更     (連結)合成料率未登録対応
'更新履歴　：2007/03/14 SRA H.Anpo     変更     PH3対応
'更新履歴　：2008/01/22 SRA Y.Azuma    変更     (PH4)特殊文字バグ対応
'更新履歴　：2008/12/25 SRA Y.Azuma    変更     自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Private Function func_InsRATE_TEKIYOH_KIKAN(ByVal strKohzaNo As String _
                                          , ByVal lngId As Long _
                                          , ByVal iKind As Long _
                                          , ByVal Sisan As Variant _
                                          , ByRef typTekiyohKikan() As typRateTekiyohKikan _
                                          , ByRef strError As String) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim blnRet                  As Boolean
    Dim strErrCode              As String
    Dim lngIdSeq                As Long     '<--- Modify azuma 2006/08/10 No.041
    Dim strPreBuff              As String   '<--- Modify azuma 2006/08/10 No.041
    Dim strCurBuff              As String   '<--- Modify azuma 2006/08/10 No.041
    Dim lngTekiyohKikan         As Long     '<--- Modify azuma 2006/08/10 No.042
    Dim strSelBuff              As String   '<--- Modify azuma 2006/08/10 No.042
    Dim strInsBuff              As String   '<--- Modify azuma 2006/08/10 No.042
'------------<Modify Start azuma 2006/08/16 合成料率登録> -----------------------
    Dim strN6Wariai             As String   '(JAVAインターフェース変数)N6型資産割合
    Dim strRyoritu              As String   '(JAVAインターフェース変数)料率値
    Dim strRyorituBuff          As String   '一時取得した料率値
    Dim lngIdSeqPre             As Long     '直前行の料率適用期間ID
    Dim strGohseiRate           As String   '計算で求めた合成料率
'------------<Modify End   azuma 2006/08/16 合成料率登録> -----------------------

    func_InsRATE_TEKIYOH_KIKAN = False
    
    strPreBuff = ""
    
    
    For lngCnt = 1 To UBound(Sisan)
    
    
'------------<Modify Start azuma 2006/08/10 No.041> -----------------------
        If iKind = 1 Then
        '一般資産
            '資産保有期間(From,To)、顧問料計算方法が同じ場合は同じ請求期間IDで登録を行う。
            strCurBuff = ""
            strCurBuff = CStr(Sisan(lngCnt, 1)) & CStr(Sisan(lngCnt, 2)) & CStr(Sisan(lngCnt, 7))
            
            If strPreBuff <> strCurBuff Then
                '新しい料率適用期間IDを取得する。
                If func_GetSeikyuuId(lngIdSeq) = False Then
                    Exit Function
                End If
            End If
            'カレント値を前値に移動
            strPreBuff = strCurBuff
        Else
        '一般資産以外
            '新しい料率適用期間IDを取得する。
            If func_GetSeikyuuId(lngIdSeq) = False Then
                Exit Function
            End If
        End If
'------------<Modify End   azuma 2006/08/10 No.041> -----------------------
    
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
        '更新対象のデータと検索時のデータで
        '資産保有期間From/To、資産が一致する場合、新しい料率適用期間IDを構造体に設定する。
        strInsBuff = ""
        strInsBuff = CStr(Sisan(lngCnt, 1)) & CStr(Sisan(lngCnt, 2)) & CStr(Sisan(lngCnt, 3))
        For lngTekiyohKikan = 1 To UBound(typTekiyohKikan)
            With typTekiyohKikan(lngTekiyohKikan)
                
                strSelBuff = .RATE_TEKIYOH_KIKAN_FROM _
                           & .RATE_TEKIYOH_KIKAN_TO _
                           & .SHISAN_BUNRUI _
                           & .SHISAN_CODE
                           
                If strInsBuff = strSelBuff Then
                    .RATE_TEKIYOH_KIKAN_ID_NEW = CStr(lngIdSeq)
                End If
            End With
           
        Next lngTekiyohKikan
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    
        strSql = ""
        strSql = strSql & " INSERT INTO KYK_RATE_TEKIYOH_KIKAN ("
        strSql = strSql & " KOHZA_NO                       ,"
        strSql = strSql & " SEIKYU_KIKAN_ID                ,"
        strSql = strSql & " SHISAN_BUNRUI                  ,"
        strSql = strSql & " SHISAN_CODE                    ,"
        strSql = strSql & " RATE_TEKIYOH_KIKAN_ID          ,"
        strSql = strSql & " RATE_TEKIYOH_KIKAN_FROM        ,"
        strSql = strSql & " RATE_TEKIYOH_KIKAN_TO          ,"
        strSql = strSql & " RATE_TEKIYOH_KIKAN_NISSU       ,"
        strSql = strSql & " PX_SHINTAKU_KBN                ,"
        strSql = strSql & " KISO_SUCHI_KEISAN_HOHHOH       ,"
        strSql = strSql & " RATE_CODE                      ,"
        strSql = strSql & " KEISAN_HOHHOH                  ,"
        strSql = strSql & " SHISAN_WARIAI                  ,"
'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
        strSql = strSql & " BIKOH                          ,"
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------
        strSql = strSql & " TOHROKU_YMD                    ,"
        strSql = strSql & " KOHSHIN_YMD                    ,"
        strSql = strSql & " KOHSHIN_PGM_ID                 ,"
        strSql = strSql & " KOHSHIN_TANTOHSHA              ,"
        strSql = strSql & " SAKUJO_FLG"
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        strSql = strSql & " ,KISHO_KIMATSU_KBN"
        strSql = strSql & " ,KOKYAKU_SHITEI_KBN"
        strSql = strSql & " ,SEIKYUSHO_SHURUI"
'*** 2007/03/14 PH3対応 Added By H.Anpo End

'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
        strSql = strSql & " ,DAIKOH_NASHI_FLG"
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "  ("
        strSql = strSql & "'" & strKohzaNo & "'"
        strSql = strSql & "," & lngId
        strSql = strSql & ",'" & Mid(Sisan(lngCnt, 3), 1, 1) & "'"
        strSql = strSql & ",'" & Mid(Sisan(lngCnt, 3), 2, 4) & "'"
'------------<Modify Start azuma 2006/08/10 No.041> -----------------------
        strSql = strSql & "," & lngIdSeq
'        strSql = strSql & ",KYK_ID_SQ.NEXTVAL"
'------------<Modify End   azuma 2006/08/10 No.041> -----------------------
        strSql = strSql & ",'" & Sisan(lngCnt, 1) & "'"
        strSql = strSql & ",'" & Sisan(lngCnt, 2) & "'"
        strSql = strSql & ",to_date('" & Sisan(lngCnt, 2) & "') - to_date('" & Sisan(lngCnt, 1) & "') +1"
'        strSql = strSql & ",'" & CLng(Sisan(lngCnt, 2)) - CLng(Sisan(lngCnt, 2)) & "'"
        Select Case iKind
            Case 1
            '一般資産
                strSql = strSql & ",'" & Sisan(lngCnt, 5) & "'" 'PX信託区分
                strSql = strSql & ",'" & Sisan(lngCnt, 6) & "'" '基礎数値計算方法
                strSql = strSql & ",'" & Sisan(lngCnt, 4) & "'" '料率コード
                strSql = strSql & ",'" & Sisan(lngCnt, 7) & "'" '計算方法
                '割合が未入力または数値でない場合、NULLを設定
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
'                If IsNull(Sisan(lngCnt, 8)) Or _
'                   Trim(Sisan(lngCnt, 8)) = "" Or _
'                   IsNumeric(Sisan(lngCnt, 8)) = False Then
                If IsNull(Sisan(lngCnt, 8)) Or _
                   Trim(Sisan(lngCnt, 8)) = "" Or _
                   gkyk_IsNumeric(Sisan(lngCnt, 8)) = False Then
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
                    strSql = strSql & ",NULL"                           '資産割合
                Else
                    strSql = strSql & "," & (Sisan(lngCnt, 8) / 100)    '資産割合
                End If
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
''------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'                strSql = strSql & ",'" & func_ChkQuoteshon(CStr(Sisan(lngCnt, 9)), "'") & "'" '備考
''------------<Modify End   azuma 2006/08/25 No.079> -----------------------
                strSql = strSql & ",'" & func_ChkQuoteshon(CStr(Sisan(lngCnt, 11)), "'") & "'" '備考
'*** 2007/03/14 PH3対応 Added By H.Anpo End
                
            Case 2
            '月末顧問料調整資産
                strSql = strSql & ",'" & Sisan(lngCnt, 5) & "'" 'PX信託区分
                strSql = strSql & ",'" & Sisan(lngCnt, 6) & "'" '基礎数値計算方法
                strSql = strSql & ",'" & Sisan(lngCnt, 4) & "'" '料率コード
                strSql = strSql & ",NULL"                      '計算方法
                strSql = strSql & ",NULL"                       '資産割合
'------------<Modify Start azuma 2006/08/25 No.079> -----------------------
                strSql = strSql & ",'" & func_ChkQuoteshon(CStr(Sisan(lngCnt, 7)), "'") & "'" '備考
'------------<Modify End   azuma 2006/08/25 No.079> -----------------------
            
            Case 3
            'T21調整資産
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
'                strSql = strSql & ",NULL"   'PX信託区分
                strSql = strSql & ",'3'"   'PX信託区分(3:T21固定)
'*** 2007/03/14 PH3対応 Added By H.Anpo End
'------------<Modify Start azuma 2006/08/01 No.031> -----------------------
                strSql = strSql & ",'" & Sisan(lngCnt, 4) & "'"   '基礎数値計算方法
'                strSql = strSql & ",NULL"   '基礎数値計算方法
'------------<Modify End   azuma 2006/08/01 No.031> -----------------------
                strSql = strSql & ",NULL"   '料率コード
                strSql = strSql & ",NULL"   '計算方法
                strSql = strSql & ",NULL"   '資産割合
'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
                strSql = strSql & ",'" & func_ChkQuoteshon(CStr(Sisan(lngCnt, 6)), "'") & "'" '備考
''------------<Modify Start azuma 2006/08/25 No.079> -----------------------
'                strSql = strSql & ",'" & func_ChkQuoteshon(CStr(Sisan(lngCnt, 5)), "'") & "'" '備考
''------------<Modify End   azuma 2006/08/25 No.079> -----------------------
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
            
        End Select
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",'0' "
        
'*** 2007/03/14 PH3対応 Added By H.Anpo Start
        Select Case iKind
            Case 1
            '一般資産
                strSql = strSql & ",'" & Sisan(lngCnt, 9) & "'"     '期初期末区分
                strSql = strSql & ",'" & Sisan(lngCnt, 10) & "'"    '顧客指定区分
                strSql = strSql & ",'" & Sisan(lngCnt, 12) & "'"    '請求書種類
'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
                strSql = strSql & ",NULL"                           '代行手数料
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
                
            Case 2
            '月末顧問料調整資産
                strSql = strSql & ",''"         '期初期末区分
                strSql = strSql & ",''"         '顧客指定区分
                strSql = strSql & ",''"         '請求書種類
'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
                strSql = strSql & ",NULL"                           '代行手数料
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
            
            Case 3
            'T21調整資産
                strSql = strSql & ",''"         '期初期末区分
                strSql = strSql & ",''"         '顧客指定区分
                strSql = strSql & ",''"         '請求書種類
'------------<Modify Start azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
                strSql = strSql & ",'" & Sisan(lngCnt, 5) & "'"    '代行手数料
'------------<Modify End   azuma 2008/12/25 > 自己設定投信の委託者報酬額の内訳管理---------------
            
        End Select
'*** 2007/03/14 PH3対応 Added By H.Anpo End
        
        strSql = strSql & " )"
        
        '実行
        blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
        
        
        If blnRet = False Then
        
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
            
            Exit Function
        End If
        
        
'------------<Modify Start azuma 2006/08/16 合成料率登録> -----------------------
    
        '合成料率テーブルへの登録
        '　一般資産で顧問料計算方法が"N6"の場合、JAVAで合成料率を求めて(1資産の場合必要ない)
        '　合成料率テーブルに登録する。
        If iKind = 1 Then
        '一般資産
        
            '"N6"型の場合のみ合成料率テーブルに登録を行う。
            If CStr(Sisan(lngCnt, 7)) = "2" Then
            'N6の場合
                '料率コードから料率の一覧を取得する。
                blnRet = func_GetRyoritsu(CStr(Sisan(lngCnt, 4)), strRyorituBuff, strError)
                If blnRet = False Then
                    'MsgBox ("合成料率取得に失敗しました。")
                    Call gfunc_ErrorMsg(3, 1587, "")
                    Exit Function
                End If
                
                
                If Trim(strN6Wariai) = "" Then
                    strN6Wariai = Format((Sisan(lngCnt, 8) / 100), "0.0##")
                    strRyoritu = strRyorituBuff
'------------<Modify Start azuma 2006/10/10 > -----------------------
'                ElseIf Trim(strN6Wariai) <> "" And lngIdSeq = lngIdSeqPre Then
                    
                ElseIf Trim(strN6Wariai) <> "" Then
                'N6型で料率適用期間IDが変更になった場合、又は、最終行の場合、合成料率の登録を行う
                    If (lngCnt > 1 And lngIdSeq <> lngIdSeqPre) Then
                        If sub_GohseiRateMain(strKohzaNo _
                                              , lngId _
                                              , lngIdSeqPre _
                                              , strN6Wariai _
                                              , strRyoritu _
                                              , strError) = False Then
                            Exit Function
                        End If
                        strN6Wariai = ""
'                        strRyorituBuff = ""
                    ElseIf lngCnt = UBound(Sisan) Then
                    '最終行
                        strN6Wariai = strN6Wariai & "," & Format((Sisan(lngCnt, 8) / 100), "0.0##")
                        strRyoritu = strRyoritu & ";" & strRyorituBuff
                        If sub_GohseiRateMain(strKohzaNo _
                                              , lngId _
                                              , lngIdSeqPre _
                                              , strN6Wariai _
                                              , strRyoritu _
                                              , strError) = False Then
                            Exit Function
                        End If
                        strN6Wariai = ""
                    
                    End If
                    
                    If lngCnt <> UBound(Sisan) Then
                        If lngIdSeq = lngIdSeqPre Then
    
                            strN6Wariai = strN6Wariai & "," & Format((Sisan(lngCnt, 8) / 100), "0.0##")
                            strRyoritu = strRyoritu & ";" & strRyorituBuff
                        Else
                            If Trim(strN6Wariai) = "" Then
                                strN6Wariai = Format((Sisan(lngCnt, 8) / 100), "0.0##")
                                strRyoritu = strRyorituBuff
                            End If
                        End If
                    End If

'------------<Modify End   azuma 2006/10/10 > -----------------------
                
                End If
                
                
'------------<Modify Start azuma 2006/10/10 > -----------------------
'                'N6型で最終行の場合、合成料率の登録を行う
'                If lngCnt = UBound(Sisan) Then
'                    If sub_GohseiRateMain(strKohzaNo _
'                                          , lngId _
'                                          , lngIdSeqPre _
'                                          , strN6Wariai _
'                                          , strRyoritu _
'                                          , strError) = False Then
'                        Exit Function
'                    End If
'                End If
'------------<Modify End   azuma 2006/10/10 > -----------------------
                
                
                
            Else
            'N6以外
                '合成料率の登録を行う
                If sub_GohseiRateMain(strKohzaNo _
                                      , lngId _
                                      , lngIdSeqPre _
                                      , strN6Wariai _
                                      , strRyoritu _
                                      , strError) = False Then
                    Exit Function
                End If
            End If
            
            lngIdSeqPre = lngIdSeq
            
        End If
'------------<Modify End   azuma 2006/08/16 合成料率登録> -----------------------
        
        
        
    Next lngCnt
    
'------------<Modify Start azuma 2006/10/13 > -----------------------
    '資産割合がまだあるの場合、合成料率の登録を行う
    If Trim(strN6Wariai) <> "" Then
        If sub_GohseiRateMain(strKohzaNo _
                              , lngId _
                              , lngIdSeqPre _
                              , strN6Wariai _
                              , strRyoritu _
                              , strError) = False Then
            Exit Function
        End If
    End If
'------------<Modify End   azuma 2006/10/13 > -----------------------
    
    Erase vData
    

    func_InsRATE_TEKIYOH_KIKAN = True

    Exit Function

ErrorSection:

    func_InsRATE_TEKIYOH_KIKAN = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsRATE_TEKIYOH_KIKAN", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData


End Function


'*************************************************************************
'関数名　　：組入資産テーブル登録処理
'
'引　　数　：
'           strKohzaNo      I       口座番号
'           lngId           I       請求期間ID
'           iKind           I       対象(1:一般資産、2:月末顧問料調整資産、3:T21調整資産)
'           strKohzaNo      I       資産情報配列
'           strError        O       エラーコード
'
'戻り値　　：なし
'
'機能説明　：組入資産テーブルへの登録を行う
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_InsKUMIIRE_SHISAN(ByVal strKohzaNo As String _
                                          , ByVal lngId As Long _
                                          , ByVal Sisan As Variant _
                                          , ByRef strError As String) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim strSisanCdPre           As String
    
    Dim dicSisanCd              As Variant      '資産コード　ディクショナリー
    Set dicSisanCd = CreateObject("Scripting.Dictionary")

    func_InsKUMIIRE_SHISAN = False


    For lngCnt = 1 To UBound(Sisan)
    
        '既に登録済みかチェックして未登録なら登録処理を行う
        If dicSisanCd.Exists(Sisan(lngCnt, 3)) = False Then
            
            'ディクショナリーに追加
            dicSisanCd.Add Sisan(lngCnt, 3), Sisan(lngCnt, 3)
            
            strSql = ""
            strSql = strSql & " INSERT INTO KYK_KUMIIRE_SHISAN ("
            strSql = strSql & " KOHZA_NO               ,"
            strSql = strSql & " SEIKYU_KIKAN_ID        ,"
            strSql = strSql & " SHISAN_BUNRUI          ,"
            strSql = strSql & " SHISAN_CODE            ,"
            strSql = strSql & " TOHROKU_YMD            ,"
            strSql = strSql & " KOHSHIN_YMD            ,"
            strSql = strSql & " KOHSHIN_PGM_ID         ,"
            strSql = strSql & " KOHSHIN_TANTOHSHA      ,"
            strSql = strSql & " SAKUJO_FLG"
            strSql = strSql & " )"
            strSql = strSql & " VALUES"
            strSql = strSql & "      ("
            strSql = strSql & "'" & strKohzaNo & "'"
            strSql = strSql & "," & lngId
            strSql = strSql & ",'" & Mid(Sisan(lngCnt, 3), 1, 1) & "'"
            strSql = strSql & ",'" & Mid(Sisan(lngCnt, 3), 2, 4) & "'"
            strSql = strSql & ",SYSDATE"
            strSql = strSql & ",SYSDATE"
            strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
            strSql = strSql & ",'" & UPDATE_USER & "'"
            strSql = strSql & ",'0' "
            strSql = strSql & " )"
    
            '実行
            blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
            
            
            If blnRet = False Then
                If Trim(strErrCode) <> "" Then
                
                    If strErrCode = "ORA-00001" Then
                    '重複登録エラー
                        '重複登録はエラーにしない(処理無し)
                    Else
                        strError = strErrCode
                        Exit Function
                    End If
                    
                End If
                
            End If
            
        End If
        
    Next lngCnt
    
    Erase vData
    
    Set dicSisanCd = Nothing

    func_InsKUMIIRE_SHISAN = True

    Exit Function

ErrorSection:

    func_InsKUMIIRE_SHISAN = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsKUMIIRE_SHISAN", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    Set dicSisanCd = Nothing


End Function


'*************************************************************************
'関数名　　：１２テーブル削除処理
'
'引　　数　：
'           lngIdFirst      I       請求期間ID(検索時)
'           strError        O       エラーコード
'
'戻り値　　：なし
'
'機能説明　：組入資産テーブルへの登録を行う
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'更新履歴　：2006/10/06 SRA Y.Azuma    変更     T21調整資産テーブル対応(No.192)
'
'*************************************************************************
Private Function func_Del12Tables(ByVal lngIdFirst As Long, ByRef strError As String) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim vTable                  As Variant
    Dim strTable                As String

    func_Del12Tables = False
    
    '顧問料請求期間,　　　　組入資産,　　　　　　　　　合成料率,
    '計算基礎数値合計,　　　計算基礎数値,　　　　　　　計算基礎数値・資産時価対応,
    '顧問料計算結果明細,　　料率適用期間,　　　　　　　顧問料計算結果,
    '請求管理,　　　　　　　顧問料合計,　　　　　　　　未収管理
    '調整資産委託者報酬額,　調整資産委託者報酬額明細,　調整資産委託者報酬額月次 '<-------- Modify azuma 2006/10/06 No.192
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
'前受管理を追加
'    vTable = Array("KYK_SEIKYU_KIKAN", "KYK_KUMIIRE_SHISAN" _
'                 , "KYK_GOHSEI_RATE", "KYK_KEISAN_KISO_SUCHI_SUM" _
'                 , "KYK_KEISAN_KISO_SUCHI", "KYK_KEISANKISO_SHISANJIKA" _
'                 , "KYK_KOMONRYOH_KEISAN_MEISAI", "KYK_RATE_TEKIYOH_KIKAN" _
'                 , "KYK_KOMONRYOH_KEISAN_KEKKA", "KYK_SEIKYU_KANRI" _
'                 , "KYK_KOMONRYOH_SUM", "KYK_MISHU_KANRI" _
'                 , "KYK_T21_HOHSHU_GAKU", "KYK_T21_HOHSHU_GAKU_MEISAI", "KYK_T21_HOHSHU_GETSU") '<--- Modify azuma 2006/10/06 No.192
    vTable = Array("KYK_SEIKYU_KIKAN", "KYK_KUMIIRE_SHISAN" _
                 , "KYK_GOHSEI_RATE", "KYK_KEISAN_KISO_SUCHI_SUM" _
                 , "KYK_KEISAN_KISO_SUCHI", "KYK_KEISANKISO_SHISANJIKA" _
                 , "KYK_KOMONRYOH_KEISAN_MEISAI", "KYK_RATE_TEKIYOH_KIKAN" _
                 , "KYK_KOMONRYOH_KEISAN_KEKKA", "KYK_SEIKYU_KANRI" _
                 , "KYK_KOMONRYOH_SUM", "KYK_MISHU_KANRI", "KYK_MAEUKE_KANRI" _
                 , "KYK_T21_HOHSHU_GAKU", "KYK_T21_HOHSHU_GAKU_MEISAI", "KYK_T21_HOHSHU_GETSU") '<--- Modify azuma 2006/10/06 No.192
'*** 2007/03/14 PH3対応 Modified By H.Anpo End
    
    For lngCnt = 0 To UBound(vTable)
        
        '削除対象テーブル
        strTable = vTable(lngCnt)
        
        strSql = ""
        strSql = strSql & " UPDATE "
        strSql = strSql & strTable
        strSql = strSql & " SET"
        strSql = strSql & "     KOHSHIN_YMD=SYSDATE"
        strSql = strSql & "    ,KOHSHIN_PGM_ID='" & UPDATE_PGM_ID & "'"
        strSql = strSql & "    ,KOHSHIN_TANTOHSHA='" & UPDATE_USER & "'"
        strSql = strSql & "    ,SAKUJO_FLG='1'"
        strSql = strSql & " WHERE"
        strSql = strSql & "     SEIKYU_KIKAN_ID=" & lngIdFirst
    
        '実行
        blnRet = gclsdb.DoExequteSql(gcUPDATE, strSql, vData, lngCol, lngRow, strErrCode)
        
        
        If blnRet = False Then
        
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Del12Tables" & _
                               " (" & strTable & ")(" & strError & ")" & strSql, _
                               Err.Number, Err.Description)
            Exit Function
        End If
    Next lngCnt


    func_Del12Tables = True
    
    Erase vData
    Set vTable = Nothing
    
    Exit Function

ErrorSection:

    func_Del12Tables = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_Del12Tables (" & strTable & ")", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
    Erase vData
    Set vTable = Nothing

End Function

'*************************************************************************
'関数名　　：８テーブルDirectInsert処理
'
'引　　数　：
'           lngId               I       請求期間ID(採番)
'           lngKikanIdFirst     I       請求期間ID(検索時)
'           typTekiyohKikan()   I       検索時料率適用期間テーブルの値
'           strError            O       エラーコード
'
'戻り値　　：なし
'
'機能説明　：８テーブルへDirectInsertで登録を行う
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
'更新履歴　：2006/10/06 SRA Y.Azuma    変更     T21調整資産テーブル対応(No.192)
'更新履歴　：2006/10/24 SRA Y.Azuma    変更     計算結果の全体(資産CD'0000')のデータ引継ぎ(連No.5)
'更新履歴　：2007/01/23 SRA Y.Azuma    変更     (仕変)PH2連No.2 テーブルカラム順変更対応
'更新履歴　：2007/03/02 SRA Y.Azuma    変更     (PH2)連No.36対応 有効レコードのみを処理対象にする。
'更新履歴　：2007/03/14 SRA H.Anpo     変更     PH3対応
'更新履歴　：2007/04/27 SRA Y.Azuma    変更     (PH3)Insertのカラム指定対応
'
'*************************************************************************
Private Function func_InsSelTables(ByVal lngId As Long _
                                 , ByVal lngKikanIdFirst As Long _
                                 , ByRef typTekiyohKikan() As typRateTekiyohKikan _
                                 , ByRef strError As String) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngCnt                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim vTable                  As Variant
    Dim strTable                As String
    Dim lngTekiyohKikan         As Long
    Dim vTable2                 As Variant
    Dim lngTekiyohKikanIdNew    As Long
    Dim blnDataFlg              As Boolean
    
    
'------------<Modify Start azuma 2006/10/24 連No.5> -----------------------
    Dim blnZentai               As Boolean
    Dim vRateKikanId            As New Dictionary   'Variant
    
'    Set vRateKikanId = CreateObject(Scripting.Dictionary)
'------------<Modify End   azuma 2006/10/24 連No.5> -----------------------

    
    
    func_InsSelTables = False
    
    ' 請求管理,顧問料合計,顧問料計算結果,未収管理
    ',計算基礎数値合計,顧問料計算結果明細,計算基礎数値
    ',計算基礎数値・資産時価対応
    
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
'前受管理を追加
''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'    vTable = Array("kyk_seikyu_kanri", "kyk_komonryoh_sum", "kyk_mishu_kanri")
    vTable = Array("kyk_seikyu_kanri", "kyk_komonryoh_sum", "kyk_mishu_kanri", "kyk_maeuke_kanri")
'*** 2007/03/14 PH3対応 Modified By H.Anpo End
    
    vTable2 = Array("kyk_komonryoh_keisan_kekka" _
                  , "kyk_keisan_kiso_suchi_sum", "kyk_komonryoh_keisan_meisai" _
                  , "kyk_keisan_kiso_suchi", "kyk_keisankiso_shisanjika" _
                  , "KYK_GOHSEI_RATE" _
                  , "KYK_T21_HOHSHU_GAKU", "KYK_T21_HOHSHU_GAKU_MEISAI", "KYK_T21_HOHSHU_GETSU") '<------------ Modify azuma 2006/10/06 No.192
    
'    vTable = Array("kyk_seikyu_kanri", "kyk_komonryoh_sum" _
'                  , "kyk_komonryoh_keisan_kekka", "kyk_mishu_kanri" _
'                  , "kyk_keisan_kiso_suchi_sum", "kyk_komonryoh_keisan_meisai" _
'                  , "kyk_keisan_kiso_suchi", "kyk_keisankiso_shisanjika")
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    For lngCnt = 0 To UBound(vTable)
        
        '処理対象テーブル
        strTable = vTable(lngCnt)
        
        'SQL作成
        strSql = ""
        strSql = strSql & " INSERT INTO " & strTable
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
        strSql = strSql & func_InsSelTablesSql(strTable, lngId)
'Debug.Print "請求のみ －－ " & strTable & " (" & lngId & ")"
'        strSql = strSql & " SELECT"
'
'        Select Case strTable
'        Case "kyk_seikyu_kanri"
'        '請求管理
'            strSql = strSql & func_InsSelTablesSql1(lngId)
'
'        Case "kyk_komonryoh_sum"
'        '顧問料合計
'            strSql = strSql & func_InsSelTablesSql2(lngId)
'
''        Case "kyk_komonryoh_keisan_kekka"
''        '顧問料計算結果★料率適用期間IDの更新あり
''            strSql = strSql & func_InsSelTablesSql3(lngId)
'
'        Case "kyk_mishu_kanri"
'        '未収管理
'            strSql = strSql & func_InsSelTablesSql4(lngId)
'
''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'        Case "kyk_maeuke_kanri"
'        '前受管理
'            strSql = strSql & func_InsSelTablesSql13(lngId)
''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'
'
''        Case "kyk_keisan_kiso_suchi_sum"
''        '計算基礎数値合計★料率適用期間IDの更新あり
''            strSql = strSql & func_InsSelTablesSql5(lngId)
''
''        Case "kyk_komonryoh_keisan_meisai"
''        '顧問料計算結果明細★料率適用期間IDの更新あり
''            strSql = strSql & func_InsSelTablesSql6(lngId)
''
''        Case "kyk_keisan_kiso_suchi"
''        '計算基礎数値★料率適用期間IDの更新あり
''            strSql = strSql & func_InsSelTablesSql7(lngId)
''
''        Case "kyk_keisankiso_shisanjika"
''        '計算基礎数値・資産時価対応★料率適用期間IDの更新あり
''            strSql = strSql & func_InsSelTablesSql8(lngId)
'
'        End Select
'
''------------<Modify Start azuma 2007/01/23 > -----------------------
'        If strTable <> "kyk_seikyu_kanri" And strTable <> "kyk_komonryoh_sum" Then
''------------<Modify End   azuma 2007/01/23 > -----------------------
'
'            strSql = strSql & "     ,TOHROKU_YMD,"
'            strSql = strSql & "     SYSDATE,"
'            strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'            strSql = strSql & "     '" & UPDATE_USER & "',"
'            strSql = strSql & "     '0'"
'
''------------<Modify Start azuma 2007/01/23 > -----------------------
'        End If
''------------<Modify End   azuma 2007/01/23 > -----------------------
            
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
            
        strSql = strSql & " FROM"
        strSql = strSql & "     " & strTable
        strSql = strSql & " WHERE"
        strSql = strSql & "     SEIKYU_KIKAN_ID=" & lngKikanIdFirst
'------------<Modify Start azuma 2007/03/02 > -----------------------
        strSql = strSql & " AND SAKUJO_FLG = '0'"
'------------<Modify End   azuma 2007/03/02 > -----------------------
            
    
        '実行
        blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
        
'Debug.Print "請求のみ －－ " & strTable & " 処理件数：" & lngRow & ""
        
        If blnRet = False Then
        
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsSelTables" & _
                               " (" & strTable & ")(" & strError & ")" & strSql, _
                               Err.Number, Err.Description)
            Exit Function
        End If
    Next lngCnt
    
    
    
'------------<Modify Start azuma 2006/08/10 No.042> -----------------------
    '料率適用期間IDの更新が必要なテーブルの更新
    For lngTekiyohKikan = 1 To UBound(typTekiyohKikan)
    
        
        '新しい料率適用期間IDがあるものみ処理対象とする。
        If Trim(typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID_NEW) <> "" Then
    
            
'------------<Modify Start azuma 2006/10/24 連No.5> -----------------------
            If vRateKikanId.Exists(typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID) = True Then
                blnZentai = False
            Else
                blnZentai = True
                'ディクショナリーに追加
                vRateKikanId.Add typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID _
                                , typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID
            End If
'------------<Modify End   azuma 2006/10/24 連No.5> -----------------------
            
            lngTekiyohKikanIdNew = CLng(typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID_NEW)
            For lngCnt = 0 To UBound(vTable2)
                
                blnDataFlg = True
                
                '処理対象テーブル
                strTable = vTable2(lngCnt)
                
                'SQL作成
                strSql = ""
                strSql = strSql & " INSERT INTO " & strTable

'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
'                strSql = strSql & " SELECT"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                
                Select Case strTable
                
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                Case "kyk_komonryoh_keisan_kekka"
''                '顧問料計算結果★料率適用期間IDの更新あり
''                    strSql = strSql & func_InsSelTablesSql3(lngId, lngTekiyohKikanIdNew)
''
''                Case "kyk_keisan_kiso_suchi_sum"
''                '計算基礎数値合計★料率適用期間IDの更新あり
''                    strSql = strSql & func_InsSelTablesSql5(lngId, lngTekiyohKikanIdNew)
''
''                Case "kyk_komonryoh_keisan_meisai"
''                '顧問料計算結果明細★料率適用期間IDの更新あり
''                    strSql = strSql & func_InsSelTablesSql6(lngId, lngTekiyohKikanIdNew)
''
''                Case "kyk_keisan_kiso_suchi"
''                '計算基礎数値★料率適用期間IDの更新あり
''                    strSql = strSql & func_InsSelTablesSql7(lngId, lngTekiyohKikanIdNew)
''
''                Case "kyk_keisankiso_shisanjika"
''                '計算基礎数値・資産時価対応★料率適用期間IDの更新あり
''                    strSql = strSql & func_InsSelTablesSql8(lngId, lngTekiyohKikanIdNew)
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                    
                    
'------------<Modify Start azuma 2006/10/06 > -----------------------
                Case "KYK_T21_HOHSHU_GAKU"
                'T21調整資産委託者報酬額★料率適用期間IDの更新あり
                    If typTekiyohKikan(lngTekiyohKikan).SHISAN_BUNRUI = "Z" Then
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                        strSql = strSql & func_InsSelTablesSql9(lngId, lngTekiyohKikanIdNew)
                        strSql = strSql & func_InsSelTablesSql(strTable, lngId, lngTekiyohKikanIdNew)
'Debug.Print "請求&料率－－ " & strTable & " (" & lngId & ":" & lngTekiyohKikanIdNew & ")"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                    Else
                        strSql = ""
                    End If
                    
                Case "KYK_T21_HOHSHU_GAKU_MEISAI"
                'T21調整資産委託者報酬額明細★料率適用期間IDの更新あり
                    If typTekiyohKikan(lngTekiyohKikan).SHISAN_BUNRUI = "Z" Then
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                        strSql = strSql & func_InsSelTablesSql10(lngId, lngTekiyohKikanIdNew)
                        strSql = strSql & func_InsSelTablesSql(strTable, lngId, lngTekiyohKikanIdNew)
'Debug.Print "請求&料率－－ " & strTable & " (" & lngId & ":" & lngTekiyohKikanIdNew & ")"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                    Else
                        strSql = ""
                    End If
                    
                Case "KYK_T21_HOHSHU_GETSU"
                'T21調整資産委託者報酬額月次★料率適用期間IDの更新あり
                    If typTekiyohKikan(lngTekiyohKikan).SHISAN_BUNRUI = "Z" Then
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                        strSql = strSql & func_InsSelTablesSql11(lngId, lngTekiyohKikanIdNew)
                        strSql = strSql & func_InsSelTablesSql(strTable, lngId, lngTekiyohKikanIdNew)
'Debug.Print "請求&料率－－ " & strTable & " (" & lngId & ":" & lngTekiyohKikanIdNew & ")"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                    Else
                        strSql = ""
                    End If
                    
'------------<Modify Start azuma 2006/10/24 連No.5> -----------------------
                Case "KYK_GOHSEI_RATE"
                '合成料率
                    
                    '新しい請求期間ID、料率適用期間IDで既に登録があるか調べる
                    If func_GetGohseiRate(lngId, lngTekiyohKikanIdNew, blnDataFlg) = False Then
                        Exit Function
                    End If
                    
                    'まだ登録されてないようなら合成料率の引継ぎを行う。
                    If blnDataFlg = False And blnZentai = True Then
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                        strSql = strSql & func_InsSelTablesSql12(lngId, lngTekiyohKikanIdNew)
                        strSql = strSql & func_InsSelTablesSql(strTable, lngId, lngTekiyohKikanIdNew)
'Debug.Print "請求&料率－－ " & strTable & " (" & lngId & ":" & lngTekiyohKikanIdNew & ")"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                    Else
                        strSql = ""
                    End If
'------------<Modify End   azuma 2006/10/24 連No.5> -----------------------
'------------<Modify End   azuma 2006/10/06 > -----------------------
                    
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
                Case Else
                    strSql = strSql & func_InsSelTablesSql(strTable, lngId, lngTekiyohKikanIdNew)
'Debug.Print "請求&料率－－ " & strTable & " (" & lngId & ":" & lngTekiyohKikanIdNew & ")"
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------
                
                End Select
                
                If Trim(strSql) <> "" Then  '<------------ Modify azuma 2006/10/06 No.192
'*** 2007/03/14 PH3対応 Modified By H.Anpo Start
''------------<Modify Start azuma 2007/01/23 > -----------------------
'                    If strTable <> "kyk_komonryoh_keisan_kekka" And strTable <> "kyk_komonryoh_keisan_meisai" Then
''------------<Modify End   azuma 2007/01/23 > -----------------------
                    
'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
''                    If strTable <> "kyk_komonryoh_keisan_kekka" _
''                        And strTable <> "kyk_komonryoh_keisan_meisai" _
''                        And strTable <> "kyk_keisan_kiso_suchi_sum" _
''                        And strTable <> "kyk_keisan_kiso_suchi" _
''                        And strTable <> "kyk_keisankiso_shisanjika" _
''                    Then
'''*** 2007/03/14 PH3対応 Modified By H.Anpo End
''
''
''                        strSql = strSql & "     ,TOHROKU_YMD,"
''                        strSql = strSql & "     SYSDATE,"
''                        strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
''                        strSql = strSql & "     '" & UPDATE_USER & "',"
''                        strSql = strSql & "     '0'"
'''------------<Modify Start azuma 2007/01/23 > -----------------------
''                    End If
'''------------<Modify End   azuma 2007/01/23 > -----------------------
'------------<Modify END azuma 2007/04/27 (PH3)> -----------------------
                    
                    
''------------<Modify Start azuma 2006/10/06 No.192> -----------------------
'                    'テーブルが正式版になるまでの暫定対応
'                    If strTable = "KYK_T21_HOHSHU_GAKU_MEISAI" Then
'                        strSql = strSql & ",KARI_DATA_FLG "
'                    End If
''------------<Modify End   azuma 2006/10/06 No.192> -----------------------
                    
                    
                    strSql = strSql & " FROM"
                    strSql = strSql & "     " & strTable
                    strSql = strSql & " WHERE"
                    strSql = strSql & "     SEIKYU_KIKAN_ID=" & lngKikanIdFirst
                    strSql = strSql & " AND RATE_TEKIYOH_KIKAN_ID=" & typTekiyohKikan(lngTekiyohKikan).RATE_TEKIYOH_KIKAN_ID
'------------<Modify Start azuma 2007/03/02 > -----------------------
                    strSql = strSql & " AND SAKUJO_FLG = '0'"
'------------<Modify End   azuma 2007/03/02 > -----------------------
                    
'------------<Modify Start azuma 2006/10/24 連No.5> -----------------------
                    If strTable <> "KYK_GOHSEI_RATE" Then
                        strSql = strSql & " AND SHISAN_BUNRUI = '" & typTekiyohKikan(lngTekiyohKikan).SHISAN_BUNRUI & "'"
    '                    strSql = strSql & " AND SHISAN_BUNRUI = '" & typTekiyohKikan(lngTekiyohKikan).SHISAN_BUNRUI & "'"
                        
                        If blnZentai = False Then
                            strSql = strSql & " AND SHISAN_CODE = '" & typTekiyohKikan(lngTekiyohKikan).SHISAN_CODE & "'"
                        Else
                            strSql = strSql & " AND (SHISAN_CODE = '" & typTekiyohKikan(lngTekiyohKikan).SHISAN_CODE & "'"
                            strSql = strSql & " OR SHISAN_CODE = '0000')"
                            
                        End If
    '                    strSql = strSql & " AND SHISAN_CODE = '" & typTekiyohKikan(lngTekiyohKikan).SHISAN_CODE & "'"
                    End If
'------------<Modify End   azuma 2006/10/24 連No.5> -----------------------
'Debug.Print strSql
                    '実行
                    blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
                    
'Debug.Print "請求&料率－－ " & strTable & " 処理件数：" & lngRow & ""
                    
                    If blnRet = False Then
                    
                        If Trim(strErrCode) <> "" Then
                            strError = strErrCode
                        End If
                        Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsSelTables" & _
                                           " (" & strTable & ")(" & strError & ")" & strSql, _
                                           Err.Number, Err.Description)
                        Exit Function
                    End If
                    
                End If          '<------------ Modify azuma 2006/10/06 No.192
                
            Next lngCnt
            
            
            
    
        End If
        
    Next lngTekiyohKikan
'------------<Modify End   azuma 2006/08/10 No.042> -----------------------
    
    
    Erase vData
    Set vTable = Nothing
    
    Set vRateKikanId = Nothing  '<------------ Modify azuma 2006/10/24 連No.5
    
    func_InsSelTables = True

    Exit Function

ErrorSection:

    func_InsSelTables = False
'Resume
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsSelTables", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    Set vTable = Nothing
    Set vRateKikanId = Nothing  '<------------ Modify azuma 2006/10/24 連No.5

End Function

'------------<Modify Start azuma 2007/04/27 (PH3)> -----------------------
'''
'''
''''請求管理(kyk_seikyu_kanri)
''''*************************************************************************
''''関数名　　：請求管理(kyk_seikyu_kanri)DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId           I       請求期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2006/08/31 SRA Y.Azuma    変更     請求管理テーブル・カラム追加対応
''''更新履歴　：2007/01/05 SRA Y.Azuma    変更     (PH2)PH2テーブル変更対応
''''更新履歴　：2007/01/23 SRA Y.Azuma    変更     (仕変)PH2連No.2 テーブルカラム順変更対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql1(ByVal lngId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  SEIKYU_YMD"
'''    strSql = strSql & ",  NYUKIN_YOTEI_YMD"
'''    strSql = strSql & ",  NYUKIN_YMD"
'''    strSql = strSql & ",  SEIKYUSHO_KIKAN_FROM"
'''    strSql = strSql & ",  SEIKYUSHO_KIKAN_TO"
''''------------<Modify Start azuma 2007/01/05 > -----------------------
''''    strSql = strSql & ",  SEIKOU_KEISAN_KISO"   '<------------ Modify azuma 2006/08/11
''''------------<Modify End   azuma 2007/01/05 > -----------------------
'''    strSql = strSql & ",  STATUS"
'''
''''------------<Modify Start azuma 2007/01/23 > -----------------------
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
'''    strSql = strSql & ",  SHUEKI_RATE_SA_KIJUN_SHUEKI    "   '収益率差分又は基準収益率
'''    strSql = strSql & ",  KAKEME_CD"            '<------------ Modify azuma 2006/08/31
''''------------<Modify End   azuma 2007/01/23 > -----------------------
'''
'''    func_InsSelTablesSql1 = strSql
'''End Function
'''
'''
'''
'''
''''顧問料合計(kyk_komonryoh_sum)
''''*************************************************************************
''''関数名　　：顧問料合計(kyk_komonryoh_sum)DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId           I       請求期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2007/01/05 SRA Y.Azuma    変更     (PH2)PH2テーブル変更対応
''''更新履歴　：2007/01/23 SRA Y.Azuma    変更     (仕変)PH2連No.2 テーブルカラム順変更対応
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''更新履歴　：2007/04/17 SRA Y.Azuma    変更     (PH3)PH3請求額修正対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql2(ByVal lngId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  MARUME_MAE_KOMONRYOH"
'''    strSql = strSql & ",  MARUME_ATO_KOMONRYOH"
'''    strSql = strSql & ",  SEIKYU_ZUMI_RUIKEI_GAKU"
'''    strSql = strSql & ",  KAZEI_MAE_KONKAI_SEIKYU_GAKU" '<------------ Modify azuma 2006/08/11
'''
'''    strSql = strSql & ",  SHOHIZEI_GAKU"                '<------------ Modify azuma 2006/08/11
'''    strSql = strSql & ",  KAZEI_ATO_KONKAI_SEIKYU_GAKU" '<------------ Modify azuma 2006/08/11
'''    strSql = strSql & ",  T21_HOHSHU_GAKU"
'''    strSql = strSql & ",  AB_KINGAKU"
'''    strSql = strSql & ",  KARI_KEISAN_FLG"
'''
''''------------<Modify Start azuma 2007/01/23 > -----------------------
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
''''------------<Modify Start azuma 2007/01/05 > -----------------------
'''    strSql = strSql & ",  SAITEI_HOSHO_KOHRYOGO_GAKU"       '最低保障考慮後額
'''    strSql = strSql & ",  SAITEI_HOSHO_RATE_KOHJO_GAKU"     '最低保証料率控除後額
''''------------<Modify End   azuma 2007/01/05 > -----------------------
'''
''''------------<Modify End   azuma 2007/01/23 > -----------------------
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
''''------------<Modify Start azuma 2007/04/17 (PH3)> -----------------------
'''    strSql = strSql & ",  SHUUSEIGAKU_SAIYOU_FLG"           '修正額採用フラグ
'''    strSql = strSql & ",  KAZEI_MAE_SEIKYU_SHUUSEIGAKU"     '課税前今回請求修正額
'''    strSql = strSql & ",  SHOHIZEI_SHUUSEIGAKU"             '消費税修正額
'''    strSql = strSql & ",  KAZEI_ATO_SEIKYU_SHUUSEIGAKU"     '課税後今回請求修正額
''''------------<Modify End   azuma 2007/04/17 (PH3)> -----------------------
'''
'''    func_InsSelTablesSql2 = strSql
'''End Function
'''
'''
'''
'''
'''
''''顧問料計算結果(kyk_komonryoh_keisan_kekka)
''''*************************************************************************
''''関数名　　：顧問料計算結果(kyk_komonryoh_keisan_kekka)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2006/08/23 SRA Y.Azuma    変更     テーブル修正対応(按分追加)
''''更新履歴　：2006/10/13 SRA Y.Azuma    変更     顧問料計算結果テーブル・カラム追加対応
''''更新履歴　：2007/01/05 SRA Y.Azuma    変更     (PH2)PH2テーブル変更対応
''''更新履歴　：2007/01/23 SRA Y.Azuma    変更     (仕変)PH2連No.2 テーブルカラム順変更対応
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql3(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"                     '口座番号
'''    strSql = strSql & ",  " & lngId                     '請求期間ID
'''    strSql = strSql & ",  SHISAN_BUNRUI"                '資産分類
'''    strSql = strSql & ",  SHISAN_CODE"                  '資産コード
''''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
''''    strSql = strSql & ",  RATE_TEKIYO_KIKAN_ID"
''''------------<Modify End   azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  HIZUKE_SHURUI"                '日付種類
'''    strSql = strSql & ",  KEISAN_TO_YMD"                '計算ＴＯ日付
''''------------<Modify Start azuma 2006/10/13 > -----------------------
'''    strSql = strSql & ",  KEISANSHO_KIKAN_FROM"         '計算期間FROM
'''    strSql = strSql & ",  KEISANSHO_KIKAN_TO"           '計算期間TO
'''    strSql = strSql & ",  KEISANSHO_KIKAN_NISSU"        '計算期間日数
''''------------<Modify End   azuma 2006/10/13 > -----------------------
'''
'''    strSql = strSql & ",  NEN_NISSU"                    '1年日数
''''------------<Modify Start azuma 2006/08/23 > -----------------------
'''    strSql = strSql & ",  ANBUN_MAE_MARUME_MAE_KOMONRYOH"  '
'''    strSql = strSql & ",  ANBUN_MAE_MARUME_GO_KOMONRYOH"  '
'''    strSql = strSql & ",  ANBUN_GO_MARUME_MAE_KOMONRYOH"  '
'''    strSql = strSql & ",  ANBUN_GO_MARUME_GO_KOMONRYOH"  '
''''    strSql = strSql & ",  MARUME_MAE_SHISAN_KOMONRYOH"  '
''''    strSql = strSql & ",  MARUME_ATO_SHISAN_KOMONRYOH"  '
''''------------<Modify End   azuma 2006/08/23 > -----------------------
'''
'''    strSql = strSql & ",  KARI_KEISAN_FLG"              '
'''
''''------------<Modify Start azuma 2007/01/23 > -----------------------
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
''''------------<Modify Start azuma 2007/01/05 > -----------------------
'''    strSql = strSql & ",  KAKEMEGO_KAZEIMAE_KOMONRYOH"  '掛け目後課税前投資顧問料
'''    strSql = strSql & ",  KAZEIMAE_SEIKOH_HOHSHUH"      '課税前成功報酬
'''    strSql = strSql & ",  KASANGO_KAZEIMAE_KOMONRYOH"   '加算後課税前投資顧問料
'''    strSql = strSql & ",  KAKEME_MOJI"                  '掛け目文字列
'''    strSql = strSql & ",  KAKEME"                       '掛け目
''''------------<Modify End   azuma 2007/01/05 > -----------------------
''''------------<Modify End   azuma 2007/01/23 > -----------------------
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
'''    strSql = strSql & ",  SHISAN_ANBUN_GO_KOMONRYOH"        '期間按分前丸め前資産按分後顧問料
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
'''    func_InsSelTablesSql3 = strSql
'''End Function
'''
'''
'''
'''
'''
''''未収管理(kyk_mishu_kanri)
''''*************************************************************************
''''関数名　　：未収管理(kyk_mishu_kanri)DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId           I       請求期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2006/08/16 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2006/10/16 SRA Y.Azuma    変更     テーブル修正対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql4(ByVal lngId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  KEISAN_KIKAN_FROM"    '<---- Modify azuma 2006/08/16
'''    strSql = strSql & ",  KEISAN_KIKAN_TO"      '<---- Modify azuma 2006/10/16
''''    strSql = strSql & ",  KEISANU_KIKAN_TO"     '<---- Modify azuma 2006/08/16
''''------------<Modify Start azuma 2006/08/11 > -----------------------
'''    strSql = strSql & ",  NAM_TOHGETSU_NYUKINGAKU_SUM"
'''    strSql = strSql & ",  KOMONRYOH_MISHU_SEIKYUZUMI"
'''    strSql = strSql & ",  KOMONRYOH_MISHU_MISEIKYU"
'''    strSql = strSql & ",  KOMONRYOH_MISHU_SHOHKEI"
'''    strSql = strSql & ",  T21_MISHU_SEIKYUZUMI"
'''    strSql = strSql & ",  T21_MISHU_MISEIKYU"
'''    strSql = strSql & ",  T21_MISHU_SHOHKEI"
'''    strSql = strSql & ",  AB_MISHU_SEIKYUZUMI"
'''    strSql = strSql & ",  AB_MISHU_MISEIKYU"
'''    strSql = strSql & ",  AB_MISHU_SHOHKEI"
''''    strSql = strSql & ",  NAM_TOHGETSU_NYUKINGAKU_SUM"
''''    strSql = strSql & ",  KOMONRYOH_MISHU_SEIKYUZUMI"
''''    strSql = strSql & ",  KOMONRYOH_MISHU_MISEIKYU"
''''    strSql = strSql & ",  T21_MISHU_SEIKYUZUMI"
''''    strSql = strSql & ",  T21_MISHU_MISEIKYU"
''''    strSql = strSql & ",  AB_MISHU_SEIKYUZUMI"
''''    strSql = strSql & ",  AB_MISHU_MISEIKYU"
''''------------<Modify End   azuma 2006/08/11 > -----------------------
'''    func_InsSelTablesSql4 = strSql
'''End Function
'''
'''
'''
'''
'''
''''計算基礎数値合計(kyk_keisan_kiso_suchi_sum)
''''*************************************************************************
''''関数名　　：計算基礎数値合計(kyk_keisan_kiso_suchi_sum)
''''           DirectInsert SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql5(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  SHISAN_BUNRUI"
'''    strSql = strSql & ",  SHISAN_CODE"
''''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
''''    strSql = strSql & ",  RATE_TEKIYO_KIKAN_ID"
''''------------<Modify End   azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  KEISAN_KISO_SUCHI_SUM"
'''    strSql = strSql & ",  KIKAN_SU"
'''    strSql = strSql & ",  KICHU_HEIKIN_GAKU"
'''    strSql = strSql & ",  KARI_DATA_FLG"
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
'''
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
'''    strSql = strSql & ",  SHISAN_ANBUN_GO_GAKU"             '資産按分後期中平均額
'''    strSql = strSql & ",  KICHU_HEIKIN_RUIKEI_GAKU"         '期中平均累計額
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
'''    func_InsSelTablesSql5 = strSql
'''End Function
'''
'''
'''
'''
'''
''''顧問料計算結果明細(kyk_komonryoh_keisan_meisai)
''''*************************************************************************
''''関数名　　：顧問料計算結果明細(kyk_komonryoh_keisan_meisai)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2006/09/06 SRA Y.Azuma    変更     カラム追加対応
''''更新履歴　：2007/01/05 SRA Y.Azuma    変更     (PH2)PH2テーブル変更対応
''''更新履歴　：2007/01/23 SRA Y.Azuma    変更     (仕変)PH2連No.2 テーブルカラム順変更対応
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''*************************************************************************
'''Private Function func_InsSelTablesSql6(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  SHISAN_BUNRUI"        '<------------ Modify azuma 2006/08/11
'''    strSql = strSql & ",  SHISAN_CODE"          '<------------ Modify azuma 2006/08/11
''''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
''''    strSql = strSql & ",  RATE_TEKIYO_KIKAN_ID"
''''------------<Modify End   azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  RATE_TABLE_NO"
'''    strSql = strSql & ",  KINGAKU_FROM"
'''    strSql = strSql & ",  KINGAKU_TO"
'''    strSql = strSql & ",  KINGAKU_MOJI"             '<------------ Modify azuma 2006/09/06
'''    strSql = strSql & ",  RATE_KINGAKU"
'''    strSql = strSql & ",  RATE_KINGAKU_KBN"
'''    strSql = strSql & ",  RATE_KINGAKU_MOJI"        '<------------ Modify azuma 2006/09/06
'''
'''    strSql = strSql & ",  KICHU_HEIKIN_GAKU"        '<------------ Modify azuma 2006/08/11
'''    strSql = strSql & ",  KOMONRYOH"
'''    strSql = strSql & ",  KIKAN_ANBUN_KOMONRYOH"    '<------------ Modify azuma 2006/08/11
'''
''''------------<Modify Start azuma 2007/01/23 > -----------------------
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
''''------------<Modify Start azuma 2007/01/05 > -----------------------
'''    strSql = strSql & ",  KAKEMEGO_RATE_KINGAKU_MOJI"   '掛け目後料率・金額文字列
''''------------<Modify End   azuma 2007/01/05 > -----------------------
'''
''''------------<Modify End   azuma 2007/01/23 > -----------------------
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
'''    func_InsSelTablesSql6 = strSql
'''End Function
'''
'''
'''
'''
'''
''''計算基礎数値(kyk_keisan_kiso_suchi)
''''*************************************************************************
''''関数名　　：計算基礎数値(kyk_keisan_kiso_suchi)DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql7(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  SHISAN_BUNRUI"
'''    strSql = strSql & ",  SHISAN_CODE"
''''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
''''    strSql = strSql & ",  RATE_TEKIYO_KIKAN_ID"
''''------------<Modify End   azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  KIJUN_YMD"
'''    strSql = strSql & ",  KEISAN_KISO_SUCHI"
'''    strSql = strSql & ",  KARI_DATA_FLG"
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
'''
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
'''    func_InsSelTablesSql7 = strSql
'''End Function
'''
'''
'''
'''
'''
''''計算基礎数値・資産時価対応(kyk_keisankiso_shisanjika)
''''*************************************************************************
''''関数名　　：計算基礎数値・資産時価対応(kyk_keisankiso_shisanjika)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
''''更新履歴　：2006/08/10 SRA Y.Azuma    変更     他テーブル料率適用期間IDの更新追加(No.42)
''''更新履歴　：2006/08/11 SRA Y.Azuma    変更     テーブル修正対応
''''更新履歴　：2007/03/14 SRA H.Anpo     PH3対応
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql8(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
''''------------<Modify Start azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
''''    strSql = strSql & ",  RATE_TEKIYO_KIKAN_ID"
''''------------<Modify End   azuma 2006/08/10 No.042> -----------------------
'''    strSql = strSql & ",  SHISAN_BUNRUI"
'''    strSql = strSql & ",  SHISAN_CODE"
'''    strSql = strSql & ",  KEISAN_KISO_SUCHI_KIJUN_YMD"
'''    strSql = strSql & ",  SHISAN_JIKA_KIJUN_YMD"
''''    strSql = strSql & ",  PX_SHINTAKU_KBN" '<------------ Modify azuma 2006/08/11
'''
''''*** 2007/03/14 PH3対応 Added By H.Anpo Start
'''    strSql = strSql & "     ,TOHROKU_YMD,"
'''    strSql = strSql & "     SYSDATE,"
'''    strSql = strSql & "     '" & UPDATE_PGM_ID & "',"
'''    strSql = strSql & "     '" & UPDATE_USER & "',"
'''    strSql = strSql & "     '0'"
'''
'''    strSql = strSql & ",  KEISAN_FROM_YMD"                  '計算FROM日
''''*** 2007/03/14 PH3対応 Added By H.Anpo End
'''
'''    func_InsSelTablesSql8 = strSql
'''End Function
'''
'''
'''
''''*************************************************************************
''''関数名　　：T21調整資産委託者報酬額(KYK_T21_HOHSHU_GAKU)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/10/06 SRA Y.Azuma    新規作成
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql9(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "  KOHZA_NO               "
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & " ,HIZUKE_SHURUI          "
'''    strSql = strSql & " ,KEISAN_TO_YMD          "
'''    strSql = strSql & " ,SHISAN_BUNRUI          "
'''    strSql = strSql & " ,SHISAN_CODE            "
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
'''    strSql = strSql & " ,ITAKUSHA_HOHSHU_GAKU   "
'''    strSql = strSql & " ,ITAKUSHA_HOHSHU_RITSU  "
'''    strSql = strSql & " ,KARI_DATA_FLG          "
'''
'''    func_InsSelTablesSql9 = strSql
'''End Function
'''
'''
''''*************************************************************************
''''関数名　　：T21調整資産委託者報酬額明細(KYK_T21_HOHSHU_GAKU_MEISAI)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/10/06 SRA Y.Azuma    新規作成
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql10(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "  KOHZA_NO                       "
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & " ,HIZUKE_SHURUI                  "
'''    strSql = strSql & " ,KEISAN_TO_YMD                  "
'''    strSql = strSql & " ,SHISAN_BUNRUI                  "
'''    strSql = strSql & " ,SHISAN_CODE                    "
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
'''    strSql = strSql & " ,KIJUN_YMD                      "
'''    strSql = strSql & " ,BAIBAI_KUCHISU                 "
'''    strSql = strSql & " ,ZANDAKA_KUCHISU                "
'''    strSql = strSql & " ,KOHZA_ITAKUSHA_HOHSHU_GAKU     "
'''    strSql = strSql & " ,ZENTAI_KUCHISU                 "
'''    strSql = strSql & " ,ZENTAI_ITAKUSHA_HOHSHU_GAKU    "
'''    strSql = strSql & " ,KARI_DATA_FLG                  "
'''    func_InsSelTablesSql10 = strSql
'''End Function
'''
'''
''''*************************************************************************
''''関数名　　：T21調整資産委託者報酬額月次(KYK_T21_HOHSHU_GETSU)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/10/06 SRA Y.Azuma    新規作成
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql11(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "  KOHZA_NO               "
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & " ,HIZUKE_SHURUI          "
'''    strSql = strSql & " ,KEISAN_TO_YMD          "
'''    strSql = strSql & " ,SHISAN_BUNRUI          "
'''    strSql = strSql & " ,SHISAN_CODE            "
'''    strSql = strSql & ",  " & lngTekiyohKikanId         '料率適用期間ID
'''    strSql = strSql & " ,KIJUN_YM               "
'''    strSql = strSql & " ,ITAKUSHA_HOHSHU_GAKU   "
'''
'''    func_InsSelTablesSql11 = strSql
'''End Function
'''
''''*************************************************************************
''''関数名　　：合成料率(KYK_GOHSEI_RATE)
''''           DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId               I       請求期間ID(採番)
''''           lngTekiyohKikanId   I       料率適用期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2006/10/24 SRA Y.Azuma    新規作成
''''更新履歴　：2006/10/24 SRA Y.Azuma    変更     計算結果が正しく引き継がれない(連No.5)
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql12(ByVal lngId As Long, ByVal lngTekiyohKikanId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "  KOHZA_NO               "
'''    strSql = strSql & ", " & lngId
'''    strSql = strSql & ", " & lngTekiyohKikanId         '料率適用期間ID
'''    strSql = strSql & " ,RATE_TABLE_NO          "
'''    strSql = strSql & " ,GOHSEI_RATE            "
'''
'''    func_InsSelTablesSql12 = strSql
'''End Function
'''
'''
''''前受管理(kyk_mishu_kanri)
''''*************************************************************************
''''関数名　　：未収管理(kyk_maeuke_kanri)DirectInsert　SQL作成処理
''''
''''引　　数　：
''''           lngId           I       請求期間ID(採番)
''''
''''戻り値　　：なし
''''
''''機能説明　：SQLの作成を行う
''''
''''更新履歴　：2007/03/14 SRA H.Anpo    新規作成
''''
''''*************************************************************************
'''Private Function func_InsSelTablesSql13(ByVal lngId As Long) As String
'''    Dim strSql As String
'''
'''    strSql = ""
'''    strSql = strSql & "   KOHZA_NO"
'''    strSql = strSql & ",  " & lngId
'''    strSql = strSql & ",  HIZUKE_SHURUI"
'''    strSql = strSql & ",  KEISAN_TO_YMD"
'''    strSql = strSql & ",  KEISAN_KIKAN_FROM"
'''    strSql = strSql & ",  KEISAN_KIKAN_TO"
'''    strSql = strSql & ",  MAEUKE_KOMONRYOH"
'''    strSql = strSql & ",  KOMONRYOH_KEIJOHGAKU"
'''    strSql = strSql & ",  SEIKYUZUMI_MISHUGAKU"
'''    strSql = strSql & ",  TOHGETSU_NYUKINGAKU"
'''
'''    func_InsSelTablesSql13 = strSql
'''End Function
'------------<Modify End   azuma 2007/04/27 (PH3)> -----------------------




'検索時請求期間ID取得
'*************************************************************************
'関数名　　：検索時請求期間ID取得
'
'引　　数　：なし
'
'戻り値　　：検索時請求期間ID
'
'機能説明　：検索時請求期間IDを取得する
'
'更新履歴　：2006/07/13 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_GetKikanIdFirst() As Long

    Dim lngKikanIdFirst     As Long

    If IsNull(ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時請求期間ID")) = False Then
        If IsNumeric(ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時請求期間ID")) Then
            lngKikanIdFirst = CLng(ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時請求期間ID"))
        Else
            lngKikanIdFirst = -1
        End If
    Else
        lngKikanIdFirst = -1
    End If

    func_GetKikanIdFirst = lngKikanIdFirst

End Function


'*************************************************************************
'関数名　　：料率コードの配列のインデックス番号取得関数
'
'引　　数　：なし
'
'戻り値　　：インデックス番号
'
'機能説明　：料率コードと一致する料率コードの配列のインデックス番号を返す
'
'更新履歴　：2006/08/01 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_KK33DankaiCnt(ByVal strCode As String, ByRef strKK33Dankai() As String) As Long

    Dim lngCnt  As Long
    
    
    For lngCnt = 0 To UBound(strKK33Dankai)
        If Mid(strKK33Dankai(lngCnt, 0), 1, 3) = strCode Then
            Exit For
        End If
    Next lngCnt
    
'    If lngCnt > UBound(strKK33Dankai) Then
'    'Error
'        func_KK33DankaiCnt = 0
'    Else
        func_KK33DankaiCnt = lngCnt
'    End If

End Function



'*************************************************************************
'関数名　　：料率テーブル抽出処理
'
'引　　数　：
'           strKK33Dankai       O       料率コード配列
'
'戻り値　　：Boolean
'
'機能説明　：KK33テーブルからチェック用に料率を取得し配列に設定する。
'
'更新履歴　：2006/07/05 SRA Y.Azuma    新規作成　N7の範囲・料率チェック用
'更新履歴　：2007/11/09 SRA Y.Azuma    変更     (PH4)KK33廃止
'
'*************************************************************************
Private Function func_GetKK33Dankai(ByRef strKK33Dankai() As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim lngColCnt   As Long
    
    func_GetKK33Dankai = False
    
    strSql = ""
    strSql = strSql & " SELECT"
'------------<Modify Start azuma 2007/11/09 (PH4)> ★★★☆-----------------------
    strSql = strSql & "     RATE_CODE||':'||NVL(RATE_NAME,''),"
''    strSql = strSql & "     RYORITSU_CD||':'||NVL(RYORITSU_MEI,''),"
'------------<Modify End   azuma 2007/11/09 (PH4)> ★★★☆-----------------------
    strSql = strSql & "     NVL(KINGAKU_FROM_01,'')||':'||NVL(KINGAKU_TO_01,'') W01,"
    strSql = strSql & "     NVL(KINGAKU_FROM_02,'')||':'||NVL(KINGAKU_TO_02,'') W02,"
    strSql = strSql & "     NVL(KINGAKU_FROM_03,'')||':'||NVL(KINGAKU_TO_03,'') W03,"
    strSql = strSql & "     NVL(KINGAKU_FROM_04,'')||':'||NVL(KINGAKU_TO_04,'') W04,"
    strSql = strSql & "     NVL(KINGAKU_FROM_05,'')||':'||NVL(KINGAKU_TO_05,'') W05,"
    strSql = strSql & "     NVL(KINGAKU_FROM_06,'')||':'||NVL(KINGAKU_TO_06,'') W06,"
    strSql = strSql & "     NVL(KINGAKU_FROM_07,'')||':'||NVL(KINGAKU_TO_07,'') W07,"
    strSql = strSql & "     NVL(KINGAKU_FROM_08,'')||':'||NVL(KINGAKU_TO_08,'') W08,"
    strSql = strSql & "     NVL(KINGAKU_FROM_09,'')||':'||NVL(KINGAKU_TO_09,'') W09,"
    strSql = strSql & "     NVL(KINGAKU_FROM_10,'')||':'||NVL(KINGAKU_TO_10,'') W10,"
    strSql = strSql & "     NVL(KINGAKU_FROM_11,'')||':'||NVL(KINGAKU_TO_11,'') W11,"
    strSql = strSql & "     NVL(KINGAKU_FROM_12,'')||':'||NVL(KINGAKU_TO_12,'') W12,"
    strSql = strSql & "     NVL(KINGAKU_FROM_13,'')||':'||NVL(KINGAKU_TO_13,'') W13,"
    strSql = strSql & "     NVL(KINGAKU_FROM_14,'')||':'||NVL(KINGAKU_TO_14,'') W14,"
    strSql = strSql & "     NVL(KINGAKU_FROM_15,'')||':'||NVL(KINGAKU_TO_15,'') W15,"
    strSql = strSql & "     NVL(KINGAKU_FROM_16,'')||':'||NVL(KINGAKU_TO_16,'') W16,"
    strSql = strSql & "     NVL(KINGAKU_FROM_17,'')||':'||NVL(KINGAKU_TO_17,'') W17,"
    strSql = strSql & "     NVL(KINGAKU_FROM_18,'')||':'||NVL(KINGAKU_TO_18,'') W18,"
    strSql = strSql & "     NVL(KINGAKU_FROM_19,'')||':'||NVL(KINGAKU_TO_19,'') W19,"
    strSql = strSql & "     NVL(KINGAKU_FROM_20,'')||':'||NVL(KINGAKU_TO_20,'') W20,"
    strSql = strSql & "     ABS(NVL(RITSU_GAKU_01,0)) + ABS(NVL(RITSU_GAKU_02,0)) + ABS(NVL(RITSU_GAKU_03,0)) + ABS(NVL(RITSU_GAKU_04,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_GAKU_05,0)) + ABS(NVL(RITSU_GAKU_06,0)) + ABS(NVL(RITSU_GAKU_07,0)) + ABS(NVL(RITSU_GAKU_08,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_GAKU_09,0)) + ABS(NVL(RITSU_GAKU_10,0)) + ABS(NVL(RITSU_GAKU_11,0)) + ABS(NVL(RITSU_GAKU_12,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_GAKU_13,0)) + ABS(NVL(RITSU_GAKU_14,0)) + ABS(NVL(RITSU_GAKU_15,0)) + ABS(NVL(RITSU_GAKU_16,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_GAKU_17,0)) + ABS(NVL(RITSU_GAKU_18,0)) + ABS(NVL(RITSU_GAKU_19,0)) + ABS(NVL(RITSU_GAKU_20,0)) GAKU ,"
    strSql = strSql & "     ABS(NVL(RITSU_01,0)) + ABS(NVL(RITSU_02,0)) + ABS(NVL(RITSU_03,0)) + ABS(NVL(RITSU_04,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_05,0)) + ABS(NVL(RITSU_06,0)) + ABS(NVL(RITSU_07,0)) + ABS(NVL(RITSU_08,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_09,0)) + ABS(NVL(RITSU_10,0)) + ABS(NVL(RITSU_11,0)) + ABS(NVL(RITSU_12,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_13,0)) + ABS(NVL(RITSU_14,0)) + ABS(NVL(RITSU_15,0)) + ABS(NVL(RITSU_16,0)) "
    strSql = strSql & "   + ABS(NVL(RITSU_17,0)) + ABS(NVL(RITSU_18,0)) + ABS(NVL(RITSU_19,0)) + ABS(NVL(RITSU_20,0)) RITSU"
    strSql = strSql & " FROM"
'------------<Modify Start azuma 2007/11/09 (PH4)> ★★★☆-----------------------
    strSql = strSql & "     KYK_RATE"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SAKUJO_FLG = '0' "
    strSql = strSql & " ORDER BY RATE_CODE"
'    strSql = strSql & "     KK33"
'    strSql = strSql & " ORDER BY RYORITSU_CD"
'------------<Modify End   azuma 2007/11/09 (PH4)> ★★★☆-----------------------
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)

    ReDim strKK33Dankai(lngRow, 22)     '<------------ Modify azuma 2006/08/01 No.032
    
    '取得データを配列に設定
    For lngCnt = 0 To lngRow - 1
        For lngColCnt = 0 To UBound(strKK33Dankai, 2)
            strKK33Dankai(lngCnt, lngColCnt) = CStr(vData(lngColCnt, lngCnt))
        Next
    Next lngCnt
    
    Erase vData
    
    func_GetKK33Dankai = True
    
    Exit Function
ErrHandler:
    func_GetKK33Dankai = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetKK33Dankai", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    Erase strKK33Dankai

End Function




'*************************************************************************
'関数名　　：削除対象の料率適用期間データ取得処理
'
'引　　数　：
'           lngKikanIdFirst       I       削除対象請求期間ID
'           typTekiyohKikan()     O       削除対象の料率適用期間データ一覧
'
'戻り値　　：なし
'
'機能説明　：検索時の請求期間IDで論理削除対象の料率適用期間データを一覧取得する。
'           ※その他テーブルの料率適用期間ID更新の比較用に必要(No.042対応)
'
'更新履歴　：2006/08/10 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_GetRateTekiyohKikan(ByVal lngKikanIdFirst As Long _
                                        , ByRef typTekiyohKikan() As typRateTekiyohKikan) As Boolean

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim lngCnt                  As Long

    func_GetRateTekiyohKikan = False

    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "      KOHZA_NO"
    strSql = strSql & "     ,SEIKYU_KIKAN_ID"
    strSql = strSql & "     ,SHISAN_BUNRUI"
    strSql = strSql & "     ,SHISAN_CODE"
    strSql = strSql & "     ,RATE_TEKIYOH_KIKAN_ID"
    strSql = strSql & "     ,RATE_TEKIYOH_KIKAN_FROM"
    strSql = strSql & "     ,RATE_TEKIYOH_KIKAN_TO"
    strSql = strSql & "     ,RATE_TEKIYOH_KIKAN_NISSU"
    strSql = strSql & "     ,PX_SHINTAKU_KBN"
    strSql = strSql & "     ,KISO_SUCHI_KEISAN_HOHHOH"
    strSql = strSql & "     ,RATE_CODE"
    strSql = strSql & "     ,KEISAN_HOHHOH"
    strSql = strSql & "     ,SHISAN_WARIAI"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_RATE_TEKIYOH_KIKAN"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SEIKYU_KIKAN_ID=" & lngKikanIdFirst
    
    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            Erase vData
            Exit Function
        Else
            
            ReDim typTekiyohKikan(lngRow)
            For lngCnt = 0 To lngRow - 1
                With typTekiyohKikan(lngCnt + 1)
                    .KOHZA_NO = CStr(vData(0, lngCnt))
                    .SEIKYU_KIKAN_ID = CStr(vData(1, lngCnt))
                    .SHISAN_BUNRUI = CStr(vData(2, lngCnt))
                    .SHISAN_CODE = CStr(vData(3, lngCnt))
                    .RATE_TEKIYOH_KIKAN_ID = CStr(vData(4, lngCnt))
                    .RATE_TEKIYOH_KIKAN_FROM = CStr(vData(5, lngCnt))
                    .RATE_TEKIYOH_KIKAN_TO = CStr(vData(6, lngCnt))
                    .RATE_TEKIYOH_KIKAN_NISSU = CStr(vData(7, lngCnt))
                    .PX_SHINTAKU_KBN = CStr(vData(8, lngCnt))
                    .KISO_SUCHI_KEISAN_HOHHOH = CStr(vData(9, lngCnt))
                    .RATE_CODE = CStr(vData(10, lngCnt))
                    .KEISAN_HOHHOH = CStr(vData(11, lngCnt))
                    .SHISAN_WARIAI = CStr(vData(12, lngCnt))
                    .RATE_TEKIYOH_KIKAN_ID_NEW = ""
                End With
            Next lngCnt
        
        
        End If
    Else
        Exit Function
    End If

    Erase vData

    func_GetRateTekiyohKikan = True

    Exit Function

ErrorSection:

    func_GetRateTekiyohKikan = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetRateTekiyohKikan", Err.Number, Err.Description)
    On Error GoTo 0
    
    Erase vData

'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：料率一覧取得処理
'
'引　　数　：
'           strRyoritsuCd       I       料率コード
'           strResult           O       料率値(カンマ区切り)
'           strError            O       エラーコード
'
'戻り値　　：Boolean
'
'機能説明　：KK33テーブルから合成料率用に料率を取得する。
'
'更新履歴　：2006/08/16 SRA Y.Azuma    新規作成　合成料率登録機能追加
'更新履歴　：2006/12/15 SRA Y.Azuma    変更      料率を1/100追加
'更新履歴　：2007/11/09 SRA Y.Azuma    変更     (PH4)KK33廃止
'
'*************************************************************************
Private Function func_GetRyoritsu(ByVal strRyoritsuCd As String _
                                , ByRef strResult As String _
                                , ByRef strError As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim strErrCode  As String
    Dim blnRet      As Boolean
    Dim lngCnt      As Long
    Dim lngIchi     As Long
    Dim lngCutLen   As Long
    Dim strBuff     As String
    
    func_GetRyoritsu = False
    
    strSql = ""
'------------<Modify Start azuma 2006/12/15 > -----------------------
    strSql = strSql & " SELECT  "
    strSql = strSql & "               TO_CHAR(NVL(RITSU_01/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_02/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_03/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_04/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_05/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_06/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_07/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_08/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_09/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_10/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_11/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_12/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_13/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_14/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_15/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_16/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_17/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_18/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_19/100,0),'FM0.0999999')"
    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_20/100,0),'FM0.0999999')"
'    strSql = strSql & "               TO_CHAR(NVL(RITSU_01,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_02,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_03,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_04,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_05,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_06,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_07,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_08,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_09,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_10,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_11,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_12,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_13,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_14,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_15,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_16,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_17,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_18,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_19,0),'FM0.0999999')"
'    strSql = strSql & "       ||','|| TO_CHAR(NVL(RITSU_20,0),'FM0.0999999')"
'------------<Modify End   azuma 2006/12/15 > -----------------------
'------------<Modify Start azuma 2007/11/09 (PH4)> ★★★☆-----------------------
''    strSql = strSql & " FROM  KK33"
''    strSql = strSql & " WHERE RYORITSU_CD = '" & strRyoritsuCd & "'"
    strSql = strSql & " FROM  KYK_RATE"
    strSql = strSql & " WHERE RATE_CODE = '" & strRyoritsuCd & "'"
    strSql = strSql & "   AND SAKUJO_FLG = '0' "
'------------<Modify End   azuma 2007/11/09 (PH4)> ★★★☆-----------------------
    
    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    
    If blnRet = False Or lngRow = 0 Then
    
        If Trim(strErrCode) <> "" Then
            strError = strErrCode
        End If
        
        Exit Function
    End If
    
    '取得データを引数に設定
    strResult = CStr(vData(0, 0))
    
    '後ろの無駄な料率(0.0)を削除する。
    For lngCnt = 1 To 19
        lngIchi = InStrRev(strResult, ",")
        If lngIchi <> 0 Then
            lngCutLen = Len(strResult) - lngIchi
            strBuff = Mid(strResult, lngIchi + 1, lngCutLen)
            If strBuff = "0.0" Then
                strResult = Mid(strResult, 1, lngIchi - 1)
            Else
                Exit For
            End If
        End If
        
    Next lngCnt
    
    
    Erase vData
    
    func_GetRyoritsu = True
    
    Exit Function
ErrHandler:
    func_GetRyoritsu = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetRyoritsu", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData

End Function


'*************************************************************************
'関数名　　：合成料率の計算とテーブル登録処理
'
'引　　数　：
'           strKohzaNo      I       口座番号
'           lngId           I       請求期間ID
'           lngIdSeqPre     I       料率適用期間ID
'           strN6Wariai     I/O     N6型資産割合のリスト(カンマ区切り)
'           strRyoritu      I/O     料率コードリスト(カンマ区切り、セミコロン区切り)
'           strError        O       SQLエラーコード
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/17 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function sub_GohseiRateMain(ByVal strKohzaNo As String _
                                  , ByVal lngId As Long _
                                  , ByVal lngIdSeqPre As Long _
                                  , ByRef strN6Wariai As String _
                                  , ByRef strRyoritu As String _
                                  , ByRef strError As String) As Boolean

    Dim strGohseiRate   As String
    Dim blnRet          As Boolean
    
    sub_GohseiRateMain = False
    
    strGohseiRate = ""
    
    blnRet = False
    If Trim(strN6Wariai) <> "" Then
    
        '複数件存在したら合成料率を求める
        If InStr(1, strN6Wariai, ",") <> 0 Then
        
            '合成料率計算
            blnRet = func_CalcGohseiRate(strN6Wariai, strRyoritu, strGohseiRate)
            If blnRet = False Then
                'MsgBox ("合成料率計算に失敗しました。")
                Call gfunc_ErrorMsg(3, 1585, "")
                Exit Function
            End If
        Else
            strGohseiRate = strRyoritu
        End If
        
        blnRet = False
        '料率適用期間IDが直前と異なる場合合成料率の登録を行う
        blnRet = func_InsGohseiRate(strKohzaNo, lngId, lngIdSeqPre, strGohseiRate, strError)
        If blnRet = False Then
            'MsgBox ("合成料率登録に失敗しました。")
            Call gfunc_ErrorMsg(3, 1586, "合成料率登録")
            Exit Function
        End If
        strN6Wariai = ""
        strRyoritu = ""
    
    End If

    sub_GohseiRateMain = True


End Function

'*************************************************************************
'関数名　　：合成料率の計算呼出処理
'
'引　　数　：
'           strN6Wariai     I       N6型資産割合のリスト(カンマ区切り)
'           strRyoritu      I       料率コードリスト(カンマ区切り、セミコロン区切り)
'           strGohseiRate   O       合成料率リスト(カンマ区切り)
'
'戻り値　　：
'
'機能説明　：ストアド(JAVA)を起動して結果をパラメータ
' 資産割合のリス例："0.5,0.5"
' 料率コードリスト："0.42,0.27,0.22,0.2,0.15,0.12;0.42,0.27,0.22,0.2,0.15,0.12"
' 合成料率リスト例："0.4200,0.2700,0.2200,0.2000,0.1500,0.1200"
' 【実行されるストアド】
'    PROCEDURE SP_GOHSEI_RYOHRITSU_SANSHUTSU(
'        shisanRate_In       IN  CHAR,
'        stepRate_In         IN  CHAR,
'        compRate_Out        OUT CHAR,
'        pn_err_status       OUT NUMBER,
'        ps_err_message      OUT VARCHAR2
'    )
'    AS LANGUAGE JAVA NAME 'nam.keiyakukanri.komonryohsanshutsu.GohseiRyohritsuProcedure.getCompRate(
'        java.lang.String,
'        java.lang.String,
'        java.lang.String[],
'        int[],
'        java.lang.String []
'    )';
'更新履歴　：2006/08/17 SRA Y.Azuma    新規作成
'更新履歴　：2006/08/31 SRA Y.Azuma    変更     合成料率SP名変更対応
'
'*************************************************************************
Private Function func_CalcGohseiRate(ByVal strN6Wariai As String _
                                   , ByVal strRyoritu As String _
                                   , ByRef strGohseiRate As String) As Boolean
On Error GoTo ErrHandler
    
    func_CalcGohseiRate = False
    Dim strBuff As String * 1024
    
    Dim lngSpErrStatus       As Long
    Dim strSpErrMessage      As String
    
    
    Dim cmdCalcGohseiRate As ADODB.Command
   
    Set cmdCalcGohseiRate = New ADODB.Command
   
    'アクティブコネクションの設定
    Set cmdCalcGohseiRate.ActiveConnection = cnAdo
    
    'コマンドオブジェクトのタイプ設定
    cmdCalcGohseiRate.CommandType = adCmdStoredProc
    
    'ストアドプロシージャ名設定
'------------<Modify Start azuma 2006/08/31 > -----------------------
    cmdCalcGohseiRate.CommandText = "SP_GOHSEI_RYOHRITSU_SANSHUTSU"
'    cmdCalcGohseiRate.CommandText = "GETCOMPRATE"
'------------<Modify End   azuma 2006/08/31 > -----------------------
    
    'パラメータ設定
    cmdCalcGohseiRate.Parameters.Append cmdCalcGohseiRate.CreateParameter("shisanRate_In" _
                                                                        , adLongVarWChar _
                                                                        , adParamInput _
                                                                        , LenB(strN6Wariai) _
                                                                        , strN6Wariai)
                                                                        
    cmdCalcGohseiRate.Parameters.Append cmdCalcGohseiRate.CreateParameter("stepRate_In" _
                                                                        , adLongVarWChar _
                                                                        , adParamInput _
                                                                        , LenB(strRyoritu) _
                                                                        , strRyoritu)
                                                                        
    cmdCalcGohseiRate.Parameters.Append cmdCalcGohseiRate.CreateParameter("compRate_Out" _
                                                                        , adLongVarWChar _
                                                                        , adParamOutput _
                                                                        , 1024 _
                                                                        , strBuff)
                                        
'------------<Modify Start azuma 2006/08/31 > -----------------------
    cmdCalcGohseiRate.Parameters.Append cmdCalcGohseiRate.CreateParameter("pn_err_status" _
                                                                        , adInteger _
                                                                        , adParamOutput _
                                                                        , _
                                                                        , lngSpErrStatus)
                                        
                                        
    cmdCalcGohseiRate.Parameters.Append cmdCalcGohseiRate.CreateParameter("ps_err_message" _
                                                                        , adLongVarWChar _
                                                                        , adParamOutput _
                                                                        , 2000 _
                                                                        , strSpErrMessage)
                                        
'------------<Modify End   azuma 2006/08/31 > -----------------------
                                        
                                        
    '実行
    cmdCalcGohseiRate.Execute
    
'------------<Modify Start azuma 2006/08/31 > -----------------------
    'ステータスの取得(0:正常、　-1:ワーニング、　-2:エラー)
    lngSpErrStatus = cmdCalcGohseiRate.Parameters.Item("pn_err_status").Value
    
    '結果の取得
    If lngSpErrStatus = 0 Then
        strGohseiRate = Trim(cmdCalcGohseiRate.Parameters.Item("compRate_Out").Value)
    Else
        If Not IsNull(cmdCalcGohseiRate.Parameters.Item("ps_err_message").Value) Then
            strSpErrMessage = Trim(cmdCalcGohseiRate.Parameters.Item("ps_err_message").Value)
        End If
        Call gfunc_ErrorMsg(3, 1589, "合成料率", strSpErrMessage & "(" & lngSpErrStatus & ")")
        Set cmdCalcGohseiRate = Nothing
        Exit Function
    End If
'------------<Modify End   azuma 2006/08/31 > -----------------------

    Set cmdCalcGohseiRate = Nothing

    
    func_CalcGohseiRate = True
    Exit Function
ErrHandler:
    func_CalcGohseiRate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CalcGohseiRate", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Set cmdCalcGohseiRate = Nothing


End Function

'合成料率テーブルの登録処理
'*************************************************************************
'関数名　　：
'
'引　　数　：
'           strKohzaNo      I       口座番号
'           lngId           I       請求期間ID
'           lngRateId     　I       料率適用期間ID
'           strGohseiRate 　I       合成料率リスト(カンマ区切り)
'           strError     　 O       SQLエラーコード
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/17 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_InsGohseiRate(ByVal strKohzaNo As String _
                                  , ByVal lngId As Long _
                                  , ByVal lngRateId As Long _
                                  , ByVal strGohseiRate As String _
                                  , ByRef strError As String) As Boolean
                                  
                                
On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim strRate()               As String
    Dim lngIchi                 As Long
    Dim lngStart                As Long
    
    func_InsGohseiRate = False
    
    Erase strRate
    
    lngStart = 1
    lngCnt = 0
    
    '合成料率の分解
    Do
        lngIchi = InStr(lngStart, strGohseiRate, ",")
        If lngIchi = 0 Then
            If lngStart < Len(strGohseiRate) Then
                lngIchi = Len(strGohseiRate) + 1
            Else
                Exit Do
            End If
        End If
        
        ReDim Preserve strRate(lngCnt)
        strRate(lngCnt) = Mid(strGohseiRate, lngStart, lngIchi - lngStart)
        lngStart = lngIchi + 1
        lngCnt = lngCnt + 1
        
        
    Loop

    '段階数分、登録を行う
    For lngCnt = 0 To UBound(strRate)
    
        strSql = ""
        strSql = strSql & " INSERT INTO KYK_GOHSEI_RATE ("
        strSql = strSql & " KOHZA_NO,"
        strSql = strSql & " SEIKYU_KIKAN_ID,"
        strSql = strSql & " RATE_TEKIYOH_KIKAN_ID,"
        strSql = strSql & " RATE_TABLE_NO,"
        strSql = strSql & " GOHSEI_RATE,"
        strSql = strSql & " TOHROKU_YMD,"
        strSql = strSql & " KOHSHIN_YMD,"
        strSql = strSql & " KOHSHIN_PGM_ID,"
        strSql = strSql & " KOHSHIN_TANTOHSHA,"
        strSql = strSql & " SAKUJO_FLG"
        strSql = strSql & " )"
        strSql = strSql & " VALUES"
        strSql = strSql & "   ("
        strSql = strSql & "'" & strKohzaNo & "'"
        strSql = strSql & "," & lngId
        strSql = strSql & "," & lngRateId
        strSql = strSql & "," & lngCnt + 1
'------------<Modify Start azuma 2006/12/15 > -----------------------
        strSql = strSql & "," & strRate(lngCnt) & "*100"
'        strSql = strSql & ",'" & strRate(lngCnt) & "'"
'------------<Modify End   azuma 2006/12/15 > -----------------------
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",SYSDATE"
        strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
        strSql = strSql & ",'" & UPDATE_USER & "'"
        strSql = strSql & ",'0' "
        strSql = strSql & " )"

        '実行
        blnRet = gclsdb.DoExequteSql(gcINSERT, strSql, vData, lngCol, lngRow, strErrCode)
        
        
        If blnRet = False Then
            If Trim(strErrCode) <> "" Then
                strError = strErrCode
            End If
            
            Exit Function
        End If
        
    Next lngCnt
    
    Erase vData
    

    func_InsGohseiRate = True

    Exit Function

ErrorSection:

    func_InsGohseiRate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsGohseiRate", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
                                
                                

End Function

'*************************************************************************
'関数名　　：
'
'引　　数　：
'           strData       I       チェック対象文字列
'           strChkStr     I       チェック対象文字
'
'戻り値　　：チェック後文字列
'
'機能説明　：チェック文字が存在した場合は、2個重ねる｡
'
'更新履歴　：2006/08/25 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function func_ChkQuoteshon(strData As String, _
                                  strChkStr As String) As String

On Error GoTo ErrSection


    Dim lngDataLen  As Long     'チェック文字列の文字数
    Dim lngCnt      As Long     'カウンタ
    Dim strString   As String   '変換後の文字列

    strString = ""

'*******************************************************
'* 関数開始　                                        　*
'*******************************************************

    'チェック文字が半角1文字以外はエラーとする。
    If LenB(StrConv(strChkStr, vbFromUnicode)) <> 1 Then
        Exit Function
    End If


    'チェック文字が存在しない場合は終了する。(正常終了)
    If InStr(strData, strChkStr) = 0 Then
        func_ChkQuoteshon = strData
        Exit Function
    End If

    'チェック文字列の文字数を取得する。
    lngDataLen = Len(strData)

    '1個目のチェック文字までを取得する。
    strString = Left(strData, InStr(strData, strChkStr) - 1)


    '1個目のチェック文字から最後まで検索する。
    For lngCnt = InStr(strData, strChkStr) To lngDataLen

        'チェック文字が1個あったら2個重ねる。
        If Mid(strData, lngCnt, 1) = strChkStr Then
            strString = strString & strChkStr & Mid(strData, lngCnt, 1)
        Else
            strString = strString & Mid(strData, lngCnt, 1)
        End If

    Next lngCnt

    '処理成功
    func_ChkQuoteshon = strString

    Exit Function

ErrSection:

    'エラーの場合
    func_ChkQuoteshon = strData

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "モジュールネーム", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：合成料率の登録済みチェック
'
'引　　数　：
'           lngId                   I     請求期間ID(新)
'           lngTekiyohKikanIdNew    I     料率適用期間ID(新)
'           blnDataFlg              O     データ有無フラグ
'
'戻り値　　：Boolean
'
'機能説明　：
'
'更新履歴　：2006/10/25 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function func_GetGohseiRate(ByVal lngId As Long _
                                  , ByVal lngTekiyohKikanIdNew As Long _
                                  , ByRef blnDataFlg As Boolean) As Boolean

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim lngKikanIdFirst         As Long         '検索時　請求期間ID

    func_GetGohseiRate = False
    
    strErrCode = ""
    Erase vData

    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     KOHZA_NO"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_GOHSEI_RATE"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SEIKYU_KIKAN_ID= " & lngId & " AND"
    strSql = strSql & "     RATE_TEKIYOH_KIKAN_ID= " & lngTekiyohKikanIdNew & " AND"
    strSql = strSql & "     SAKUJO_FLG='0'"
    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            'Error
            Exit Function
        End If
    Else
        Exit Function
    End If

    '存在の確認
    If lngRow > 0 Then
        blnDataFlg = True
    Else
        blnDataFlg = False
    End If
    
    
    Erase vData
    
    func_GetGohseiRate = True
    
    Exit Function

ErrorSection:

    func_GetGohseiRate = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetGohseiRate", Err.Number, Err.Description)
    On Error GoTo 0
    
    Erase vData
    
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function






'*************************************************************************
'関数名　　：請求書種類取得処理
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート(main)
'           CheckRow            I           チェック対象のシートの取得対象行番号
'
'戻り値　　：Boolean
'
'機能説明　：項目関連チェックPH3シートの表えを元に請求書種類を特定する
'
'更新履歴　：2007/03/14 SRA H.Anpo     新規作成
'更新履歴　：2007/06/11 SRA T.Ichikawa 変更     PH3.5対応
'
'*************************************************************************
'*** 2007/08/07 PH3.5対応 Modify By T.Ichikawa Start
'Public Function gfuncKeisan_GetSeikyushoShurui( _
'    ByRef TargetSheets As Object _
'  , ByRef CheckRow As Long _
') As Long

Public Function gfuncKeisan_GetSeikyushoShurui( _
    ByRef TargetSheets As Object _
  , ByRef CheckRow As Long _
) As String
'*** 2007/08/07 PH3.5対応 Modify By T.Ichikawa End

On Error GoTo ErrorSection

    gfuncKeisan_GetSeikyushoShurui = -1

    '請求書種類を判定
    With TargetSheets

'*** 2007/08/07 PH3.5対応 Added By T.Ichikawa Start
        'ゼロ円請求
        '平残断面区分(1:平残),０円請求書区分(1:０円請求書)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "1" _
        And Mid(Trim(.Range("ゼロ円請求書区分").Value), 1, 1) = "1" Then
            gfuncKeisan_GetSeikyushoShurui = "0"    '0:ゼロ円請求
            Exit Function
        End If
        
        '日次信託時価
        '平残断面区分(1:平残),基礎数値種類(2:信託時価),基礎数値計算方法(6:日次)
        'And Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "2" _

        
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "1" _
        And Mid(Trim(.Cells(CheckRow, 22).Value), 1, 1) = "6" Then
            gfuncKeisan_GetSeikyushoShurui = "7"    '7:日次信託時価
            Exit Function
        End If
        
        '時価算術平均
        '期初期末区分(1:期初を含む,2:期末を含む,期初期末を含む)
        If (Mid(Trim(.Cells(CheckRow, 30).Value), 1, 1) = "1" _
            Or Mid(Trim(.Cells(CheckRow, 30).Value), 1, 1) = "2" _
            Or Mid(Trim(.Cells(CheckRow, 30).Value), 1, 1) = "3") Then
            gfuncKeisan_GetSeikyushoShurui = "8"    '8:時価算術平均
            Exit Function
        End If
        
'*** 2007/06/11 PH3.5対応 Added By T.Ichikawa Start
        'N12
        '顧問料計算方法(5:N12型)
        If Mid(Trim(.Cells(CheckRow, 26).Value), 1, 1) = "5" Then
            gfuncKeisan_GetSeikyushoShurui = "A"    'A:顧客指定A(N12)
            Exit Function
        End If
'*** 2007/06/11 PH3.5対応 Added By T.Ichikawa End
        
        '顧客指定B
        '顧客指定区分(1:顧客指定)
        If Mid(Trim(.Cells(CheckRow, 33).Value), 1, 1) = "1" Then
            gfuncKeisan_GetSeikyushoShurui = "B"    'B:顧客指定B
            Exit Function
        End If
'*** 2007/08/07 PH3.5対応 Added By T.Ichikawa End
        
        'N11
        '顧問料計算方法(4:N11型)
        If Mid(Trim(.Cells(CheckRow, 26).Value), 1, 1) = "4" Then
            gfuncKeisan_GetSeikyushoShurui = 6      '6:N11
            Exit Function
        End If

        '元本平残
        '平残断面区分(1:平残),基礎数値種類(4:元本)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "1" _
        And Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "4" Then
            gfuncKeisan_GetSeikyushoShurui = 5      '5:元本平残
            Exit Function
        End If

        '元本断面B
        '平残断面区分(2:断面),前払後払区分(1:後払),基礎数値種類(4:元本)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "2" _
        And Mid(Trim(.Range("前払後払区分").Value), 1, 1) = "1" _
        And Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "4" Then
            gfuncKeisan_GetSeikyushoShurui = 4      '4:元本断面B
            Exit Function
        End If

        '元本断面A
        '平残断面区分(2:断面),前払後払区分(2:前払),基礎数値種類(4:元本)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "2" _
        And Mid(Trim(.Range("前払後払区分").Value), 1, 1) = "2" _
        And Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "4" Then
            gfuncKeisan_GetSeikyushoShurui = 3      '3:元本断面A
            Exit Function
        End If

        '時価断面
        '平残断面区分(2:断面),基礎数値種類(1:ＰＸ時価,2:信託時価)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "2" _
        And (Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "1" _
            Or Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "2") Then
            gfuncKeisan_GetSeikyushoShurui = 2      '2:時価断面
            Exit Function
        End If

        '時価平残
        '平残断面区分(1:平残),０円請求書区分(0:通常),基礎数値種類(1:ＰＸ時価,2:信託時価)
        '基礎数値計算方法(1:月末平均,2:月中平均,3:前月末平均,4:前月中平均)
        '顧問料計算方法(1:通常,2:N6型,3:N7型)
        '期初期末区分(0:含まない)
        '顧客指定区分(0:通常)
        If Mid(Trim(.Range("平残断面区分").Value), 1, 1) = "1" _
        And Mid(Trim(.Range("ゼロ円請求書区分").Value), 1, 1) = "0" _
        And (Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "1" _
            Or Mid(Trim(.Cells(CheckRow, 19).Value), 1, 1) = "2") _
        And (Mid(Trim(.Cells(CheckRow, 22).Value), 1, 1) = "1" _
            Or Mid(Trim(.Cells(CheckRow, 22).Value), 1, 1) = "2" _
            Or Mid(Trim(.Cells(CheckRow, 22).Value), 1, 1) = "3" _
            Or Mid(Trim(.Cells(CheckRow, 22).Value), 1, 1) = "4") _
        And (Mid(Trim(.Cells(CheckRow, 26).Value), 1, 1) = "1" _
            Or Mid(Trim(.Cells(CheckRow, 26).Value), 1, 1) = "2" _
            Or Mid(Trim(.Cells(CheckRow, 26).Value), 1, 1) = "3") _
        And Mid(Trim(.Cells(CheckRow, 30).Value), 1, 1) = "0" _
        And Mid(Trim(.Cells(CheckRow, 33).Value), 1, 1) = "0" Then
            gfuncKeisan_GetSeikyushoShurui = 1      '1:時価平残
            Exit Function
        End If

    End With

    Exit Function

ErrorSection:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncKeisan_GetSeikyushoShurui", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function



'*************************************************************************
'関数名　　：項目関連チェック
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'           Sisan1()            I           一般資産の構造体配列
'           Sisan2()            I           調整資産(+/-)の構造体配列
'           Sisan3()            I           T21調整資産の構造体配列
'
'戻り値　　：Boolean
'
'機能説明　：項目関連チェックシートを使用し関連チェックを行う
'
'更新履歴　：2007/03/14 SRA H.Anpo      新規作成
'
'*************************************************************************
Private Function func_CheckKanrenSheet( _
    ByRef TargetSheets As Object _
  , ByRef Sisan1() As Variant _
  , ByRef Sisan2() As Variant _
  , ByRef Sisan3() As Variant _
  ) As Boolean
On Error GoTo ErrorSection

    Dim lngCnt          As Long
    Dim lngCnt2         As Long
    Dim lngErrorCd      As Long
    Dim lngChkRow       As Long
    Dim lngChkCol       As Long
    
    Dim strSeiKind      As String           '請求書種類
    Dim strItemNm       As String           '項目名
    Dim strItemVal      As String           '項目設定値

    Dim strMeisai       As String
    
    Dim strAddress      As String           '検索結果のセルアドレス
    Dim strFoundStr     As String           '検索結果の文字列
    
    Const cMaru = "○"


    func_CheckKanrenSheet = False
    
    strMeisai = "一般資産　"
    
With ThisWorkbook.Sheets(CHECK_SHEETNAME)

    '*************************************
    '項目関連チェック
    '*************************************
    lngErrorCd = 0
    For lngCnt = 1 To UBound(Sisan1)
        
        '*************************************
        '請求書種類の対象行番号を取得
        '*************************************
        strItemNm = "請求書種類"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 12), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkRow = .Range(strAddress).Row
        strSeiKind = strFoundStr        '請求書種類
        
        '*************************************
        '対象行が○かチェック
        '*************************************
        '平残断面区分
        strItemNm = "平残断面区分"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), TargetSheets.Range(strItemNm), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
        
        '前払後払区分
        strItemNm = "前払後払区分"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), TargetSheets.Range(strItemNm), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
        
        'ゼロ円請求書区分
        strItemNm = "ゼロ円請求書区分"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), TargetSheets.Range(strItemNm), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
    
        '基礎数値種類
        strItemNm = "基礎数値種類"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 5), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
    
        '基礎数値計算方法
        strItemNm = "基礎数値計算方法"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 6), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
    
        '顧問料計算方法
        strItemNm = "顧問料計算方法"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 7), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
    
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa Start ***
'        '期初期末区分
'        strItemNm = "期初期末区分"
        
        '期初期末時価
        strItemNm = "期初期末時価"
'*** 2007/08/07 PH3.5対応 Modified By T.Ichikawa End   ***
        
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 9), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
        
        '顧客指定区分
        strItemNm = "顧客指定区分"
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), Sisan1(lngCnt, 10), strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"かチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            lngErrorCd = 2
            strItemVal = strFoundStr
            Exit For
        End If
    
        '*************************************
        '資産情報の登録可否チェック
        '*************************************
        strItemNm = "資産情報の登録可否"
        
        '一般資産(運用資産全体)が設定可能かチェック
        If Sisan1(lngCnt, 3) = "00000" Then
            strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), "一般資産(運用資産全体)", strItemNm & "リスト", strFoundStr)
            If strAddress = "" Then
                lngErrorCd = 1
                Exit For
            End If
            lngChkCol = .Range(strAddress).Column
            '対象が"○"かチェック
            If .Cells(lngChkRow, lngChkCol) <> cMaru Then
                lngErrorCd = 3
                strItemVal = strFoundStr
                Exit For
            End If
        End If
    
        '一般資産(運用資産全体以外)が設定可能かチェック
        If Sisan1(lngCnt, 3) <> "00000" And Mid(Sisan1(lngCnt, 3), 1, 1) = "0" Then
            strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), "一般資産(運用資産全体以外)", strItemNm & "リスト", strFoundStr)
            If strAddress = "" Then
                lngErrorCd = 1
                Exit For
            End If
            lngChkCol = .Range(strAddress).Column
            '対象が"○"かチェック
            If .Cells(lngChkRow, lngChkCol) <> cMaru Then
                lngErrorCd = 4
                strItemVal = strFoundStr
                Exit For
            End If
        End If
    
        '調整資産(+/-)が設定可能かチェック
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), "調整資産(+/-)", strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"以外の場合、該当の期間に調整資産(+/-)が存在するかチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            
            For lngCnt2 = 1 To UBound(Sisan2)
                If Trim(Sisan2(lngCnt2, 1)) >= Trim(Sisan1(lngCnt, 1)) And _
                   Trim(Sisan2(lngCnt2, 2)) <= Trim(Sisan1(lngCnt, 2)) Then
                
                    lngErrorCd = 5
                    strMeisai = "調整資産(+/-)　"
                    strItemVal = strFoundStr
                    Exit For
                End If
            Next lngCnt2
            
            If lngErrorCd <> 0 Then Exit For
        End If
    
        'T21調整資産が設定可能かチェック
        strAddress = func_SearchListAddress(ThisWorkbook.Worksheets(CHECK_SHEETNAME), "T21調整資産", strItemNm & "リスト", strFoundStr)
        If strAddress = "" Then
            lngErrorCd = 1
            Exit For
        End If
        lngChkCol = .Range(strAddress).Column
        '対象が"○"以外の場合、該当の期間にT21調整資産が存在するかチェック
        If .Cells(lngChkRow, lngChkCol) <> cMaru Then
            
            For lngCnt2 = 1 To UBound(Sisan3)
                If Trim(Sisan3(lngCnt2, 1)) >= Trim(Sisan1(lngCnt, 1)) And _
                   Trim(Sisan3(lngCnt2, 2)) <= Trim(Sisan1(lngCnt, 2)) Then
                
                    lngErrorCd = 6
                    strMeisai = "T21調整資産　"
                    strItemVal = strFoundStr
                    Exit For
                End If
            Next lngCnt2
            
            If lngErrorCd <> 0 Then Exit For
        End If
    
    Next lngCnt
    
    If lngErrorCd = 1 Then
        '項目関連チェックシートに存在しません。
        Call gfunc_ErrorMsg(3, 1711, strItemNm, strMeisai & "対象行：　" & Sisan1(lngCnt, 0) & "行目")
        Exit Function
    
    ElseIf lngErrorCd = 2 Then
        '関連チェックエラー
        Call gfunc_ErrorMsg(3, 1712, strItemNm, "[ " & Mid(strSeiKind, 3) & " ] 請求書では [ " & strItemNm & " ] に [ " & strItemVal & " ] を設定できません。" & vbCrLf & strMeisai & Sisan1(lngCnt, 0) & "行目")
        Exit Function
    
    ElseIf lngErrorCd = 3 Then
        '資産情報登録エラー
        Call gfunc_ErrorMsg(3, 1713, "", "[ " & Mid(strSeiKind, 3) & " ] 請求書では 運用資産全体の資産コードは指定できません。" & vbCrLf & strMeisai & Sisan1(lngCnt, 0) & "行目")
        Exit Function
    
    ElseIf lngErrorCd = 4 Then
        '資産情報登録エラー
        Call gfunc_ErrorMsg(3, 1714, "", "[ " & Mid(strSeiKind, 3) & " ] 請求書では 一般資産(運用資産全体以外)の資産コードは指定できません。" & vbCrLf & strMeisai & Sisan1(lngCnt, 0) & "行目")
        Exit Function
    
    ElseIf lngErrorCd = 5 Then
        '資産情報登録エラー
        Call gfunc_ErrorMsg(3, 1715, "", "[ " & Mid(strSeiKind, 3) & " ] 請求書では 調整資産(+/-)の資産は作成できません。" & vbCrLf & strMeisai & Sisan2(lngCnt2, 0) & "行目")
        Exit Function
    
    ElseIf lngErrorCd = 6 Then
        '資産情報登録エラー
        Call gfunc_ErrorMsg(3, 1716, "", "[ " & Mid(strSeiKind, 3) & " ] 請求書では T21調整資産の資産は作成できません。" & vbCrLf & strMeisai & Sisan3(lngCnt2, 0) & "行目")
        Exit Function
    End If
    
End With


    func_CheckKanrenSheet = True
    
    Exit Function

ErrorSection:

    func_CheckKanrenSheet = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CheckKanrenSheet", Err.Number, Err.Description)
    On Error GoTo 0
    
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    


End Function




'*************************************************************************
'関数名　　：請求管理テーブルとの関連チェック
'
'引　　数　：なし
'
'戻り値　　：Boolean
'
'機能説明　：断面系の場合に請求管理テーブルとの関連チェックを行う
'
'更新履歴　：2007/03/14 SRA H.Anpo      新規作成
'
'*************************************************************************
Private Function func_CheckSeikyuKanri( _
  ) As Boolean
On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim lngKikanIdFirst         As Long         '検索時　請求期間ID

    func_CheckSeikyuKanri = False
    
    '検索時請求期間IDの取得
    lngKikanIdFirst = func_GetKikanIdFirst()
    
    strErrCode = ""
    Erase vData

    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     HIZUKE_SHURUI"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SEIKYU_KANRI"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SEIKYU_KIKAN_ID= " & lngKikanIdFirst & " AND"
    strSql = strSql & "     HIZUKE_SHURUI <> '3' AND"
    strSql = strSql & "     SAKUJO_FLG='0'"
    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            'Error
            Exit Function
        End If
    Else
        Exit Function
    End If

    '存在の確認
    If lngRow > 0 Then
        func_CheckSeikyuKanri = False
    Else
        func_CheckSeikyuKanri = True
    End If
    
    Erase vData
    
    Exit Function

ErrorSection:

    func_CheckSeikyuKanri = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CheckSeikyuKanri", Err.Number, Err.Description)
    On Error GoTo 0
    
    Erase vData
    
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function


'*************************************************************************
'関数名　　：テーブルカラム名取得
'
'引　　数　：
'           strTableName        I       'テーブル名
'           strInsColsList      O       '登録カラム一覧のカンマ区切り文字列
'           strTableCol()       O       '登録カラムの配列
'
'戻り値　　：なし
'
'機能説明　：指定されたテーブルのカンマ区切りカラムとカラムの配列を返す
'
'更新履歴　：2007/04/27 SRA Azuma      新規作成     (PH3)Insertのカラム指定対応
'
'*************************************************************************
Private Sub sub_GetUserTabCols(ByVal strTableName As String, _
                               ByRef strInsColsList As String, _
                               ByRef strTableCol() As String)

On Error GoTo ErrorSection

    Dim vData()                 As Variant
    Dim strSql                  As String
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    Dim lngCnt                  As Long
    Dim strErrCode              As String
    Dim blnRet                  As Boolean
    Dim strBuff                 As String
    
    strInsColsList = ""
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     COLUMN_NAME"
    strSql = strSql & " FROM"
    strSql = strSql & "     USER_TAB_COLS"
    strSql = strSql & " WHERE"
    strSql = strSql & "     TABLE_NAME='" & UCase(strTableName) & "'"
    strSql = strSql & " ORDER BY"
    strSql = strSql & "     COLUMN_ID"

    'データ取得
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If blnRet Then
        If Trim(strErrCode) <> "" Then
            'Error
            Exit Sub
        End If
    Else
        Exit Sub
    End If

    '存在の確認
    If lngRow > 0 Then
        ReDim strTableCol(lngRow - 1)
        
        '口座番号を格納
        strBuff = CStr(vData(0, lngCnt))
        strTableCol(0) = CStr(vData(0, lngCnt))
        
        For lngCnt = 1 To lngRow - 1
            strBuff = strBuff & "," & CStr(vData(0, lngCnt))
            strTableCol(lngCnt) = CStr(vData(0, lngCnt))
        Next lngCnt
        
        strInsColsList = strBuff
    End If
    
    Erase vData
    
    Exit Sub

ErrorSection:

    strInsColsList = ""

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "sub_GetUserTabCols", Err.Number, Err.Description)
    On Error GoTo 0

    Erase vData
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Sub

'*************************************************************************
'関数名　　：DirectInsert　SQL作成処理
'
'引　　数　：
'           strTableName        I       テーブル名
'           lngId               I       請求期間ID(採番)
'           lngTekiyohKikanId   I       料率適用期間ID(採番)
'
'戻り値　　：SQL
'
'機能説明　：SQLの作成を行う
'
'更新履歴　：2007/04/27 SRA Y.Azuma    新規作成     (PH3)Insertのカラム指定対応
'
'*************************************************************************
Private Function func_InsSelTablesSql(ByVal strTableName As String _
                                    , ByVal lngId As Long _
                                    , Optional ByVal lngTekiyohKikanId As Long) As String

On Error GoTo ErrorSection
    
    Dim strSql As String
    
    Dim strInsColsList  As String   '登録カラム一覧のカンマ区切り文字列
    Dim strTableCol()   As String   '登録カラムの配列
    Dim lngColsCnt      As Long
    
    'カラム一覧を取得する。
    Call sub_GetUserTabCols(strTableName, strInsColsList, strTableCol())
    
    
    '「口座番号」は必ず先頭カラムなのではじめに追加する。
    strSql = "(" & strInsColsList & ") SELECT " & strTableCol(0)
    
    For lngColsCnt = 1 To UBound(strTableCol)
        Select Case Trim(strTableCol(lngColsCnt))
            Case "SEIKYU_KIKAN_ID"
            '請求期間ID
                strSql = strSql & ", " & lngId
                
            Case "RATE_TEKIYOH_KIKAN_ID"
            '料率適用期間ID
                strSql = strSql & ", " & lngTekiyohKikanId
                
            Case "KOHSHIN_YMD"
            '更新日付
                strSql = strSql & ", SYSDATE"
                    
            Case "KOHSHIN_PGM_ID"
            '更新プログラムID
                strSql = strSql & ",'" & UPDATE_PGM_ID & "'"
                
            Case "KOHSHIN_TANTOHSHA"
            '更新担当者
                strSql = strSql & ",'" & UPDATE_USER & "'"
                
            Case Else
            '上記以外のカラム
                strSql = strSql & "," & strTableCol(lngColsCnt)
                
        End Select
    Next lngColsCnt
    
    func_InsSelTablesSql = strSql
    
    Exit Function
ErrorSection:

    func_InsSelTablesSql = ""

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_InsSelTablesSql", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

