Attribute VB_Name = "basErrorSheet"
Option Explicit
'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー算出システム・計算確認書作成指示
'
'オブジェクト名：basErrorSheet
'
'機能概要　：エラーシート作成処理
'
'更新履歴　：2008/06/30 SRA 東       新規作成
'
'*************************************************************************
Const MODULE_NAME = "basErrorSheet"



Public Type TypeErr
    ModuleId    As String   'モージュール名
    Procedure   As String   'プロシージャ名
    ErrNum      As String   'エラー番号
    ErrDescript As String   'エラー概要
    GI_NAME     As String   '外部委託先名
    KohzaNo     As String   '口座番号
    MsgNaiyou   As String   'エラーメッセージ
    MsgSyousai  As String   'メッセージ詳細
End Type

Public gusrErr      As TypeErr
Private Const PROCESS_LOG As String = "Process.log"



'*************************************************************************
'関数名　　：エラーシート書き込み
'
'引　　数　：
'
'戻り値　　：なし
'
'機能説明　：エラー情報をエラーシートに書き込む。
'
'更新履歴　：2008/06/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function fncWriteErrSheet(ByVal strSheetName As String)
    
On Error GoTo ErrHandler
    
    Const PROCEDURE_NAME    As String = "fncWriteErrSheet"
    
    Dim lngRow              As Long
    
    With ThisWorkbook.Worksheets(strSheetName)
        lngRow = .Range("A65536").End(xlUp).Row + 1
        
        'エラーシートに罫線作成
        Call sub_ErrSheet_LineDraw(lngRow)
        
        .Cells(lngRow, 1) = "'" & gusrErr.ModuleId      'モジュール名
        .Cells(lngRow, 2) = "'" & gusrErr.Procedure     'プロシージャ名
        .Cells(lngRow, 3) = "'" & gusrErr.ErrNum        'エラー番号
        .Cells(lngRow, 4) = "'" & gusrErr.ErrDescript   'エラー概要
        .Cells(lngRow, 5) = "'" & gusrErr.GI_NAME       '外部委託先
        .Cells(lngRow, 6) = "'" & gusrErr.KohzaNo       '口座番号
        .Cells(lngRow, 7) = "'" & gusrErr.MsgNaiyou     'エラーメッセージ
        .Cells(lngRow, 8) = "'" & gusrErr.MsgSyousai    'メッセージ詳細
    
    End With
    
    Call sub_ErrLogOutPut
    
    With gusrErr
        .ModuleId = vbNullString      'モジュール名
        .Procedure = vbNullString     'プロシージャ名
        .ErrNum = vbNullString        'エラー番号
        .ErrDescript = vbNullString   'エラー概要
        .GI_NAME = vbNullString       '外部委託先
        .KohzaNo = vbNullString       '口座番号
        .MsgNaiyou = vbNullString     'エラーメッセージ
        .MsgSyousai = vbNullString    'メッセージ詳細
    End With
    
    
Exit Function

ErrHandler:
     
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)

End Function

'*************************************************************************
'関数名　　：エラー共通処理
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：サンプル
'
'更新履歴　：2008/06/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function sub_ErrLogOutPut()
    
    On Error GoTo ErrHandler
    
    Const PROCEDURE_NAME As String = "sub_ErrLogOutPut"
    
    'ログ出力パスの取得
    If Trim(strMyDocPath) = "" Then
        If gfunc_GetMyDocPath(strMyDocPath) = False Then
            MsgBox "ログ出力パスの取得に失敗しました。 (" & PROCEDURE_NAME & ")", vbCritical
            Exit Function
        End If
    End If
    
    Open strMyDocPath & PROCESS_LOG For Append Access Write As #1
    
    Write #1, "----------------------------------------------------------------------------------------------------"
    
    Write #1, Format(Now, "General Date"), "エラー", gusrErr.ModuleId, gusrErr.Procedure
    Write #1, Format(Now, "General Date"), "エラー", "システムエラー番号", gusrErr.ErrNum           'エラー番号
    Write #1, Format(Now, "General Date"), "エラー", "システムエラー概要", gusrErr.ErrDescript      'エラー概要
    Write #1, Format(Now, "General Date"), "エラー", "メッセージ内容", gusrErr.MsgNaiyou            'メッセージ内容
    Write #1, Format(Now, "General Date"), "エラー", "メッセージ詳細", vbCrLf & gusrErr.MsgSyousai  'メッセージ詳細
    
    Close #1

    Exit Function
ErrHandler:
     
    Rem Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：エラー共通処理
'
'引　　数　：
'　　　　　：lngRow     I       作成行
'
'戻り値　　：なし
'
'機能説明　：エラーシートに罫線を作成する。
'
'更新履歴　：2008/06/30 SRA Y.Azuma    新規作成
'
'*************************************************************************
Sub sub_ErrSheet_LineDraw(ByVal lngRow As Long)
    
    
    With ThisWorkbook.Worksheets(ERROR_SHEETNAME).Range("A" & lngRow & ":" & "H" & lngRow)
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    End With
End Sub

