Attribute VB_Name = "basDisp"
Option Explicit

'*************************************************************************
'
'プロジェクト名：契約管理システム・基礎数値修正
'
'オブジェクト名：basDisp
'
'機能概要　：   基礎数値情報表示
'
'更新履歴　：2007/03/19 SRA T.Ichikawa  新規作成
'
'*************************************************************************
Private Const MODULE_NAME As String = "basDisp"

'*************************************************************************
'関数名　　：基礎数値情報の基準日取得(VB版基礎数値取得処理)
'
'引　　数　：ARG1   I   RateTkikanFrom      String  料率適用期間FROM
'　　　　　：ARG2   I   RateTkikanTo        String  料率適用期間TO
'　　　　　：ARG3   I   KeisanHouhou        String  基礎数値計算方法
'　　　　　：ARG4   I   SetteiDate          String  口座開設日
'　　　　　：ARG5   I   CalloffDate         String  口座閉鎖日
'　　　　　：ARG6   O   KijyunbiAry         Variant 基準日配列
'　　　　　：ARG7   O   ErrMsg              String  エラーメッセージ
'
'戻り値　　：Long       エラー番号
'
'機能説明　：基礎数値情報の基準日を取得する
'
'更新履歴　：2007/03/19 SRA T.Ichikawa  新規作成
'
'*************************************************************************
Function fncGetKijyunbi( _
            ByVal RateTkikanFrom As String, _
            ByVal RateTkikanTo As String, _
            ByVal KeisanHouhou As String, _
            ByVal SetteiDate As String, _
            ByVal CalloffDate As String, _
            ByRef KijyunbiAry As Variant, _
            ByRef ErrMsg As String _
            ) As Long
       
    Const PROCEDURE_NAME As String = "fncGetKijyunbi"

On Error GoTo ErrorHandler

    Dim dtCurDate       As Date
    Dim dtEndDate       As Date
    Dim dtTmpDate       As Date
    
    Dim dtSetteiDate    As Date '口座開設日
    Dim dtCalloffDate   As Date '口座閉鎖日

    Dim lngCnt          As Long
    Dim lngRow          As Long

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncGetKijyunbi = 0
    lngCnt = 0
    With Sheets(SHEET_MAIN)
        If RateTkikanFrom = vbNullString Or _
           RateTkikanTo = vbNullString Then
            '3019 該当データが存在しません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3019, MSG1_KISOINF, , True
            fncGetKijyunbi = MSGLVL_WARNNING
            Exit Function
        End If
            
        dtCurDate = Format(RateTkikanFrom, "####/##/##")
        dtEndDate = Format(RateTkikanTo, "####/##/##")
            
        Select Case KeisanHouhou
            Case "2":   '2:月中平均
                dtCurDate = DateAdd("m", -1, dtCurDate)
            Case "3":   '3:前月末平均
                dtCurDate = DateAdd("m", -1, dtCurDate)
                dtEndDate = DateAdd("m", -1, dtEndDate)
            Case "4":   '4:前月中平均
                dtCurDate = DateAdd("m", -2, dtCurDate)
                dtEndDate = DateAdd("m", -1, dtEndDate)
        End Select
            
        dtSetteiDate = Format(SetteiDate, "####/##/##")
        If CalloffDate = 0 Then
            '口座閉鎖日が０の場合
            CalloffDate = "99991231"    '日付の最大値をセット
        End If
        dtCalloffDate = Format(CalloffDate, "####/##/##")
            
        dtCurDate = Format(DateAdd("m", 1, dtCurDate), "YYYY/MM/01")
        dtCurDate = DateAdd("d", -1, dtCurDate)
            
        dtEndDate = Format(DateAdd("m", 1, dtEndDate), "YYYY/MM/01")
        dtEndDate = DateAdd("d", -1, dtEndDate)
            
        Do While dtCurDate < dtEndDate
            dtTmpDate = DateAdd("d", -1, DateAdd("m", 1, Format(dtCurDate, "YYYY/MM" & "/01")))
            If dtTmpDate > dtEndDate Then
                Exit Do
            End If
            
            '口座開設日の前月までは処理しない
            If dtTmpDate >= dtSetteiDate Then
            
                If dtTmpDate >= dtCalloffDate Then
                    '口座開設日の月の場合は口座開設日をセット
                    dtTmpDate = dtCalloffDate
                End If
            
                lngCnt = lngCnt + 1
                ReDim Preserve KijyunbiAry(lngCnt)
                KijyunbiAry(lngCnt) = Format(dtTmpDate, "YYYYMMDD")
            
                If dtTmpDate >= dtCalloffDate Then
                    '口座開設日の場合は終了
                    Exit Do
                End If
            
            End If
            
            dtCurDate = DateAdd("m", 1, Format(dtCurDate, "YYYY/MM" & "/01"))
        Loop
    
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    ErrMsg = Err.Description
    fncGetKijyunbi = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function


'*************************************************************************
'関数名　　：基礎数値情報の修正額採用、基準日、基礎数値取得元、基礎数値、基礎数値修正額取得(ストアドJAVA)
'
'引　　数　：ARG1   I   KouzaNo          String      口座番号("0000000")
'　　　　　：ARG2   I   Kijyunbi         long        基準日(YYYYMMDD)
'　　　　　：ARG3   I   SisanBunrui      String      資産分類
'　　　　　：ARG4   I   SisanCd          String      資産コード
'　　　　　：ARG5   I   Rate_kikan_from  long        料率適用期間FROM
'　　　　　：ARG6   I   Rate_kikan_to    long        料率適用期間TO
'　　　　　：ARG7   I   Px_sin_kbn       String      PX信託区分
'　　　　　：ARG8   I   Ks_keisan_hohhoh String      基礎数値計算方法
'　　　　　：ARG9   I   Keisan_hohhoh    String      顧問料計算方法
'　　　　　：ARG10  O   ShuseiFlgAry     String      修正額採用配列
'　　　　　：ARG11  O   KijyunbiAry      String      基準日配列
'　　　　　：ARG12  O   PxSinKbnAry      String      PX信託配列
'　　　　　：ARG13  O   KisoSuchiAry     String      基礎数値配列
'　　　　　：ARG14  O   ShuseiGakuAry    String      基礎数値修正額配列
'
'戻り値　　：Long       エラー番号
'
'機能説明　：基礎数値取得プロシジャー(ストアドJAVA)をCALLし、修正額採用、基準日、基礎数値取得元、基礎数値、基礎数値修正額を取得する
'
'更新履歴　：2007/03/19 SRA T.Ichikawa  新規作成
'
'*************************************************************************
Function fncGetKisoSuchiInfo( _
            ByVal KouzaNo As String, _
            ByVal Kijyunbi As Long, _
            ByVal SisanBunrui As String, _
            ByVal SisanCd As String, _
            ByVal RateKikanFrom As Long, _
            ByVal RateKikanTo As Long, _
            ByVal PxSinKbn As String, _
            ByVal KsKeisanHohhoh As String, _
            ByVal KeisanHohhoh As String, _
            ByRef ShuseiFlgAry() As String, _
            ByRef KijyunbiAry() As String, _
            ByRef PxSinKbnAry() As String, _
            ByRef KisoSuchiAry() As String, _
            ByRef ShuseiGakuAry() As String _
            ) As Long
       
    Const PROCEDURE_NAME As String = "fncGetKisoSuchiInfo"

On Error GoTo ErrorHandler

    Dim strKShuseiFlg   As String
    Dim strKkijyunbi    As String
    Dim strKpxSinKbn    As String
    Dim strKKisoSuchi   As String
    Dim strKShuseiGaku  As String
    
    Dim lngErrCd        As Long
    Dim strErrMsg       As String

    'プロシジャーCALL用
    Dim objCmd As ADODB.Command
    Dim objPrm As ADODB.Parameter

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncGetKisoSuchiInfo = 0

    '基礎数値情報取得プロシジャー(ストアドJAVA)をCALL
    Set objCmd = New ADODB.Command
    
    With objCmd
    
        'コマンドの準備
        .ActiveConnection = mainmenu.cnAdo
        .CommandType = adCmdStoredProc
        .CommandText = "SP_KISOSUUCHI_SHUTOKU" 'SP名
        
        'パラメータの設定
        
        '口座番号
        Set objPrm = .CreateParameter("ps_kohza_no", adVarChar, adParamInput, 7, KouzaNo)
        .Parameters.Append objPrm
        '基準日
        Set objPrm = .CreateParameter("pn_kijyunbi", adInteger, adParamInput, , Kijyunbi)
        .Parameters.Append objPrm
        '資産分類
        Set objPrm = .CreateParameter("ps_shisan_bunrui", adVarChar, adParamInput, 1, SisanBunrui)
        .Parameters.Append objPrm
        '資産コード
        Set objPrm = .CreateParameter("ps_shisan_code", adVarChar, adParamInput, 4, SisanCd)
        .Parameters.Append objPrm
        '料率適用期間FROM
        Set objPrm = .CreateParameter("pn_rate_kikan_from", adInteger, adParamInput, , RateKikanFrom)
        .Parameters.Append objPrm
        '料率適用期間TO
        Set objPrm = .CreateParameter("pn_rate_kikan_to", adInteger, adParamInput, , RateKikanTo)
        .Parameters.Append objPrm
        'PX信託区分
        Set objPrm = .CreateParameter("ps_px_sin_kbn", adVarChar, adParamInput, 1, PxSinKbn)
        .Parameters.Append objPrm
        '基礎数値計算方法
        Set objPrm = .CreateParameter("ps_ks_keisan_hohhoh", adVarChar, adParamInput, 1, KsKeisanHohhoh)
        .Parameters.Append objPrm
        '顧問料計算方法
'------------<Modify Start T.Ichikawa 2007/04/13 > -----------------------
'        Set objPrm = .CreateParameter("ps_keisan_hohhoh", adVarChar, adParamInput, 1, KeisanHohhoh)
        '料率適用期間テーブルの計算方法が未登録の場合エラーになるため、デフォルトで"1"を設定する
        Set objPrm = .CreateParameter("ps_keisan_hohhoh", adVarChar, adParamInput, 1, IIf(KeisanHohhoh = "", "1", KeisanHohhoh))
'------------<Modify End   T.Ichikawa 2007/04/13 > -----------------------
        .Parameters.Append objPrm
        
'------------<Modify Start T.Ichikawa 2007/08/23 > ----------------------- 大量データ対応
'        '修正額採用
'        Set objPrm = .CreateParameter("ps_kiso_shuusei_flg", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '基礎数値基準日
'        Set objPrm = .CreateParameter("ps_kiso_kijyunbi", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '基礎数値取得元
'        Set objPrm = .CreateParameter("ps_kiso_px_sin_kbn", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '基礎数値
'        Set objPrm = .CreateParameter("ps_kiso_suchi", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '基礎数値修正額
'        Set objPrm = .CreateParameter("ps_kiso_suchi_shuusei_gaku", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
        
        '修正額採用
        Set objPrm = .CreateParameter("ps_kiso_shuusei_flg", adVarChar, adParamOutput, 1024)
        .Parameters.Append objPrm
        '基礎数値基準日
        Set objPrm = .CreateParameter("ps_kiso_kijyunbi", adVarChar, adParamOutput, 4096)
        .Parameters.Append objPrm
        '基礎数値取得元
        Set objPrm = .CreateParameter("ps_kiso_px_sin_kbn", adVarChar, adParamOutput, 2048)
        .Parameters.Append objPrm
        '基礎数値
        Set objPrm = .CreateParameter("ps_kiso_suchi", adVarChar, adParamOutput, 8192)
        .Parameters.Append objPrm
        '基礎数値修正額
        Set objPrm = .CreateParameter("ps_kiso_suchi_shuusei_gaku", adVarChar, adParamOutput, 8192)
        .Parameters.Append objPrm
'------------<Modify End   T.Ichikawa 2007/08/23 > ----------------------- 大量データ対応
        
        'エラーステータス
        Set objPrm = .CreateParameter("pn_err_status", adInteger, adParamOutput)
        .Parameters.Append objPrm
        'エラーメッセージ
        Set objPrm = .CreateParameter("ps_err_message", adVarChar, adParamOutput, 1024)
        .Parameters.Append objPrm
        
        '実行
        .Execute
        
        If .Parameters("pn_err_status").Value = 0 Then
        
            'カンマ文字列を配列に変換
            '修正額採用
            If IsNull(.Parameters("ps_kiso_shuusei_flg").Value) Then
                '該当データ無し
                fncGetKisoSuchiInfo = 1
                Exit Function
            End If
            strKShuseiFlg = .Parameters("ps_kiso_shuusei_flg").Value
            ShuseiFlgAry = Split(strKShuseiFlg, ",")
            
            '基準日
            If IsNull(.Parameters("ps_kiso_kijyunbi").Value) Then
                '該当データ無し
                fncGetKisoSuchiInfo = 1
                Exit Function
            End If
            strKkijyunbi = .Parameters("ps_kiso_kijyunbi").Value
            KijyunbiAry = Split(strKkijyunbi, ",")
            
            'PX/信託区分
            If Not IsNull(.Parameters("ps_kiso_px_sin_kbn").Value) Then
                strKpxSinKbn = .Parameters("ps_kiso_px_sin_kbn").Value
            End If
            PxSinKbnAry = Split(strKpxSinKbn, ",")
            
            '基礎数値
            If Not IsNull(.Parameters("ps_kiso_suchi").Value) Then
                strKKisoSuchi = .Parameters("ps_kiso_suchi").Value
            End If
            KisoSuchiAry = Split(strKKisoSuchi, ",")
            
            '基礎数値修正額
            If Not IsNull(.Parameters("ps_kiso_suchi_shuusei_gaku").Value) Then
                strKShuseiGaku = .Parameters("ps_kiso_suchi_shuusei_gaku").Value
            End If
            ShuseiGakuAry = Split(strKShuseiGaku, ",")
                
        Else
            '3026 JAVAプロシジャーでエラーが発生しました。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3026, MSG1_KISOINF, IIf(IsNull(.Parameters("ps_err_message").Value), "", .Parameters("ps_err_message").Value), True
            fncGetKisoSuchiInfo = .Parameters("pn_err_status").Value
        End If
    
    End With
    
    '破棄
    Set objCmd = Nothing

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    fncGetKisoSuchiInfo = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function


'*************************************************************************
'関数名　　：表示ボタン処理
'
'引　　数　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2007/03/19 SRA T.Ichikawa  新規作成
'更新履歴　：2008/01/22 SRA Y.Azuma     変更     (PH4)特殊文字バグ対応
'
'*************************************************************************
Function fncDisp() As Long
    
    Const PROCEDURE_NAME As String = "fncDisp"
    
On Error GoTo ErrorHandler

    Dim lngRet          As Long
    Dim strErrMsg       As String
    Dim strTitle        As String
    Dim lngSelRow       As Long
    Dim lngRowCnt       As Long
    Dim lngCnt          As Long
    
    Dim strKijyunbiAry()        As String
    Dim strShuseigakuChkAry()   As String
    Dim strKisoSuchiAry()       As String
    Dim strKisoSuchiShuseiAry() As String
    Dim strPxSinKbnAry()        As String
    
    Dim strKouza_name   As String
    Dim strKijyunbi     As String
    Dim lngRow          As Long
    Dim lngCol          As Long
    
'2007/03/23 テスト用 Start
'    Dim strSql          As String
'    Dim vRtnDataAry()   As Variant
'    Dim strWork         As String
'    Dim lngTest         As Long
'    Dim lngTest2        As Long
'    Dim lngTestCnt      As Long
'2007/03/23 テスト用 End

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncDisp = 0
    
    Application.ScreenUpdating = False
    '基礎数値情報 削除
    fncKsCmnClearField 2
    
    '入力チェック
    With Sheets(SHEET_MAIN)
    
'------------<Modify Start azuma 2008/01/22 (PH4)> ★★★☆-----------------------
        Dim ErrRow As Long
        Dim ErrCol As Long
        '変更チェック
        '検索ボタン押下後、口座番号が変更されたかをチェックする
        '口座番号
        If Format(.Range(RNG_KOUZA_NO).Value, "0000000") <> .Range(RNG_SV_KOUZA_NO).Value Then
            ErrRow = .Range(RNG_KOUZA_NO).Row
            ErrCol = .Range(RNG_KOUZA_NO).Column
            '3016 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3016, MSG1_NUMCD, MSG2_CNG_KOUZANO, True
            fncDisp = lngRet
            Exit Function
        End If
'------------<Modify End   azuma 2008/01/22 (PH4)> ★★★☆-----------------------
    
        '組入資産情報のオプションボタンが押されているかチェックする
        lngRet = fncChkOptionButton(lngSelRow)
        If lngRet <> 0 Then
            fncDisp = lngRet
            Exit Function
        End If
    
        'T21の時は基礎数値情報を表示しない
        If .Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value <> "Z" Then

        Else
            '12001 T21調整資産には基礎数値情報がありません｡
            fncKsCmnMessageDisp MSGLVL_WARNNING, 12001, MSG1_KISOINF, , True
            fncDisp = 12001
            Exit Function
        End If
    
        If .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM) = vbNullString Or _
           .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO) = vbNullString Then
            '12002 料率適用期間の範囲外のため基礎数値情報を取得できません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 12002, MSG1_KISOINF, , True
            fncDisp = 12002
            Exit Function
        End If
    
    End With
    
    '基礎数値取得プロシジャー(ストアドJAVA)をCALLし、修正額採用、基準日、基礎数値取得元、基礎数値、基礎数値修正額を取得する
    With Sheets(SHEET_MAIN)

    lngRet = fncGetKisoSuchiInfo( _
                Format(.Range(RNG_KOUZA_NO).Value, "0000000"), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
                Trim(.Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value), _
                Trim(Mid(.Cells(lngSelRow, COLN_SHISAN_CODE).Value, 2, 4)), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO), _
                .Cells(lngSelRow, COLN_PX_SHINTAKU_KBN), _
                .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH), _
                .Cells(lngSelRow, COLN_KEISAN_HOHHOH), _
                strShuseigakuChkAry(), _
                strKijyunbiAry(), _
                strPxSinKbnAry(), _
                strKisoSuchiAry(), _
                strKisoSuchiShuseiAry() _
                )
    End With
    If lngRet <> 0 Then
        fncDisp = lngRet
        Exit Function
    End If

    lngRowCnt = UBound(strKijyunbiAry) + 1

''''2007/03/23 テスト用 Start
'''    Dim strShisan_code As String
'''
'''    If Trim(Sheets(SHEET_MAIN).Cells(lngSelRow, COLN_KEISAN_HOHHOH)) <> "4" Then
'''        strShisan_code = Mid(Sheets(SHEET_MAIN).Cells(lngSelRow, COLN_SHISAN_CODE), 2, 4)
'''    End If
'''
'''    lngTest = fncTestRead(Format(Sheets(SHEET_MAIN).Range(RNG_KOUZA_NO).Value, "0000000"), _
'''                          strShisan_code, _
'''                          Sheets(SHEET_MAIN).Range(RNG_KIJYUNBI).Value, _
'''                          vRtnDataAry, lngTestCnt)
''''    lngTest = fncTestRead(Format(Sheets(SHEET_MAIN).Range(RNG_KOUZA_NO).Value, "0000000"), _
''''                          Sheets(SHEET_MAIN).Range(RNG_KIJYUNBI).Value, _
''''                          vRtnDataAry, lngTestCnt)
'''
'''    If lngTest <> 0 Then
'''        fncDisp = lngTest
'''        Exit Function
'''    End If
'''
'''    For lngCnt = 0 To 3
'''
''''        .Cells(lngRow, COLN_SHISAN_BUNRUI_NM) = vntRec(eKumRec.eSHISAN_BUNRUI_NM, lngCnt)
''''        strShuseigakuChkAry = strShuseigakuChkAry + vRtnDataAry(0, lngCnt)
''''
''''        strKijyunbiAry = strKijyunbiAry & vRtnDataAry(1, lngCnt)
''''
''''        strPxSinKbnAry = strPxSinKbnAry & vRtnDataAry(2, lngCnt)
''''
''''        strKisoSuchiAry = strKisoSuchiAry & vRtnDataAry(3, lngCnt)
''''        strKisoSuchiShuseiAry = strKisoSuchiShuseiAry & vRtnDataAry(3, lngCnt)
''''
''''        strShuseigakuChkAry = vRtnDataAry(0, lngCnt)
''''
''''        strKijyunbiAry = vRtnDataAry(1, lngCnt)
''''
''''        strPxSinKbnAry = vRtnDataAry(2, lngCnt)
''''
''''        strKisoSuchiAry = vRtnDataAry(3, lngCnt)
''''        strKisoSuchiShuseiAry = vRtnDataAry(3, lngCnt)
'''
'''        For lngTest2 = 0 To lngTestCnt - 1
'''            If lngTest2 > 0 Then
'''                strWork = strWork & ","
'''            End If
'''            strWork = strWork & vRtnDataAry(lngCnt, lngTest2)
'''        Next lngTest2
'''
'''        Select Case lngCnt
'''            Case 0
'''                strShuseigakuChkAry = Split(strWork, ",")
'''            Case 1
'''                strKijyunbiAry = Split(strWork, ",")
'''            Case 2
'''                strPxSinKbnAry = Split(strWork, ",")
'''            Case 3
'''                strKisoSuchiAry = Split(strWork, ",")
'''                strKisoSuchiShuseiAry = Split(strWork, ",")
'''        End Select
'''
'''        strWork = ""
'''
''''        lngRow = lngRow + 1
'''    Next lngCnt
'''
'''    lngRowCnt = lngTestCnt
'''
'''
'''    '固定値を配列に格納
''''    strShuseigakuChkAry = Split("1,0,0,0", ",")
''''
''''    strKijyunbiAry = Split("20070301,20070302,20070303,20070304", ",")
''''
''''    strPxSinKbnAry = Split("1,2,2,2", ",")
''''
''''    strKisoSuchiAry = Split("111111,222222,333333,444444", ",")
''''
''''    strKisoSuchiShuseiAry = Split("1111111,2222222,3333333,4444444", ",")
''''
''''    lngRowCnt = 4
'''
''''2007/03/23 テスト用  End


    If lngRowCnt > 0 Then

        '基礎数値情報 行追加
        fncKsCmnAddNrow 2, lngRowCnt
        'データセット
        With Sheets(SHEET_MAIN)
            lngRow = fncKsCmnSearchDataTopRow(2)

            For lngCnt = LBound(strKijyunbiAry) To UBound(strKijyunbiAry)

                '修正額採用
                If lngCnt <= UBound(strShuseigakuChkAry) Then
                    If strShuseigakuChkAry(lngCnt) = "1" Then
                        .Cells(lngRow, COLN_J_CHK_DEFAULT).Value = "TRUE"
                        .Cells(lngRow, COLN_J_CHK_FLG).Value = "TRUE"
                    Else
                        .Cells(lngRow, COLN_J_CHK_DEFAULT).Value = "FALSE"
                        .Cells(lngRow, COLN_J_CHK_FLG).Value = "FALSE"
                    End If
                End If

                '基準日
                If lngCnt <= UBound(strKijyunbiAry) Then
                    .Cells(lngRow, COLN_J_KIJYUNBI).Value = strKijyunbiAry(lngCnt)
                End If

                'PX信託区分
                If lngCnt <= UBound(strPxSinKbnAry) Then
                    Select Case strPxSinKbnAry(lngCnt)
                        Case PX_SHINTAKU_KBN_PX:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_PX
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
                        Case PX_SHINTAKU_KBN_SHINTAKU:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_SHINTAKU
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
                        Case PX_SHINTAKU_KBN_PX_GANPON:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_PX_GANPON
'------------<Modify Start Ichikawa 2007/05/24 (PH3)> -----------------------
'''                            '元本の時は基礎数値修正額セルの背景色を白、入力不可にする
'''                            .Cells(lngRow, COLN_J_SHUSEIGAKU).Select
'''                            With Selection
'''                                .Interior.ColorIndex = xlNone
'''                                .Locked = True
'''                                .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
'''                                .Borders(xlEdgeTop).ColorIndex = xlAutomatic
'''                                .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
'''                                .Borders(xlEdgeRight).ColorIndex = xlAutomatic
'''                            End With
                            
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
'------------<Modify End   Ichikawa 2007/05/24 (PH3)> -----------------------
                        Case PX_SHINTAKU_KBN_NON
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
                    End Select
                End If

                '基礎数値
                If lngCnt <= UBound(strKisoSuchiAry) Then
                    .Cells(lngRow, COLN_J_KISOSUCHI).Value = Trim(strKisoSuchiAry(lngCnt))
                End If

                '基礎数値修正額
                If lngCnt <= UBound(strKisoSuchiShuseiAry) Then
                    .Cells(lngRow, COLN_J_SHUSEIGAKU).Value = Trim(strKisoSuchiShuseiAry(lngCnt))
                End If

                lngRow = lngRow + 1
            Next

            '選択された行番号を保存
            .Range(RNG_SV_SELED_ROW).Value = lngSelRow
        End With

        Application.ScreenUpdating = True

    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    Application.ScreenUpdating = True
    fncDisp = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function

