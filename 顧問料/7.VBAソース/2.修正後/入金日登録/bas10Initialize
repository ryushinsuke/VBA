Attribute VB_Name = "bas10Initialize"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・入金日登録
'
'オブジェクト名：bas10Initialize
'
'機能概要　：初期処理
'
'更新履歴　：2006/08/28 SRA H.早川     新規作成
'
'*************************************************************************
Const MODULE_NAME = "bas10Initialize"


'Public strKK33Dankai() As String    '<------------ Modify azuma 2006/08/01 No.032


'*************************************************************************
'関数名　　：入金日登録画面の初期化メイン
'
'引　　数　：なし
'
'戻り値　　：あり（True:異常なし False:異常検出）
'
'機能説明　：初期起動時に行われる初期処理のメイン
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Function g_subKeisanInitialize() As Boolean

    g_subKeisanInitialize = False                           '異常で初期化
    '画面の初期化
                                                            '検索条件初期化
    Worksheets(MAIN_SHEETNAME).Range("口座番号").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("信託銀行コード").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("請求期間FROM").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("請求期間TO").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("請求日FROM").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("請求日TO").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("入金予定日FROM").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("入金予定日TO").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("入金日FROM").Value = ""
    Worksheets(MAIN_SHEETNAME).Range("入金日TO").Value = ""
    
    Call g_subKeisanIniScreenH(Worksheets(MAIN_SHEETNAME))   'ヘッダー部
''    Call g_subKeisanIniScreenD(Worksheets(MAIN_SHEETNAME))   '明細部
    
    'コンボ項目の初期化
    If Not keisanIniCombo Then
        Exit Function
    End If
    
    g_subKeisanInitialize = True                           '正常値セット

End Function


'*************************************************************************
'関数名　　：入金日登録画面のクリア処理(ヘッダー部)
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：ヘッダー部のセルをクリアする
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub g_subKeisanIniScreenH(ByRef TargetSheets As Object)

    ' ヘッダー部の初期化
    With ThisWorkbook.Worksheets(MAIN_SHEETNAME)

        .Range("請求顧問料合計").Value = ""
        .Range("消費税合計").Value = ""

        With TargetSheets
            .CmdAll.Enabled = False
            .cmdUp.Enabled = False
        End With
        
    End With
End Sub

'*************************************************************************
'関数名　　：入金日登録画面のクリア処理(明細部)
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：明細部行を全て削除する
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub g_subKeisanIniScreenD(ByRef TargetSheets As Object)
        
    TargetSheets.Range("変更比較FLAG合計").Formula = ""
    
    Call gKsC_fncKsCmnCheckRowDelete(ThisWorkbook.Worksheets(MAIN_SHEETNAME), 1, True)  '請求情報
    
End Sub

'*************************************************************************
'関数名　　：コンボ項目の初期化
'
'引　　数　：なし
'
'戻り値　　：あり（True:異常なし False:異常検出）
'
'機能説明　：コンボ項目のリストデータを取得する
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
'
Private Function keisanIniCombo() As Boolean

    Dim strErrMsg As String
    
    keisanIniCombo = False      '異常値で初期化
    
    strErrMsg = ""

    '信託銀行のデータ取得
    If fncGet_TrustBank = False Then
        Exit Function
    End If
    
    
    '信託銀行の名前定義
    Call subNameDefine
    
    keisanIniCombo = True      '正常値セット
    

End Function


'*************************************************************************
'関数名　　：信託銀行テーブル抽出処理
'
'引　　数　：無し
'
'戻り値　　：Boolean
'
'機能説明　：コードブックテーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'更新履歴　：2007/01/17 SRA Y.Azuma    変更     (仕変)総No.185 信託銀行リストのコード入力対応
'更新履歴　：2007/05/31 SRA Y.Azuma    変更     (PH3)連結　起動中のキー入力エラー対策
'
'*************************************************************************
Private Function fncGet_TrustBank() As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    Const strConnErrCd As String = "この操作を実行する"
    Dim blnRet      As Boolean
    
    fncGet_TrustBank = False
    
'''    strSql = ""
'''    strSql = strSql & " SELECT SUBSTR(CD_1,1,3)||':'||NAME_J"
'''    strSql = strSql & " FROM   VW_DT301D"
'''    strSql = strSql & " WHERE  CD_KBN ='15'"
'''    strSql = strSql & " ORDER  BY CD_1"
'------------<Modify Start azuma 2007/01/17 > -----------------------
'    strSql = "SELECT DISTINCT" & _
'             " SUBSTR(A.CD_1,1,3)||':'||A.NAME_J AS ReqData" & _
'             " FROM   VW_DT301D A, VW_DT001D B" & _
'             " WHERE  A.CD_KBN ='15'" & _
'             "   AND  B.SETTEI_KBN ='1'" & _
'             "   AND  B.DELT_FLG = '0'" & _
'             "   AND  (B.CALLOFF_DATE <= '0' OR B.CALLOFF_DATE IS NULL)" & _
'             "   AND  A.CD_1 = B.SINTAKU_BANK_CD" & _
'             " ORDER  BY ReqData"

    Call gsub_CreateSql_ShintakuBk(strSql)

'------------<Modify End   azuma 2007/01/17 > -----------------------
    
    'データ取得
    
    strErrCode = strConnErrCd
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    If Not blnRet Then
        If strErrCode = strConnErrCd Then   'DB接続エラー
        '接続失敗(メッセージテーブルは使用不可注意)
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_TrustBank", 0, _
                        "ＤＢ接続エラー。設定を確認してください。")
            Exit Function
        Else                                'その他エラー
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_TrustBank", 0, _
                        "システムエラー。管理者に連絡してください。")
            Exit Function
        End If
    End If
    
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
'------------<Modify Start azuma 2007/05/31 (PH3)> -----------------------
        .Activate
'------------<Modify End   azuma 2007/05/31 (PH3)> -----------------------
        
        '「信託銀行」のデータセル範囲をクリア
        .Range("A2:A65536").ClearContents
        
'------------<Modify Start azuma 2007/01/17 > -----------------------
'''        .Range("A2").Value = "   "      '空白データ設定(Null状態だと入力制限が効かない)
'------------<Modify End   azuma 2007/01/17 > -----------------------
        '取得データをセルに設定
        For lngCnt = 0 To lngRow - 1
             .Cells(3 + lngCnt, 1).Value = vData(0, lngCnt)
        Next lngCnt
    End With
    
    Erase vData
    
    fncGet_TrustBank = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_TrustBank", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
'    MsgBox "Error:fncGet_TrustBank" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：信託銀行の名前定義設定
'
'引　　数　：無し
'
'戻り値　　：無し
'
'機能説明　：信託銀行の名前定義を再設定する。
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Private Sub subNameDefine()

    Dim rowcnt  As Long

    '*** 信託銀行の名前定義
    For rowcnt = 3 To 65536
        If ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(rowcnt, 1).Value = "" Then
            rowcnt = rowcnt - 1
            Exit For
        End If
    Next rowcnt
    
    '再定義
'------------<Modify Start azuma 2007/01/17 > -----------------------
    ThisWorkbook.Names.Add Name:=SHINTAKU_BK_LIST, _
     RefersToR1C1:="=data!R2C1:R" & rowcnt & "C1"
'    ThisWorkbook.Names.Add Name:="信託銀行リスト", _
'     RefersToR1C1:="=data!R2C1:R" & rowcnt & "C1"
'------------<Modify End   azuma 2007/01/17 > -----------------------

End Sub


'*************************************************************************
'関数名　　：コマンドボタンの表示・非表示設定
'
'引　　数　：
'           blnType       I       表示：True、非表示：False
'
'戻り値　　：なし
'
'機能説明　：コマンドボタン表示・非表示の設定をする。
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub gfunc_VisibleCommandBtn(blnType As Boolean)

    With Worksheets(MAIN_SHEETNAME)
    
        .cmdAdd1.Visible = blnType
        .cmdAdd2.Visible = blnType
        .cmdAdd3.Visible = blnType
        .cmdDel1.Visible = blnType
        .cmdDel2.Visible = blnType
        .cmdDel3.Visible = blnType
        
        .cmdSearch.Visible = blnType
        .cmdUp.Visible = blnType
                
    End With

End Sub

'*************************************************************************
'関数名　　：全部入金ボタン処理
'
'引　　数　：
'           TargetSheets I       対象シートオブジェクト
'
'戻り値　　：なし
'
'機能説明　：コマンドボタン表示・非表示の設定をする。
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Function gfunc_cmdAll(TargetSheets As Object) As Boolean

    Dim lngCnt As Long
    
On Error GoTo ErrorHandler
        
    lngCnt = fncKsCmnSearchDataTopRow(TargetSheets, 1)
    
    With TargetSheets
        Do While (.Cells(lngCnt, DTCol.請求期間ID) <> vbNullString)
            .Cells(lngCnt, DTCol.入金ChkLink) = True
            lngCnt = lngCnt + 1
        Loop
    End With

    Exit Function
    
ErrorHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_cmdAll", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
End Function

