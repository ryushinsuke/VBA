Attribute VB_Name = "basKsCommon"
Option Explicit

Const MODULE_NAME = "basKsCommon"


Public Const MAIN_SHEETNAME = "main"
Public Const TEMPLATE_SHEETNAME = "Template"
Public Const DATA_SHEETNAME = "Data"

Public gstrQuitMsg As String  '終了時の更新確認Msg 'BeforeClose時にはMsg取得しないほうがいいので事前に取得しておく

Public Enum DTCol                      '明細行の列書式定義
    入金Chk = 2
    入金日
    入金予定日 = 6
    口座番号 = 9
    口座名称 = 11           '12 06/10/5
    請求期間FROM = 15       '18 06/10/5
    請求期間TO = 18         '21 06/10/5
    請求日 = 21             '24 06/10/5
    上下区分 = 24           '27 06/10/5
    請求顧問料 = 25         '28 06/10/5
    内消費税 = 30           '32 06/10/5
    入金ChkLink = 38
    請求期間ID
    日付種類
    更新前入金Chk
    更新前入金日
    変更比較Flag
End Enum

Public Enum UsMSet                  'ユーザー定義メソッドセット
    列→英字 = 1
    英字→列
End Enum

'
'*************************************************************************
'関数名　　：明細行追加メイン処理
'
'引　　数　：
'           iInsRow       I       追加対象ROW
'           iSrcRow       I       複写元ROW
'           lngInsCnt     I       追加行数
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の追加を行う。
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnInsRow(TargetSheets As Object, iInsRow As Long, iSrcRow As Long, _
                        Optional ByVal lngInsCnt As Long = 1) As Long
    
On Error GoTo ErrorHandler
    Dim lngCnt As Long, str1 As String, str2 As String

    gKsC_fncKsCmnInsRow = 0
    
    Sheets(TEMPLATE_SHEETNAME).Rows(iSrcRow & ":" & iSrcRow).Copy
    
    Sheets(MAIN_SHEETNAME).Select
    Rows(iInsRow & ":" & iInsRow + lngInsCnt - 1).Select
    Selection.Insert Shift:=xlDown
    Application.CutCopyMode = False

    'チェックボックスの追加
    str1 = fncCmnCellAdrCnv(列→英字, DTCol.入金Chk)
    str2 = fncCmnCellAdrCnv(列→英字, DTCol.入金ChkLink)
    For lngCnt = 1 To lngInsCnt
        Call fncCmnSetCheckBox(TargetSheets, _
                    str1 & iInsRow + lngCnt - 1, _
                    str2 & iInsRow + lngCnt - 1)
    Next
    TargetSheets.Cells(iInsRow, 3).Select
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    gKsC_fncKsCmnInsRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnInsRow", Err.Number, Err.Description)
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    On Error GoTo 0
    
End Function


'*************************************************************************
'関数名　　：明細行削除メイン処理
'
'引　　数　：
'           TargetSheets I       削除対象シートオブジェクト
'           iKind        I       削除対象(1:請求情報)
'           AllDel       I       全削除フラグ(初期値:False)　True:全削除
'
'戻り値　　：Long       エラー番号
'
'機能説明　：明細行の削除を行う。
'
'更新履歴　：2006/07/05 SRA T.Azuma    新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnCheckRowDelete(TargetSheets As Object, iKind As Long, Optional AllDel As Boolean = False) As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    gKsC_fncKsCmnCheckRowDelete = 0
    
    Select Case iKind
        Case 1:     '請求情報
                lngCnt = fncKsCmnSearchDataTopRow(TargetSheets, 1)
    
        Case Else:
                Call gfunc_ErrorMsg(4, 1, "", "")
                Exit Function
    End Select
        
    With TargetSheets
        If AllDel Then
            Call fncCmnDelCheckBox(TargetSheets, "", True)  '全チェックボックス削除
            '明細行の削除処理
            TargetSheets.Rows(lngCnt & ":65536").Select
            Application.CutCopyMode = False
            Selection.Delete Shift:=xlUp
        Else

            Do While (.Cells(lngCnt, DTCol.請求期間ID) <> vbNullString)
                If AllDel = False Then
                '選択削除
                    If .Cells(lngCnt, DTCol.請求期間ID) Then
                        Call fncKsCmnDeleteRow(TargetSheets, lngCnt, AllDel)
                    Else
                        lngCnt = lngCnt + 1
                    End If
                Else
                '全削除
                    Call fncKsCmnDeleteRow(TargetSheets, lngCnt, AllDel)
                End If
            Loop
        End If
    End With
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    gKsC_fncKsCmnCheckRowDelete = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnCheckRowDelete", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：明細行削除処理
'
'引　　数　：
'           iDelRow       I       削除対象ROW
'           AllDel        I       全削除フラグ(初期値:False)　True:全削除
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の削除を行う。
'
'更新履歴　：2006/08/31 SRA H.早川    新規作成
'
'*************************************************************************
Private Function fncKsCmnDeleteRow(TargetSheets As Object, _
                                   iDelRow As Long, Optional AllDel As Boolean = False) As Long
On Error GoTo ErrorHandler

    fncKsCmnDeleteRow = 0
    
    If TargetSheets.Cells(iDelRow, DTCol.請求期間ID) = "" Then
        Exit Function
    End If
    
    'チェックボックスの削除処理
    If Not AllDel Then      '全削除では、一括で削除するので、ここでは実施しない。
        Call fncCmnDelCheckBox(TargetSheets, fncCmnCellAdrCnv(UsMSet.列→英字, DTCol.入金ChkLink) & iDelRow)
    End If
    
    '明細行の削除処理
    TargetSheets.Rows(iDelRow & ":" & iDelRow).Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlUp

    TargetSheets.Cells(iDelRow, 2).Select

    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncKsCmnDeleteRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnDeleteRow", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function


'*************************************************************************
'関数名　　：明細行位置取得処理
'
'引　　数　：
'           iKind       I       対象(1:請求情報)
'
'戻り値　　：明細行の開始行番号
'
'機能説明　：明細行の開始行番号を返す
'
'更新履歴　：2006/08/26 SRA H.早川    新規作成
'
'*************************************************************************
Public Function fncKsCmnSearchDataTopRow(TargetSheets As Object, iKind As Long) As Long
    Dim lngKindCnt As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    fncKsCmnSearchDataTopRow = 0
    
    Select Case iKind
    Case 1      '請求情報
        fncKsCmnSearchDataTopRow = TargetSheets.Range("明細開始行").Row + 1
    End Select
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncKsCmnSearchDataTopRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnSearchDataTopRow", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'チェックボックスの作成
'*************************************************************************
'関数名　　：チェックボックスの作成
'
'引　　数　：
'           CellName       I       作成対象セル
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/31 SRA H.早川    新規作成
'
'*************************************************************************
Public Function fncCmnSetCheckBox(ByRef objTarget As Object _
                                , ByVal CellName As String _
                                , ByVal LinkCellName As String) As Long
    
On Error GoTo ErrorHandler
    fncCmnSetCheckBox = 0
    
    Dim lngZoom As Long
    Dim objX    As Object
    
'    lngZoom = ActiveWindow.Zoom
'    ActiveWindow.Zoom = 100
    
    With objTarget.Range(CellName)
        Set objX = Worksheets(MAIN_SHEETNAME).Shapes.AddFormControl( _
            xlCheckBox, _
            .Left + 3, _
            .Top - 1, _
            10.5, _
            10)
        With objX.OLEFormat.Object
            .Display3DShading = True
            .Caption = ""
            .LinkedCell = LinkCellName
        End With
        
    End With

'    ActiveWindow.Zoom = lngZoom
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncCmnSetCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnSetCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

'
'*************************************************************************
'関数名　　：チェックボックスの削除
'
'引　　数　：
'           CellName       I       削除対象セル
'           AllDel         I       全削除フラグ(初期値:False)　True:全削除
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/31 SRA H.早川    新規作成
'
'*************************************************************************
Public Function fncCmnDelCheckBox(ByRef objTarget As Object, CellName As String _
                    , Optional AllDel As Boolean = False) As Long
Dim c As Object
    
On Error GoTo ErrorHandler
    
    With objTarget
        For Each c In .Shapes
'            If Mid(c.Name, 1, 8) = "CheckBox" Then
'                .Shapes(c.Name).Select
'                If Selection.LinkedCell = CellName Then
'                    Selection.Delete
'                End If
'            End If
            If c.Type = msoFormControl Then
                If c.FormControlType = xlCheckBox Then
                    Select Case True
                    Case AllDel
                        c.Delete
                    Case c.OLEFormat.Object.LinkedCell = CellName
                        c.Delete
                        Exit For
                    End Select
                End If
            End If
        Next
    End With

    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncCmnDelCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnDelCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
End Function

'*************************************************************************
'関数名　　：セルアドレス変換
'
'引　　数　：
'           strMethod       I       変換タイプ
'                                       英字→列:A〜ZZを１〜256の列番号に変換
'                                       列→英字:１〜256の列番号をA〜ZZに変換
'           varPar1         I       入力パラメータ１
'           varPar2         I       入力パラメータ２(省略可能)
'戻り値　　：Variant         I       変換結果
'
'機能説明　：
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Function fncCmnCellAdrCnv(ByRef PMethod As UsMSet _
        , ByVal P_Par1 As Variant, Optional ByVal P_Par2 As Variant = Null) As Variant
    
    Dim lngNo As Long, lngNo2 As Long, str1 As String
    
On Error GoTo ErrorHandler
    
    Select Case PMethod
    Case UsMSet.英字→列
        lngNo = Asc(UCase(Mid(P_Par1, 1, 1))) - Asc("A") + 1
        If Len(P_Par1) >= 2 Then
            lngNo = lngNo * 26 + Asc(UCase(Mid(P_Par1, 2, 1))) - Asc("A") + 1
        End If
        
        fncCmnCellAdrCnv = lngNo
        
    Case UsMSet.列→英字
        lngNo = (P_Par1 - 1) Mod 26
        lngNo2 = Int((P_Par1 - 1) / 26)
        
        str1 = Chr(Asc("A") + lngNo)
        If lngNo2 > 0 Then str1 = Chr(Asc("A") + lngNo2 - 1) & str1
    
        fncCmnCellAdrCnv = str1
    
    Case Else
        Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnCellAdrCnv", 0, "Method規定外(" & PMethod & ")")
        subCmnEnd     'Program Stop
    End Select
    
    Exit Function

ErrorHandler:
    fncCmnCellAdrCnv = Null
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnCellAdrCnv", Err.Number, Err.Description)
    On Error GoTo 0
    
    subCmnEnd     'Program Stop
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：強制終了処理
'
'引　　数　：
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub subCmnEnd()
    Call gCom01_SheetProtect(Worksheets(MAIN_SHEETNAME), True)         'シート保護
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
    End
    
End Sub

'*************************************************************************
'関数名　　：桁落防止SUM処理
'
'引　　数　：
'           TargetSheet   I       対象ワークシート
'           lngRowX       I       集計先行
'           lngColX       I       集計先列
'           lngRow1       I       集計元行(開始)
'           lngCol1       I       集計元列(開始)
'           lngRow2       I       集計元行(終了)　（省略可能）
'           lngCol2       I       集計元列(終了)　（省略可能）
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'　　　　　　2006/10/30 SRA H.早川 金額30,000,001 --> 31 bug対応
'                                 金額マイナスエラー対応
'
'*************************************************************************
Public Sub subCmnSumEX(TargetSheet As Object _
                      , ByVal lngRowX As Long, ByVal lngColX As Long _
                      , ByVal lngRow1 As Long, ByVal lngCol1 As Long _
                      , Optional ByVal lngRow2 As Long = 0, Optional ByVal lngCol2 As Long = 0 _
                      )
    Dim lng1 As Long, lng2 As Long, lngSum1 As Long, lngSum2 As Long
    Dim lngCnt1 As Long, lngCnt2 As Long
    Dim str1 As String, str2 As String
    
    Const lngOvrNb As Long = 10000000
    
On Error GoTo ErrorHandler
    If lngRow2 = 0 Then             '省略時初期化、ByValパラメータ
        lngRow2 = lngRow1
    End If
    If lngCol2 = 0 Then             '省略時初期化、ByValパラメータ
        lngCol2 = lngCol1
    End If

    lngSum1 = 0: lngSum2 = 0        '集計値初期化
    With TargetSheet
        For lngCnt1 = lngRow1 To lngRow2: For lngCnt2 = lngCol1 To lngCol2  '行列Loop
'(1)文字列分割
            str1 = Trim(.Cells(lngCnt1, lngCnt2))
            str2 = ""
            Select Case True
            Case Len(str1) = 8 And Left(str1, 1) = "-"  'pass case
            Case Len(str1) > 7
                str2 = Left(str1, Len(str1) - 7)
                str1 = Right(str1, 7)
                If Left(str2, 1) = "-" Then str1 = "-" & str1
            End Select
            
'(2)分割加算
            lngSum1 = lngSum1 + Val(str1)
            lngSum2 = lngSum2 + Val(str2)
                    
            Select Case True
            Case lngSum1 < 0 And lngSum2 > 0    '符号乖離の更正（）
                lngSum1 = lngSum1 + lngOvrNb
                lngSum2 = lngSum2 - 1
            Case lngSum1 > 0 And lngSum2 < 0    '符号乖離の更正
                lngSum1 = lngSum1 - lngOvrNb
                lngSum2 = lngSum2 + 1
            Case lngSum1 >= lngOvrNb            '桁あふれの更正（正値）
                lngSum1 = lngSum1 - lngOvrNb
                lngSum2 = lngSum2 + 1
            Case lngSum1 <= -1 * lngOvrNb       '桁あふれの更正（負値）
                lngSum1 = lngSum1 + lngOvrNb
                lngSum2 = lngSum2 - 1
            End Select
        Next: Next
        
'(3)結果格納
' 06/10/30 Update Start
'        str1 = Trim(Str(Abs(lngSum1)))
'        If lngSum2 <> 0 Then str1 = Trim(Str(lngSum2)) & str1
        If lngSum2 = 0 Then
            str1 = Trim(Str(lngSum1))
        Else
            str1 = Right("0000000" & Trim(Str(Abs(lngSum1))), 7)
            str1 = Trim(Str(lngSum2)) & str1
        End If
' 06/10/30 Update End
        .Cells(lngRowX, lngColX) = str1
        
    End With

    Exit Sub
ErrorHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "subCmnSumEX", Err.Number, Err.Description)
    On Error GoTo 0
    
    subCmnEnd     'Program Stop
'---- Error Log End   ----------------------------------------------------

End Sub

'*************************************************************************
'関数名　　：フォーカス設定
'
'引　　数　：
'           TargetObj     I       対象レンジ
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub subCmnSetFocus(TargetObj As Object)
On Error GoTo ErrorHandler
    
    Dim blnScrUpd As Boolean
    
    blnScrUpd = Application.ScreenUpdating  'Save
    Application.ScreenUpdating = True       '強制表示
    TargetObj.Activate
    Application.ScreenUpdating = blnScrUpd  'Restore
    
    Exit Sub

ErrorHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    
    Application.ScreenUpdating = True
    
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "subCmnSetFocus", Err.Number, Err.Description)
    On Error GoTo 0
    
    subCmnEnd     'Program Stop

End Sub


'*************************************************************************
'関数名　　：囲い込み線設定
'
'引　　数　：
'           TargetObj     I       対象レンジ
'           blnOnOff      I       設定／解除(True:設定)
'           lngColor      I       解除時の色
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2006/08/28 SRA H.早川    新規作成
'
'*************************************************************************
Public Sub subCmnSetLn(TargetObj As Object, BlnOnOff As Boolean, _
                        Optional lngColor As Long = 0)
On Error GoTo ErrorHandler
    Dim lngADR(1 To 2, 1 To 2) As Long      '開始ｾﾙ位置、セル個数記録
    Dim lngCnt1 As Long, lngCnt2 As Long, lngCnt3 As Long
    
    With TargetObj
        With .MergeArea         '注：MergeCells プロパティを使用すると動作不正発生
            lngADR(1, 1) = .Row
            lngADR(1, 2) = .Column
            lngADR(2, 1) = lngADR(1, 1) - 1 + .Rows.Count    '繰り返しRow,Column
            lngADR(2, 2) = lngADR(1, 2) - 1 + .Columns.Count
        End With
        
        With .Parent
            For lngCnt1 = lngADR(1, 1) To lngADR(2, 1): For lngCnt2 = lngADR(1, 2) To lngADR(2, 2)
                With .Cells(lngCnt1, lngCnt2)
                    For lngCnt3 = 1 To 4
                        With .Borders(lngCnt3)
                            If BlnOnOff Then
                                .Color = vbMagenta
'                                .LineStyle = xlContinuous
                            Else
                                .Color = lngColor
'                                .LineStyle = xlSingle   'xlDouble 06/10/5
                            End If
                        End With
                    Next
                End With
            Next: Next
        End With
    End With
    
    Exit Sub

ErrorHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    
    Application.ScreenUpdating = True
    
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "subCmnSetLn", Err.Number, Err.Description)
    On Error GoTo 0
    
    subCmnEnd     'Program Stop

End Sub

