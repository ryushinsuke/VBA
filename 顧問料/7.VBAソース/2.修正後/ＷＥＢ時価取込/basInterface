Attribute VB_Name = "basInterface"
Option Explicit
'*************************************************************************
'
'プロジェクト名：新顧問料契約管理システム・WEB時価ﾃﾞｰﾀ取込処理
'
'オブジェクト名：basInterface
'
'機能概要　：ユーザーインタフェイス
'
'更新履歴　：2006/01/17 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    入力されたダウンロードファイルのみインポートする。
'　　　　　：2006/01/28 SRA T.Tanaka    取込後、ダウンロードファイルを閉じるように修正。
'
'
'*************************************************************************
Private Const MODULE_NAME As String = "basInterface"

'*************************************************************************
'関数名　　：テキストボックスフォーカス取得
'
'引　　数　：ARG1   I/O Target  Object  対象コントロール
'
'戻り値　　：なし
'
'機能説明　：入力テキストを選択状態にする。
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'
'*************************************************************************
Public Sub subGotFocusControl(Target As Object)
    
    Const PROCEDURE_NAME As String = "subGotFocusControl"
    
    On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    With Target
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Sub
ErrHandler:
     
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Sub

'*************************************************************************
'関数名　　：ダウンロードファイルの取込
'
'引　　数　：ARG1   I   Target()    String  ダウンロードファイル情報
'
'戻り値　　：なし
'
'機能説明　：ダウンロードファイルを開いて、シートをコピーする。
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    入力されたダウンロードファイルのみ処理する。
'　　　　　：2006/01/28 SRA T.Tanaka    ダウンロードファイルを閉じるように修正。
'　　　　　：2006/01/30 SRA T.Tanaka    ファイル形式チェックの追加に伴う処理順序の変更
'　　　　　：2006/05/18 SRA H.Anpo      MTBJ未払費用シート追加対応
'
'*************************************************************************
Public Function fncImportData(ByRef Target() As String) As Long

    Const PROCEDURE_NAME As String = "fncImportData"
    
    On Error GoTo ErrHandler
    
    Dim lngcnt  As Long
    Dim lngRet  As Long
    Dim strbuf  As String
    
'=== 2006/05/18 Added By Anpo Start
    Dim strFileNm As String
'=== 2006/05/18 Added By Anpo End
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncImportData = -1
    
    For lngcnt = LBound(Target) To UBound(Target)
        
        If Trim(Target(lngcnt, levsFIPass)) <> vbNullString Then
        
            'ダウンロードファイルを開く
            Workbooks.Open FileName:=Target(lngcnt, levsFIPass)

'=== 2006/05/18 Modified By Anpo Start
'            With ThisWorkbook
'                'ダウンロードファイルのアクティブシートをこのブックにコピーする。
'                ActiveSheet.Copy After:=Workbooks(.Name).Sheets(.Sheets.Count)
'                'このファイルのアクティブシート(コピーされたシート)の名前を変える。
'                ActiveSheet.Name = Target(lngCnt, levsFIName)
'            End With
            With ThisWorkbook
                If .Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_MSB And lngcnt = 1 Then
                    strFileNm = ActiveWorkbook.Name
                    '１番目のシートをアクティブにする
                    Workbooks(strFileNm).Sheets(1).Activate
                    'ダウンロードファイルのアクティブシートをこのブックにコピーする。
                    ActiveSheet.Copy After:=Workbooks(.Name).Sheets(.Sheets.Count)
                    'このファイルのアクティブシート(コピーされたシート)の名前を変える。
                    ActiveSheet.Name = Target(lngcnt, levsFIName)
                    
                    If Workbooks(strFileNm).Sheets.Count >= 2 Then
                        '２番目のシート(未払費用)をアクティブにする
                        Workbooks(strFileNm).Sheets(2).Activate
                        'ダウンロードファイルのアクティブシートをこのブックにコピーする。
                        ActiveSheet.Copy After:=Workbooks(.Name).Sheets(.Sheets.Count)
                        'このファイルのアクティブシート(コピーされたシート)の名前を変える。
                        ActiveSheet.Name = D_MIBARAI_HIYO
                    End If
                Else
                    'ダウンロードファイルのアクティブシートをこのブックにコピーする。
                    ActiveSheet.Copy After:=Workbooks(.Name).Sheets(.Sheets.Count)
                    'このファイルのアクティブシート(コピーされたシート)の名前を変える。
                    ActiveSheet.Name = Target(lngcnt, levsFIName)
                End If
            End With
'=== 2006/05/18 Modified By Anpo End
        
            'ダウンロードファイルを閉じる。
            strbuf = Target(lngcnt, levsFIPass)
            strbuf = Mid(strbuf, InStrRev(strbuf, "\") + 1)
            Windows(strbuf).Close
        End If

    Next lngcnt

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncImportData = 0
    Exit Function
    
ErrHandler:
    '2006/12/18 DEL iida>
    fncImportData = -1
    'fncImportData = Err.Number
                
    With gusrErr
        .ModuleId = MODULE_NAME     'モージュールID
        .Procedure = PROCEDURE_NAME 'プロシージャID
        .MsgCode = ERR_MSGCD_VB 'メッセージ区分
        '<2006/12/18 UPDATE S iida>
        If .ErrNum = 0 Then
            .ErrNum = ERRMSG_IMPORT
        End If
        '.ErrNum = Err.Number
        '<2006/12/18 UPDATE S iida>
        .ErrDescript = Err.Description
        '<2006/12/18 UPDATE S iida>
        .MsgNaiyou = ""
        '.MsgNaiyou = ERRMSG_IMPORT  'メッセージ内容
        '<2006/12/18 UPDATE E iida>
        .MsgSyousai = Target(lngcnt, levsFIName)      'メッセージ詳細
        fncWriteErrSheet
    End With
    
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：処理対象のシートを追加
'
'引　　数　：ARG1   I   Target()    String  ダウンロードファイル情報
'
'戻り値　　：なし
'
'機能説明　：入力されたダウンロードファイルに必要なシートのみ追加する。
'
'更新履歴　：2006/01/24 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    入力されたダウンロードファイルに対応する。
'　　　　　：2006/11/28 SRA IIDA        中間シートを追加しない（仕様変更）
'
'*************************************************************************
Public Function fncAddSheets(ByRef Target() As String) As Long

    Const PROCEDURE_NAME As String = "fncAddSheets"
    
    On Error GoTo ErrHandler
    
    Dim lngcnt  As Long
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncAddSheets = -1
    
    lngcnt = Sheets.Count
    
    If Trim(Target(IDX_PRICES_TRUST, levsFIPass)) <> vbNullString Then
        
        '<2006/12/04 DEL IIDA S>
'        Sheets.Add Before:=Sheets(SHEET_ERR1)
'        ActiveSheet.Name = SHEET_WORK
'        lngcnt = lngcnt + 1
        
        Sheets.Add Before:=Sheets(SHEET_ERR1)
        ActiveSheet.Name = SHEET_UPD1
        lngcnt = lngcnt + 1
        '<2006/12/04 DEL IIDA E>
    End If
    
    If Trim(Target(IDX_PRC_BY_ASSET, levsFIPass)) <> vbNullString Then
        Sheets.Add Before:=Sheets(SHEET_ERR1)
        ActiveSheet.Name = SHEET_UPD2
        lngcnt = lngcnt + 1
    End If
        
    If Trim(Target(IDX_PRC_SPCASSET, levsFIPass)) <> vbNullString Then
        Sheets.Add Before:=Sheets(SHEET_ERR1)
        ActiveSheet.Name = SHEET_UPD3
        lngcnt = lngcnt + 1
    End If
    
    Call fncSetSheetsVisible
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncAddSheets = 0
    Exit Function
    
ErrHandler:
    fncAddSheets = -1
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function




