Attribute VB_Name = "basCheck"
Option Explicit

'*************************************************************************
'
'プロジェクト名：新顧問料契約管理システム・WEB時価ﾃﾞｰﾀ取込処理
'
'オブジェクト名：basCheck
'
'機能概要　：チェック機能
'
'更新履歴　：2006/01/17 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    作成前チェックの戻り値を修正
'　　　　　：2006/01/27 SRA T.Tanaka    ダウンロードファイル未入力を認める。
'　　　　　：2006/01/27 SRA T.Tanaka    メッセージ文字列を修正。
'　　　　　：2006/05/09 SRA H.Anpo      TCSB,JTSB対応
'
'*************************************************************************
Private Const MODULE_NAME As String = "basCheck"

'*************************************************************************
'関数名　　：作成前チェック
'
'引　　数　：ARG1   I   ArrFile     Strinng() ダウンロードファイル情報
'
'戻り値　　：なし
'
'機能説明　：サンプル
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    チェックがエラーならば、エラーを起こす。
'　　　　　：2006/12/15 SRA Iida　　　 　メッセージ共通化
'*************************************************************************
Public Function fncChkMakeData(ByRef ArrFile() As String) As Long
    
    Const PROCEDURE_NAME As String = "fncChkMakeData"
    
    On Error GoTo ErrHandler
    
    Dim lngRet      As Long
    Dim strmsg      As String
    Dim strTitle    As String
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkMakeData = -1
    
    Do
        With Sheets(SHEET_MAIN)
                        
            '基準年月日
            lngRet = fncChkDate(.txtDate, strmsg, strTitle)
            If lngRet <> 0 Then
                GoTo ErrHandler
            End If
            
            '信託銀行コード
            lngRet = fncChkBank(.cmbBank, strmsg, strTitle)
            If lngRet <> 0 Then
                GoTo ErrHandler
            End If
            
            'ダウンロードファイル
            lngRet = fncChkFile(ArrFile, strmsg, strTitle)
            If lngRet <> 0 Then
                GoTo ErrHandler
            End If

            glngDate = .txtDate.Text

        End With
    Loop Until True
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkMakeData = 0
    
    Exit Function
ErrHandler:
    fncChkMakeData = -1
    '2006/12/18 DEL iida>
    'fncChkMakeData = Err.Number
    If strmsg <> vbNullString Then
        MsgBox strmsg, vbExclamation, PGM_ID
    End If
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：日付チェック
'
'引　　数　：ARG1   I   Target  Strinng 入力テキスト
'　　　　　：ARG2   O   ErrMsg  Strinng エラーメッセージ
'　　　　　：ARG3   O   Title   Strinng メッセージタイトル
'
'戻り値　　：エラー番号
'
'機能説明　：YYYYMMDD形式の日付チェックを行う。
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'更新履歴　：2006/12/18 SRA Iida        MSG共通化
'*************************************************************************
Private Function fncChkDate(ByVal Target As String, _
                            ByRef ErrMsg As String, ByRef Title As String) As Long
                            
    Const PROCEDURE_NAME As String = "fncChkDate"

    On Error GoTo ErrHandler
    
    Dim StrRet      As String
    Dim lngerrno    As Long   '<2006/12/18 ADD IIDA>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDate = -1
    
    '<2006/12/18 UPDATE S IIDA>
    Select Case Len(Target)
        Case LEN_NULL
            lngerrno = MSG_NOT_ENTER
        Case LEN_DATE
            If IsDate(Format(Target, "####/##/##")) Then
            Else
                lngerrno = MSG_NOT_DATE
            End If
        Case Is < 8
            lngerrno = MSG_LEN_DATE
        Case Else
            lngerrno = MSG_NOT_DATE
    End Select
    If lngerrno <> 0 Then
        ErrMsg = gfunc_ErrorMsg(3, lngerrno, ERRMSG5_KIJYUNBI, "", False)
        '<2006/12/25 DEL S iida>
        'Title = MSG_TTL_DATE
        '<2006/12/25 DEL E iida>
        GoTo ErrHandler
    End If
    
'    Select Case Len(Target)
'        Case LEN_NULL
'            StrRet = MSG_NOT_ENTER
'        Case LEN_DATE
'            If IsDate(Format(Target, "####/##/##")) Then
'            Else
'                StrRet = MSG_NOT_DATE
'            End If
'        Case Else
'            StrRet = MSG_LEN_DATE
'    End Select
    
'    If StrRet <> vbNullString Then
'        ErrMsg = StrRet
'        Title = MSG_TTL_DATE
'        Err.Raise ERR_CHECK, , StrRet
'    End If
    '<2006/12/18 UPDATE E IIDA>
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDate = 0
    Exit Function
    
ErrHandler:
    fncChkDate = -1
    '<2006/12/18 DEL iida>
    'fncChkDate = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：信託銀行コードチェック
'
'引　　数　：ARG1   I   Target  Object  選択コンボボックス
'　　　　　：ARG2   O   ErrMsg  Strinng エラーメッセージ
'　　　　　：ARG3   O   Title   Strinng メッセージタイトル
'
'戻り値　　：エラー番号
'
'機能説明　：信託銀行コードが選択されているかチェックを行う。
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'更新履歴　：2006/12/18 SRA Iida        MSG共通化
'*************************************************************************
Private Function fncChkBank(ByVal Target As ComboBox, _
                            ByRef ErrMsg As String, ByRef Title As String) As Long
    
    Const PROCEDURE_NAME As String = "fncChkBank"

    On Error GoTo ErrHandler
    
    Dim StrRet       As String
    Dim lngerrno     As Long    '<2006/12/18 ADD iida>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkBank = -1
    
    '<2006/12/18 UPDATE S iida>
    If Target.ListIndex = -1 Then
        lngerrno = MSG_NOT_SEL_C
    End If

    If lngerrno <> 0 Then
        ErrMsg = gfunc_ErrorMsg(3, lngerrno, ERRMSG1_BNKCD, "", False)
        '<2006/12/25 DEL iida>
        'Title = MSG_TTL_BANK
        GoTo ErrHandler
    End If
    
'    If Target.ListIndex = -1 Then
'        StrRet = MSG_NOT_SEL_C
'    End If
'
'    If StrRet <> vbNullString Then
'        ErrMsg = StrRet
'        Title = MSG_TTL_BANK
'        Err.Raise ERR_CHECK, , StrRet
'    End If
    '<2006/12/18 UPDATE E iida>
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkBank = 0
    Exit Function
    
ErrHandler:
    fncChkBank = -1
    '<2006/12/18 DEL iida>
    'fncChkBank = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：ダウンロードファイルチェック
'
'引　　数　：ARG1   I   Target()    String  ダウンロードファイル情報
'　　　　　：ARG2   O   ErrMsg      Strinng エラーメッセージ
'　　　　　：ARG3   O   Title       Strinng メッセージタイトル
'
'戻り値　　：エラー番号
'
'機能説明　：信託銀行コードが選択されているかチェックを行う。
'
'更新履歴　：2006/01/18 SRA T.Tanaka    新規作成
'　　　　　：2006/01/27 SRA T.Tanaka    ダウンロードファイル未入力を認める。
'　　　　　：2006/01/27 SRA T.Tanaka    メッセージ文字列を修正。
'　　　　　：2006/05/09 SRA H.Anpo      TCSB,JTSB対応
'　　　　　：2006/12/18 SRA Iida        MSG共通化/名称変更に伴う対応
'*************************************************************************
Private Function fncChkFile(ByRef Target() As String, _
                            ByRef ErrMsg As String, ByRef Title As String) As Long
    
    Const PROCEDURE_NAME As String = "fncChkBank"

    On Error GoTo ErrHandler
    
    Dim lngcnt      As Long
    Dim StrRet      As String
    Dim lngerrno    As Long    '<2006/12/18 ADD iida>
    Dim strbuf      As String  '<2006/12/18 ADD iida>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkFile = -1
    
    strbuf = ""  '<2006/12/18 ADD iida>
    Do
        '未入力チェック
        '全て未入力の場合のみエラー
        For lngcnt = LBound(Target) To UBound(Target)
            StrRet = StrRet & Trim(Target(lngcnt, levsFIPass))
        Next lngcnt
        If StrRet = vbNullString Then
            '<2006/12/18 UPDATE S iida>
            StrRet = gfunc_ErrorMsg(3, MSG_NOT_ENTER, ERRMSG6_INPUTFILE, "", False)
            'StrRet = MSG_NOT_ENTER
            Exit Do
        Else
            StrRet = vbNullString
        End If
        
        '=== 2006/05/09 Added By Anpo Start
        '暫定対応
        '信託銀行コードが"MSB"以外の場合、信託時価以外のファイル指定はエラー
        If Sheets(SHEET_MAIN).cmbBank.Value <> LIST_ITEM_MSB Then
            For lngcnt = LBound(Target) To UBound(Target)
                If Target(lngcnt, levsFIName) <> D_PRICES_TRUST Then
                    If Trim(Target(lngcnt, levsFIPass)) <> vbNullString Then
                        '<2006/12/18 UPDATE S iida>
                        strbuf = ""
                        Select Case lngcnt
                            Case 1
                                strbuf = M_PRICES_TRUST
                            Case 3
                                strbuf = M_PRC_SPCASSET
                            Case Else
                                strbuf = M_PRC_BY_ASSET
                        End Select
                        StrRet = gfunc_ErrorMsg(3, MSG_NO_SUPPORT, ERRMSG6_INPUTFILE, "", False) & vbCrLf & strbuf
                        'StrRet = MSG_NO_SUPPORT & vbCrLf & Target(lngcnt, levsFIName)
                        '<2006/12/18 UPDATE E iida>
                        Exit Do
                    End If
                End If
            Next lngcnt
        End If
        '=== 2006/05/09 Added By Anpo End
        
        'ファイルの形式チェック
        For lngcnt = LBound(Target) To UBound(Target)
            '<2006/12/18 ADD iida>
            If Trim(Target(lngcnt, levsFIPass)) <> vbNullString Then
                '=== 2006/05/09 MOdified By Anpo Start
'                If StrConv(Right$(Target(lngCnt, levsFIPass), 4), vbUpperCase) <> ".XLS" Then
'                    StrRet = StrRet & "、" & Target(lngCnt, levsFIName)
'                End If
                If Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_MSB Then
                    If StrConv(Right$(Target(lngcnt, levsFIPass), 4), vbUpperCase) <> ".XLS" Then
                        '<2006/12/18 ADD iida>
                        strbuf = ""
                        Select Case lngcnt
                            Case 1
                                strbuf = M_PRICES_TRUST
                            Case 3
                                strbuf = M_PRC_SPCASSET
                            Case Else
                                strbuf = M_PRC_BY_ASSET
                        End Select
                        StrRet = StrRet & "、" & strbuf
                        'StrRet = StrRet & "、" & Target(lngcnt, levsFIName)
                    End If
                ElseIf Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_JTS Then
                    If StrConv(Right$(Target(lngcnt, levsFIPass), 4), vbUpperCase) <> ".XLS" Then
                        '<2006/12/18 ADD iida>
                        strbuf = ""
                        Select Case lngcnt
                            Case 1
                                strbuf = M_PRICES_TRUST
                            Case 3
                                strbuf = M_PRC_SPCASSET
                            Case Else
                                strbuf = M_PRC_BY_ASSET
                        End Select
                        StrRet = StrRet & "、" & strbuf
                        'StrRet = StrRet & "、" & Target(lngcnt, levsFIName)
                    End If
                ElseIf Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_TCB Then
                    If StrConv(Right$(Target(lngcnt, levsFIPass), 4), vbUpperCase) <> ".CSV" Then
                        '<2006/12/18 ADD iida>
                        strbuf = ""
                        Select Case lngcnt
                            Case 1
                                strbuf = M_PRICES_TRUST
                            Case 3
                                strbuf = M_PRC_SPCASSET
                            Case Else
                                strbuf = M_PRC_BY_ASSET
                        End Select
                        StrRet = StrRet & "、" & strbuf
                        'StrRet = StrRet & "、" & Target(lngcnt, levsFIName)
                    End If
                End If
                '=== 2006/05/09 MOdified By Anpo End
'                If StrConv(Right$(Target(lngCnt, levsFIPass), 4), vbUpperCase) <> ".XLS" Then
            End If
        Next lngcnt
        If StrRet <> vbNullString Then
            StrRet = gfunc_ErrorMsg(3, MSG_NOT_EXCEL, ERRMSG6_INPUTFILE, "", False) & vbCrLf & Mid(StrRet, 2)
            'StrRet = MSG_NOT_EXCEL & vbCrLf & Mid(StrRet, 2)
            Exit Do
        End If
        
        'ファイルの存在チェック
        For lngcnt = LBound(Target) To UBound(Target)
            If Trim(Target(lngcnt, levsFIPass)) <> vbNullString Then
                If Dir(Target(lngcnt, levsFIPass)) = vbNullString Then
                    '<2006/12/18 UPDATE S iida>
                    strbuf = ""
                    Select Case lngcnt
                        Case 1
                            strbuf = M_PRICES_TRUST
                        Case 3
                            strbuf = M_PRC_SPCASSET
                        Case Else
                            strbuf = M_PRC_BY_ASSET
                    End Select
                    StrRet = StrRet & "、" & strbuf
                    'StrRet = StrRet & "、" & Target(lngcnt, levsFIName)
                    '<2006/12/18 UPDATE E iida>
                End If
            End If
        Next lngcnt
        If StrRet <> vbNullString Then
            '<2006/12/18 UPDATE S iida>
            StrRet = gfunc_ErrorMsg(3, MSG_NOT_EXIST, ERRMSG6_INPUTFILE, "", False) & vbCrLf & Mid(StrRet, 2)
            'StrRet = MSG_NOT_EXIST & vbCrLf & Mid(StrRet, 2)
            Exit Do
        End If
    
    Loop Until True
    
    If StrRet <> vbNullString Then
        ErrMsg = StrRet
        '<2006/12/25 DEL iida>
        'Title = MSG_TTL_FILE
        '<2006/12/18 UPDATE iida>
        GoTo ErrHandler
        'Err.Raise ERR_CHECK, , StrRet
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
     fncChkFile = 0
    Exit Function
    
ErrHandler:
    fncChkFile = -1
    '<2006/12/18 DEL iida>
    'fncChkFile = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'<2006/12/22 DEL S iida>
''*************************************************************************
''
''関数名　　：エラーの致命度判定
''
''引　　数　：ARG1   O   ErrMsg      String  エラーメッセージ
''　　　　　：ARG2   O   Title       String  メッセージタイトル
''　　　　　：ARG3   I   FileInfo()  String  ダウンロードファイル情報
''
''戻り値　　：エラー番号
''
''機能説明　：信託銀行コードが選択されているかチェックを行う。
''
''更新履歴　：2006/01/20 SRA T.Tanaka    新規作成
''　　　　　：2006/01/28 SRA T.Tanaka    入力されたダウンロードファイルのみ処理する。
''　　　　　：2006/01/30 SRA T.Tanaka    エラーシートの判定を修正。
''　　　　　：2006/02/17 SRA T.Tanaka    メッセージボックスのために致命度判定にも用いるため、関数名を変更。
''
''*************************************************************************
'Public Function fncChkErrorSheet(ByRef ErrMsg As String, _
'                                 ByRef Title As String) As Long
'
'    Const PROCEDURE_NAME As String = "fncChkErrorSheet"
'
'    On Error GoTo ErrHandler
'
'    Dim lngRet  As Long
'    Dim strmsg  As String
'    Dim lngrow  As Long
'    Const COL_ERR_NUMBER As Long = 6
'
'    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    strmsg = MSG_NOT_MAKE2
'    With Sheets(SHEET_ERR1)
'
'        lngrow = 1      'Header はチェックしない
'
'        Do
'            lngrow = lngrow + 1
'            Select Case .Cells(lngrow, COL_ERR_NUMBER)
'            Case ERR_CHECK_FILE     'ファイル形式チェックエラー
'            Case ERRMSG_NODATA_SHEET  'ダウンロードファイル対象件数０件
'            Case ERR_NO_DATA_DB     'KK01などの検索件数０件
'            Case ERR_NO_DATA_REC    '検索件数０件で Continue する場合
'            Case ERR_NO_DATA_COL    'コレクションにデータが存在しない
'                                    '資産別時価・集計分類対応表・口座未設定
'            Case ERR_NO_DATA_COL2   '資産別時価・集計分類未設定
'            Case ERR_NO_DATA_COL3   '特定資産時価・約定受渡区分不正
'            Case ERR_OUT_TARGET3    '特定資産時価・対象外
'            Case ERR_NO_SHEET       'Uploadシートが存在しない。
'            Case ERR_NO_SHISAN      '資産別時価・資産未登録
'            Case vbNullString
'                Exit Do
'            Case Else
'                Err.Raise ERR_CHECK
'            End Select
'
'        Loop Until False
'    End With
'
'    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    Exit Function
'ErrHandler:
''    Select Case Err.Number
''    Case 9
''    Case ERR_CHECK
''    End Select
'    fncChkErrorSheet = ERR_CHECK
'    ErrMsg = MSG_NOT_MAKE0 & vbCrLf & strmsg
'    Title = MSG_TTL_EXEC
'
'    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
'End Function
'<2006/12/22 DEL E iida>

