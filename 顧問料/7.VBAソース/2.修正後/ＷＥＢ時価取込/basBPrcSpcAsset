Attribute VB_Name = "basBPrcSpcAsset"
Option Explicit

'*************************************************************************
'
'プロジェクト名：新顧問料契約管理システム・WEB時価ﾃﾞｰﾀ取込処理
'
'オブジェクト名：basBPrcSpcAsset
'
'機能概要　：特定資産時価ビジネスロジック
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/26 SRA T.Tanaka    DBアクセスをADOに統一
'　　　　　：2006/12/04 SRA Iida        DB変更・共通化・仕様追加・資産コード修正
'　　　　　：2013/04/10 GUT 王青龍 顧問バック更改対応
'*************************************************************************
Private Const MODULE_NAME As String = "basBPrcSpcAsset"

Private Enum COL_D
    levsCDfandNo = 1    'ファンドＮＯ
    levsCDYakUke        '約受区分
'残高区分
    levsCDZnDate = 4    '残高基準年月日
    levsCDAssetC        'アセットクラスコード

'アセットクラス日本語名称
'サブアセットクラスコード
'サブアセットクラス日本語名称
'外部銘柄コード
'銘柄名称
    levsCDMeigara = 10   '<2006/12/10 ADD IIDA>
'数量残高
'数量単位
'時価基準日
'ＯＣ時価
    levsCUHcGaku = 15   'ＨＣ評価金額
'最新更新日
End Enum
 
'<2006/12/04 MOV S IIDA> 定義共通　CONSTへ
'Private Enum COL_U
'    levsCUFundNo = 1    'ファンドＮＯ
'    levsCUKouzaNo        '口座番号
'    levsCUShisan        '資産コード
'    levsCUYYYYMM        '基準日
'    levsCUJikaGk        '時価
'End Enum
'<2006/12/04 MOV E IIDA>

'<2006/12/04 UPDATE S IIDA> KK01→VW_DT001D
'------------<顧問バック更改対応 2013/04/10 GUT王青龍 START> ------------
'Public Const VW_YAKUJYO        As String = "1"         '（約定ベース）
'Public Const VW_UKEWATASHI     As String = "0"         '（受渡ベース）
Public Const VW_YAKUJYO        As String = "T"         '（約定ベース）
Public Const VW_UKEWATASHI     As String = "S"         '（受渡ベース）
'------------<顧問バック更改対応 2013/04/10 GUT王青龍 END> ------------
'<2006/12/04 DEL S IIDA> KK01→VW_DT001D
''KK01.約定受渡区分
'Private mcolFILLER  As Collection
'Private Const FILLER_YAKUJYO        As String = " "         '（約定ベース）
'Private Const FILLER_UKEWATASHI     As String = "1"         '（受渡ベース）
'<2006/12/04 DEL E IIDA> KK01→VW_DT001D

'<2006/12/04 UPDATE E IIDA>
'特定資産時価シート・約受区分
Private Const YAKUUKE_YAKUJYO       As String = "1"         '（約定ベース）
Private Const YAKUUKE_UKEWATASHI    As String = "2"         '（受渡ベース）
'<2006/12/04 DEL  IIDA>
''前月の特定資産の件数
'Private mcolJikaCnt As Collection
Private mcolkouzaData As Collection      '<2006/12/07 ADD  IIDA>

'<2006/12/04 UPDATE S iida>
Private ArrData2()  As COL_SPShisan

Type COL_SPShisan
    levsCDKouzaNo_P     As String       '口座番号
    levsCDFandNo_P      As String       'ファンドＮＯ
    levsCDFandName_P    As String       'ファンド名
    levsCDYakUke_P      As String       '約受区分
    levsCDMeigara_P     As String       '銘柄
    levsCUHcGaku_P      As Currency     'ＨＣ評価金額
    levsCDShisanBR_P    As String       '資産分類
    levsCDShisanCD_P    As String       '資産コード
End Type

'*************************************************************************
'関数名　　：ダウンロードデータの絞り込む
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：取込条件の対象外のデータを削除する。
'
'更新履歴　：2006/01/19 SRA T.Tanaka    新規作成
'　　　　　：2006/01/30 SRA T.Tanaka    ファイル形式チェックの追加に伴う変更
'
'*************************************************************************
Private Function fncPickData() As Long
    
    Const PROCEDURE_NAME As String = "fncPickData"
    
    On Error GoTo ErrHandler
    
    Dim lngRet  As Long
    Dim lngrow  As Long
    Dim blnFlg(2) As Boolean
    Dim lngcnt   As Long         '<2006/12/18 ADD iida>

    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncPickData = -1
    
    lngcnt = 0
    lngrow = fncGetRowHeader(Sheets(D_PRC_SPCASSET))
    If lngrow = 0 Then
        '<2006/12/18 UPDATE iida>
        Call gfunc_ErrorMsg(3, ERR_CHECK_FILE, ERRMSG6_INPUTFILE, "", True)
        GoTo ErrHandler
        'Err.Raise ERR_CHECK_FILE
    End If
    
    lngRet = fncChkDataFormat(lngrow)
    If lngRet <> 0 Then
        '<2006/12/18 UPDATE iida>
        Call gfunc_ErrorMsg(3, ERR_CHECK_FILE, ERRMSG6_INPUTFILE, "", True)
        GoTo ErrHandler
        'Err.Raise ERR_CHECK_FILE
    End If
    
    lngrow = lngrow + 1
        
    With Sheets(D_PRC_SPCASSET)
        

        '=== 2006/05/09 Modified By Anpo Start
'        Do
'
'            Erase blnFlg
'
'            '残高基準年月日　＝　入力画面・基準年月日
'            If .Cells(lngRow, levsCDZnDate) = glngDate Then
'                blnFlg(1) = True
'            End If
'            'アセットクラスコード　＝　'0980' or '1050' or '1060'
'            Select Case .Cells(lngRow, levsCDAssetC)
'            Case "0980", "1050", "1060"
'                blnFlg(2) = True
'            End Select
'
'            If blnFlg(1) And blnFlg(2) Then
'                lngRow = lngRow + 1
'            Else
'                .Range(lngRow & ":" & lngRow).Delete
'            End If
'
'        Loop Until .Cells(lngRow, levsCCComDat) = DET_FOOTER
        
        If Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_MSB Then
            Do
         
                Erase blnFlg
                
                '残高基準年月日　＝　入力画面・基準年月日
                If .Cells(lngrow, levsCDZnDate) = glngDate Then
                    blnFlg(1) = True
                End If
                'アセットクラスコード　＝　'0980' or '1050' or '1060'
                Select Case .Cells(lngrow, levsCDAssetC)
                Case "0980", "1050", "1060"
                    blnFlg(2) = True
                End Select
            
                If blnFlg(1) And blnFlg(2) Then
                    lngrow = lngrow + 1
                Else
                    .Range(lngrow & ":" & lngrow).Delete
                End If
                
                '<2006/12/18 ADD S iida>
                If blnFlg(1) = True And blnFlg(2) = True Then
                    lngcnt = lngcnt + 1
                End If
                '<2006/12/18 ADD E iida>
        
            Loop Until .Cells(lngrow, levsCCComDat) = DET_FOOTER
        
        ElseIf Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_JTS Then
            Do
         
                Erase blnFlg
                
                '残高基準年月日　＝　入力画面・基準年月日
                If .Cells(lngrow, levsCDKjDate_jts) = glngDate Then
                    blnFlg(1) = True
                End If
            
                If blnFlg(1) Then
                    lngrow = lngrow + 1
                Else
                    .Range(lngrow & ":" & lngrow).Delete
                End If
                
                '<2006/12/18 ADD S iida>
                If blnFlg(1) = True Then
                    lngcnt = lngcnt + 1
                End If
                '<2006/12/18 ADD E iida>
        
            Loop Until .Cells(lngrow, levsCDKjDate_jts) = DET_FOOTER_JTS
        
        ElseIf Sheets(SHEET_MAIN).cmbBank.Value = LIST_ITEM_TCB Then
            Do
         
                Erase blnFlg
                
                '残高基準年月日　＝　入力画面・基準年月日
                If .Cells(lngrow, levsCDKjDate_tcb) = glngDate Then
                    blnFlg(1) = True
                End If
                'ディスクロ科目コードの上４桁が "#001" か "#002" で "#002100100000" 以外
                If (.Cells(lngrow, levsCDDskCd_tcb) = "#001" Or _
                   .Cells(lngrow, levsCDDskCd_tcb) = "#002") And _
                   .Cells(lngrow, levsCDDskCd_tcb) <> "#002100100000" Then
                    blnFlg(2) = True
                End If
                If blnFlg(1) And blnFlg(2) Then
                    lngrow = lngrow + 1
                Else
                    .Range(lngrow & ":" & lngrow).Delete
                End If
                
                '<2006/12/18 ADD S iida>
                If blnFlg(1) = True And blnFlg(2) = True Then
                    lngcnt = lngcnt + 1
                End If
                '<2006/12/18 ADD E iida>
        
            Loop Until .Cells(lngrow, levsCDKjDate_tcb) = DET_FOOTER_TCB
        
        End If
        '=== 2006/05/09 Modified By Anpo End
        
        '<2006/12/18 ADD S iida>
        '対象ﾃﾞｰﾀが残っているかチェック
        If lngcnt = 0 Then
            Call gfunc_ErrorMsg(3, ERRMSG_NODATA_SHEET, ERRMSG6_INPUTFILE, "", True)
            GoTo ErrHandler
        End If
        '<2006/12/18 ADD S iida>
        
    End With
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncPickData = 0
    Exit Function
    
ErrHandler:
    '<2006/12/18 UPDATE iida>
    fncPickData = -1
    'fncPickData = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：アップロード用シート作成
'
'引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
'
'戻り値　　：エラー番号
'
'機能説明　：データの取得と集計を行う。
'
'更新履歴　：2006/01/20 SRA T.Tanaka    新規作成
'
'*************************************************************************
Public Function fncMakePrcSpcAsset() As Long
                
    Const PROCEDURE_NAME As String = "fncMakePrcSpcAsset"
    
    On Error GoTo ErrHandler
    
    Dim lngRet  As Long
    Dim strsql  As String
    Dim strcon  As String
    Dim recSel  As ADODB.Recordset
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakePrcSpcAsset = -1
    
    Do
        lngRet = fncPickData
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit DO
        End If
        
        lngRet = fncSetData
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit DO
        End If
        
        lngRet = fncCalcData
        If lngRet <> 0 Then
            '<2006/12/18 UPDATE iida>
            GoTo ErrHandler
            'Exit DO
        End If
        
    Loop Until True
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakePrcSpcAsset = 0
    Exit Function
    
ErrHandler:
    fncMakePrcSpcAsset = -1
    '<2006/12/18 DEL iida>
    'fncMakePrcSpcAsset = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：データの取得
'
'引　　数　：なし
'
'戻り値　　：エラー番号
'
'機能説明　：「ファンドＮＯ」から「口座番号」・「特定期間ＩＤ｣を取得する。
'
'更新履歴　：2006/01/20 SRA T.Tanaka    新規作成
'　　　　　：2006/01/26 SRA T.Tanaka    DBアクセスをADOに統一
'　　　　　：2006/01/28 SRA T.Tanaka    エラー処理(０件対応、メッセージ)の修正
'　　　　　：2006/01/31 SRA T.Tanaka    エラー処理(メッセージ)の修正
'　　　　　：2006/12/04 SRA Iida        DB変更・共通化・仕様追加
'*************************************************************************
Private Function fncSetData() As Long

    Const PROCEDURE_NAME As String = "fncSetData"
    
    On Error GoTo ErrHandler
    
    Dim lngcnt      As Long
    Dim strsql      As String
    Dim strcon      As String
    Dim recSel      As ADODB.Recordset
    'Dim strYYYYMM   As String  '2006/12/04 DEL iida>
    'Dim strZenGetu  As String  '2006/12/04 DEL iida>
    Dim strbikou    As String   '2006/12/04 ADD iida>
    Dim lngRet      As Long     '2006/12/04 ADD iida>
    Dim ArrFandNO()     As Variant      '<2006/12/18 ADD IIDA>
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncSetData = -1
    
    gusrErr.MsgNaiyou = ERRMSG0_FUNDNO  'メッセージ内容
    strbikou = ""
    strbikou = strbikou & D_PRC_SPCASSET
    Erase ArrFandNO
    strcon = fncGetTargetFundCode(Sheets(D_PRC_SPCASSET), ArrFandNO())
    If strcon = vbNullString Then
        '<2006/12/18 UPDATE iida>
        gusrErr.ErrNum = ERRMSG_NODATA_SHEET
        GoTo ErrHandler
        'Err.Raise ERRMSG_NODATA_SHEET
    Else
        '<2006/11/28 UPDATE S Iida> KK01→VW_DT001に変更
        strsql = ""
        strsql = strsql & fncGetConVWDT001D
        strsql = strsql & " AND TRIM(sintaku_bank_prtcd) IN (" & strcon & ")"
        strcon = strsql
        
        'strSql = strSql & fncGetConKK01
        'strSql = strSql & " AND TRIM(k.shintaku_kouza_bk) IN (" & strcon & ")"
        '<2006/11/28 UPDATE E Iida>
    End If
    
    gusrErr.MsgNaiyou = ERRMSG1_SELECT  'メッセージ内容
    '<2006/11/28 UPDATE S Iida> KK01→VW_DT001に変更
    strsql = ""
    strsql = strsql & " SELECT SINTAKU_BANK_PRTCD,SINTAKU_BANK_CD,PRTCD,NAME_RJ,YAKUJO_SHORI "
    strsql = strsql & " FROM VW_DT001D "
    strsql = strsql & strcon
    strsql = strsql & " Order by PRTCD "

    'strSql = strSql & " SELECT k.shintaku_kouza_bk,k.SHINTAKU_BK_CD,k.kouza_no"
    'strSql = strSql & " FROM kk01 k"
    'strSql = strSql & " Order by k.kouza_no"
    '<2006/11/28 UPDATE E Iida>
    Set recSel = Nothing
    cmADO.CommandText = StrConv(strsql, vbUpperCase)
    Set recSel = New ADODB.Recordset
    recSel.Open StrConv(strsql, vbUpperCase), cnAdo, adOpenKeyset, adLockOptimistic

    If recSel.EOF Then
        recSel.Close
        Set recSel = Nothing
        '<2006/12/27 ADD S iida>
        gusrErr.ErrNum = ERRMSG_NO_DATA_KOUZA
        strbikou = ""
        strbikou = gfunc_ErrorMsg(3, ERRMSG_NO_LOOK_KOUZA, "", "", False)
        '<2006/12/27 ADD E iida>
        '<2006/12/18 UPDATE>
        GoTo ErrHandler
        'Err.Raise ERR_NO_DATA_DB
    Else
        '口座データ格納
        '<2006/12/07 ADD S IIDA>
        If fncSetKouza(recSel, mcolkouzaData) = False Then GoTo ErrHandler
    End If
    
    '<2006/12/15 ADD S IIDA>
    '調整資産独自処理
    If fncMakeTarget() = False Then GoTo ErrHandler
'    If lngRet <> 0 Then
'        Err.Raise lngRet
'    End If

    '<2006/12/07 DEL S iida >
'    strYYYYMM = glngDate \ 100
'    strZenGetu = DateAdd("D", -1, Format(strYYYYMM, "0000/00") & "/01")
'    strZenGetu = Format(strZenGetu, "YYYYMMDD")

'    gusrErr.MsgNaiyou = ERRMSG0_FUNDNO   'メッセージ内容
'    strcon = fncGetTargetFundCode(Sheets(D_PRC_SPCASSET))
'    If strcon = vbNullString Then
'        Err.Raise ERR_NO_DATA_SHEET
'    Else
'        strSql = ""
'        strSql = strSql & fncGetConKK01
'        strSql = strSql & " AND TRIM(k.shintaku_kouza_bk) IN (" & strcon & ")"
'        strcon = strSql
'    End If
'
'    '約定受渡区分            KK01
'    '前月の特定資産の件数参照 TOKU_KOUZA_JIKA
'    gusrErr.MsgNaiyou = ERRMSG0_NUMCD   'メッセージ内容
'    strSql = ""
'    strSql = strSql & " SELECT DISTINCT"
'    strSql = strSql & " K.KOUZA_NO"
'    strSql = strSql & ",K.FILLER_2_1"
'    strSql = strSql & ",COUNT(T.KOUZA_NO)"
'    strSql = strSql & " FROM KK01 K LEFT JOIN"
'    strSql = strSql & " (SELECT KOUZA_NO FROM TOKU_KOUZA_JIKA"
'    strSql = strSql & "  WHERE KIJUN_YMD = " & strZenGetu & ") T"
'    strSql = strSql & " ON K.KOUZA_NO = T.KOUZA_NO"
'    strSql = strSql & strcon
'    strSql = strSql & " GROUP BY K.KOUZA_NO,K.FILLER_2_1"
'    cmADO.CommandText = StrConv(strSql, vbUpperCase)
'    Set recSel = cmADO.Execute
'
'
'    If recSel.EOF Then
'        recSel.Close
'        Set recSel = Nothing
'        Err.Raise ERR_NO_DATA_DB
'    Else
'        Call fncSetCollection(recSel, mcolFILLER, 1)
'        Call fncSetCollection(recSel, mcolJikaCnt, 2)
'        recSel.Close
'        Set recSel = Nothing
'    End If
'
'    gusrErr.MsgNaiyou = ERRMSG3_SELECT   'メッセージ内容
'    strSql = ""
'    strSql = strSql & " SELECT DISTINCT"
'    strSql = strSql & " k.shintaku_kouza_bk"
'    strSql = strSql & ",k.kouza_no"
'    strSql = strSql & ",t.toku_keisan_kikan_id"
'    strSql = strSql & "," & strYYYYMM
'    strSql = strSql & " FROM kk01 k LEFT JOIN toku_keisan_kikan t"
'    strSql = strSql & " ON k.kouza_no = t.kouza_no"
'    strSql = strSql & strcon
'    strSql = strSql & " AND (" & glngDate & " BETWEEN t.TOKU_KEISAN_KIKAN_FROM AND t.TOKU_KEISAN_KIKAN_TO"
'    strSql = strSql & " OR t.TOKU_KEISAN_KIKAN_TO IS NULL)"
'    strSql = strSql & " Order by k.kouza_no"
'    cmADO.CommandText = StrConv(strSql, vbUpperCase)
'    Set recSel = cmADO.Execute
    '<2006/12/07 DEL E iida >
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncSetData = 0
    Exit Function
    
ErrHandler:
    fncSetData = -1
    'fncSetData = Err.Number
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_ORACLE     'メッセージ区分
        .MsgSyousai = M_PRC_SPCASSET
        '<2006/12/27 ADD S iida>
        If Err.Number = 0 Then
            If .ErrNum = 0 Then
                .ErrNum = Err.Number
            End If
        End If
        '<2006/12/27 ADD E iida>
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：データの集計
'
'引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
'
'戻り値　　：エラー番号
'
'機能説明　：データの取得と集計を行う。
'
'更新履歴　：2006/01/20 SRA T.Tanaka    新規作成
'　　　　　：2006/01/30 SRA T.Tanaka    ファンドＮＯを列削除
'　　　　　：2006/12/04 SRA Iida        DB変更・共通化・仕様追加
'*************************************************************************
Public Function fncCalcData() As Long
                
    Const PROCEDURE_NAME As String = "fncCalcData"
    
    On Error GoTo ErrHandler
    
    Dim lngrow          As Long
    Dim blnret          As Boolean
    Dim strKouzaNO      As String
    Dim strbikou        As String
    Dim lngucnt         As Long
    Dim rngArea         As Range

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncCalcData = -1
       
    lngrow = 1
    lngucnt = 0
    For lngrow = 1 To UBound(ArrData2)
        With Sheets(SHEET_UPD3)
            gusrErr.ErrNum = 0
            lngucnt = lngucnt + 1
            .Cells(lngucnt, levsCUfandno) = ArrData2(lngrow).levsCDFandNo_P     'ファンドNO
            .Cells(lngucnt, levsCUBankCd) = Sheets(SHEET_MAIN).cmbBank.Value    '信託銀行
            .Cells(lngucnt, levsCUKouzaNo) = ArrData2(lngrow).levsCDKouzaNo_P
            .Cells(lngucnt, levsCUFandName) = ArrData2(lngrow).levsCDFandName_P
            .Cells(lngucnt, levsCUYakuKBN) = ArrData2(lngrow).levsCDYakUke_P
            .Cells(lngucnt, levsCUSisanBr) = ArrData2(lngrow).levsCDShisanBR_P
            .Cells(lngucnt, levsCUSisanCd) = ArrData2(lngrow).levsCDShisanCD_P
            .Cells(lngucnt, levsCUJika) = ArrData2(lngrow).levsCUHcGaku_P
            .Cells(lngucnt, levsCUDate) = glngDate
                
Continue:
            With gusrErr
                If .ErrNum <> 0 Then
                    .ModuleId = MODULE_NAME         'モジュールID
                    .Procedure = PROCEDURE_NAME     'プロシージャID
                    .MsgCode = ERR_MSGCD_USER       'メッセージ区分
                    .MsgSyousai = strbikou          'メッセージ詳細
                    .ErrDescript = Err.Description
                    fncWriteErrSheet
                End If
            End With
            
        End With
    Next
    
    '時価列の表示形式を変更
    With Sheets(SHEET_UPD3)
        .Columns("G:G").NumberFormatLocal = "0000"
        .Columns("C:C").NumberFormatLocal = "0000000"
        .Columns("I:I").NumberFormatLocal = "#,##0"
    End With
    Sheets(SHEET_UPD3).Activate
    Range("A1:I65535").Sort Key1:=Columns("A"), Key2:=Columns("G")
    blnret = Range("A1:I65535").Columns.AutoFit
    Sheets(SHEET_UPD3).Visible = False
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncCalcData = 0
    Exit Function
    
ErrHandler:
    fncCalcData = -1
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_VB         'メッセージ区分
        .MsgNaiyou = ERRMSG_CALC_DATA   'メッセージ内容
        .MsgSyousai = strbikou          'メッセージ詳細
        .ErrNum = Err.Number
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With
    
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)

End Function

'*************************************************************************
'関数名　　：fncMakeTarget
'
'引　　数　：なし
'
'戻り値　　：エラー番号
'
'機能説明　：ﾀﾞｳﾝﾛｰﾄﾞﾌｧｲﾙﾃﾞｰﾀの集計ﾃﾞｰﾀ格納　（調整資産別時価用）
'
'更新履歴　：2006/12/10 SRA Iida    新規作成
'
'*************************************************************************
Private Function fncMakeTarget() As Boolean
    
    Const PROCEDURE_NAME As String = "fncMakeTarget"
                                               
    On Error GoTo ErrHandler
    
    Dim blnret          As Boolean
    Dim lngrow          As Long
    Dim lngcnt          As Long
    Dim strKouzaNO      As String
    Dim rngKozaNo       As Range
    Dim strbikou        As String
    Dim lngTopRow       As Long
    Dim lngEndRow       As Long
    Dim ArrData1()      As Variant
    Dim lngucnt         As Long
    Dim lngDcnt         As Long
    Dim Arrkouza        As Variant
    Dim strFandname     As String
    Dim strMeigara      As String
    Dim strShisanBR     As String
    Dim strShisanCD     As String
    Dim stryakukbn      As String
    Dim strfandno       As String
    Dim curjika         As Currency

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakeTarget = False
    
    'ダウンロードファイル格納
    lngTopRow = fncGetRowHeader(Sheets(D_PRC_SPCASSET))
    lngEndRow = fncGetRowFooter(Sheets(D_PRC_SPCASSET))
    With Sheets(D_PRC_SPCASSET)
        Erase ArrData1
        ArrData1 = Range("A" & lngTopRow + 1 & ":" & "P" & lngEndRow - 1).Value
    End With
    
    lngDcnt = 0
    Erase ArrData2
    For lngrow = 1 To UBound(ArrData1)
       'ファンドNOで口座属性を検索
        If fncGetCollectionItem3(mcolkouzaData, ArrData1(lngrow, 1), Arrkouza) = True Then
        
            strKouzaNO = ""
            strKouzaNO = Arrkouza(2)
            strbikou = ""
            strbikou = strbikou & M_PRC_SPCASSET
            strbikou = strbikou & ":ファンドNO=" & ArrData1(lngrow, 1)
            strbikou = strbikou & ":口座番号=" & strKouzaNO
            
            If strKouzaNO = vbNullString Then
                '口座属性に存在しない
                gusrErr.ErrNum = ERRMSG_NO_DATA_KOUZA
                GoTo Continue
            End If
            
            'ファンド名を取得
            strFandname = ""
            strFandname = Arrkouza(3)
                    
            '<2006/12/26 DEL S iida>
'            '信託銀行チェック
'            If Trim(Arrkouza(1)) <> StrConv(Sheets(SHEET_MAIN).cmbBank.Value, vbNarrow) Then
'                gusrErr.ErrNum = ERRMSG_MISS_DATA
'                GoTo Continue
'            End If
            '<2006/12/26 DEL E iida>
                    
            '口座属性の約定受渡区分から約受区分を参照し置換
            stryakukbn = ""
            stryakukbn = Trim(Fn_ChngStr(Arrkouza(4)))
            
            Select Case stryakukbn
                Case VW_YAKUJYO
                    stryakukbn = YAKUUKE_YAKUJYO
                Case VW_UKEWATASHI
                    stryakukbn = YAKUUKE_UKEWATASHI
                Case Else
                    gusrErr.ErrNum = ERRMSG_NOT_YAKUJYO
                    GoTo Continue
            End Select
                    
            If ArrData1(lngrow, 2) <> stryakukbn Then
                '約受一致しない
                GoTo Continue
            End If
            
            strMeigara = Trim(Fn_ChngStr(ArrData1(lngrow, 10)))
                
            '資産コード・資産分類を取得
            If gFunGetIdent(StrConv(Sheets(SHEET_MAIN).cmbBank.Value, vbNarrow), strMeigara, strShisanBR, strShisanCD) = False Then
                gusrErr.MsgNaiyou = ERRMSG4_SIKIBETU & gfunc_ErrorMsg(3, ERRMSG_GET_DATA, "", "", False) 'メッセージ内容
                strbikou = ""
                strbikou = strbikou & ":ﾌｧﾝﾄﾞNO =" & ArrData1(lngrow, 1) & ":銘柄 = " & strMeigara
                gusrErr.ErrNum = ERRMSG_NOT_IDENT
                GoTo Continue
            End If
                    
            '時価チェック
            curjika = 0
            curjika = ArrData1(lngrow, 15)
            If IsNumeric(ArrData1(lngrow, 15)) = False Then
                gusrErr.ErrNum = ERRMSG_ERR_NOT_NUMBER
                GoTo Continue
            End If
                
            '新しく配列を作成
            lngDcnt = lngDcnt + 1
            ReDim Preserve ArrData2(lngDcnt)
            With ArrData2(lngDcnt)
                .levsCDKouzaNo_P = strKouzaNO
                .levsCDFandName_P = strFandname
                .levsCDFandNo_P = ArrData1(lngrow, 1)
                .levsCDYakUke_P = ArrData1(lngrow, 2)
                .levsCDMeigara_P = ArrData1(lngrow, 10)
                .levsCUHcGaku_P = ArrData1(lngrow, 15)
                .levsCDShisanBR_P = strShisanBR
                .levsCDShisanCD_P = strShisanCD
            End With
        End If

Continue:
        With gusrErr
            If .ErrNum <> 0 Then
                .ModuleId = MODULE_NAME         'モージュールID
                .Procedure = PROCEDURE_NAME     'プロシージャID
                .MsgCode = ERR_MSGCD_USER       'メッセージ区分
                .ErrNum = Err.Number
                .ErrDescript = Err.Description
                .MsgSyousai = strbikou          'メッセージ詳細"
                fncWriteErrSheet
            End If
        End With
    Next
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncMakeTarget = True
    Exit Function
    
ErrHandler:
    fncMakeTarget = False
    
    With gusrErr
        If .ErrNum <> 0 Then
            .ModuleId = MODULE_NAME         'モージュールID
            .Procedure = PROCEDURE_NAME     'プロシージャID
            .MsgCode = ERR_MSGCD_USER       'メッセージ区分
            .ErrNum = Err.Number
            .ErrDescript = Err.Description
            .MsgNaiyou = ERRMSG_UPLOAD      'メッセージ内容
            .MsgSyousai = """               'メッセージ詳細"
            fncWriteErrSheet
        End If
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function
'



'*************************************************************************
'関数名　　：gFunGetIdent
'
'引　　数　：v_Bank   　 I   信託銀行
'　　　　　：v_Meigara   I   銘柄
'
'戻り値　　：資産コード・資産分類
'
'機能説明　：信託識別子より取得
'
'更新履歴　：2006/12/10 SRA iida    新規作成
'
'*************************************************************************
Public Function gFunGetIdent(ByVal v_Bank As String, ByVal v_Meigara As String, ByRef v_shisanBR As String, _
                             ByRef v_shisanCD As String) As Boolean
On Error GoTo ErrHandler

    Const PROCEDURE_NAME As String = "fncGetIdentData"
    gFunGetIdent = False
    
    Dim strsql  As String
    Dim recSel  As ADODB.Recordset
    Dim lngcnt  As Long
    
    'SQL作成
    strsql = ""
    strsql = " SELECT SHISAN_BUNRUI,SHISAN_CODE,RTRIM(SHINTAKU_IDENT, '　') as SHINTAKU_IDENT "
    strsql = strsql & " FROM KYK_SHISAN_SHINTAKU_IDENT "
    strsql = strsql & " WHERE trim(GAIBU_CODE) = " & "'" & v_Bank & "'"
    
    lngcnt = 0
    Set recSel = Nothing
    cmADO.CommandText = StrConv(strsql, vbUpperCase)
    Set recSel = New ADODB.Recordset
    recSel.Open StrConv(strsql, vbUpperCase), cnAdo, adOpenKeyset, adLockOptimistic
    
    If recSel.EOF Then
        recSel.Close
        Set recSel = Nothing
    Else
        Do Until recSel.EOF = True
            If StrComp(recSel.Fields("SHINTAKU_IDENT"), v_Meigara) = 0 Then
                lngcnt = lngcnt + 1
                v_shisanBR = recSel.Fields("SHISAN_BUNRUI")
                v_shisanCD = recSel.Fields("SHISAN_CODE")
            End If
            recSel.MoveNext
        Loop
        If lngcnt = 1 Then
            gFunGetIdent = True
        Else
            gFunGetIdent = False
        End If
    End If
    recSel.Close
    Set recSel = Nothing
    Exit Function
    
ErrHandler:
    gFunGetIdent = False
    Call subErrProcess(MODULE_NAME, "gFunGetIdent", Err.Number, Err.Description)

End Function


'*************************************************************************
'関数名　　：ダウンロードファイル形式チェック
'
'引　　数　：ARG1   I   pRow    Long    項目名の行番号
'
'戻り値　　：エラー番号
'
'機能説明　：使用されている項目について、ヘッダーのみチェックする。
'
'更新履歴　：2006/01/30 SRA T.Tanaka    新規作成
'
'*************************************************************************
Private Function fncChkDataFormat(ByRef pRow As Long) As Long
    
    Const PROCEDURE_NAME As String = "fncChkDataFormat"
                                               

    On Error GoTo ErrHandler
    
    Dim lngCol  As Long
    Dim arrDef      As Variant
    Dim arrDownLoad As Variant
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDataFormat = -1
    
    arrDef = Array("ファンドＮＯ", _
                   "約受区分", "残高区分", "残高基準年月日", _
                   "アセットクラスコード", "アセットクラス日本語名称", _
                   "サブアセットクラスコード", "サブアセットクラス日本語名称", _
                   "外部銘柄コード", "銘柄名称", _
                   "数量残高", "数量単位", "時価基準日", _
                   "ＯＣ時価", "ＨＣ評価金額", "最新更新日")
    
    With Sheets(D_PRC_SPCASSET)
        '最新更新日は取得しない
        arrDownLoad = .Range(.Cells(1, levsCDfandNo), .Cells(pRow, levsCUHcGaku))
    End With
    
    For lngCol = LBound(arrDownLoad, 2) To UBound(arrDownLoad, 2)
        Select Case lngCol
        Case levsCDfandNo, levsCDZnDate, levsCDAssetC, levsCUHcGaku
            'ファンドＮＯ、残高基準年月日、アセットクラスコード、ＨＣ評価金額
            If StrConv(arrDownLoad(pRow, lngCol), vbUpperCase + vbWide) <> arrDef(lngCol - 1) Then
                GoTo ErrHandler
            End If
        End Select
    Next lngCol
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    fncChkDataFormat = 0
    Exit Function
    
ErrHandler:
    fncChkDataFormat = -1
    'fncChkDataFormat = Err.Number
    
    With gusrErr
        .ModuleId = MODULE_NAME         'モージュールID
        .Procedure = PROCEDURE_NAME     'プロシージャID
        .MsgCode = ERR_MSGCD_USER       'メッセージ区分
        .MsgSyousai = M_PRC_SPCASSET    'メッセージ詳細
        .MsgNaiyou = gfunc_ErrorMsg(3, ERRMSG_FILE_FORMAT, "", "", False)                  'メッセージ内容
        .ErrNum = ERRMSG_FILE_FORMAT
        .ErrDescript = Err.Description
        fncWriteErrSheet
    End With

    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function
'------------------------------------------------------------------------------
'<2006/12/07 DEL S iida>
''*************************************************************************
''関数名　　：データの集計
''
''引　　数　：ARG1   I   Target  Worksheet   対象ワークシート
''
''戻り値　　：エラー番号
''
''機能説明　：データの取得と集計を行う。
''
''更新履歴　：2006/01/20 SRA T.Tanaka    新規作成
''　　　　　：2006/01/30 SRA T.Tanaka    ファンドＮＯを列削除
''
''*************************************************************************
'Public Function fncCalcData() As Long
'
'    Const PROCEDURE_NAME As String = "fncCalcData"
'
'    On Error GoTo ErrHandler
'
'    Dim lngrow      As Long
'    Dim lngcnt      As Long
'    Dim blnRet      As Boolean
'    Dim strFandNo   As String
'    Dim rngFandNo   As Range
'    Dim strKouzaNo   As String
'    Dim strBikou    As String
'    Dim curjika     As Currency
'    Dim strBuff     As String
'    Dim strYakUke   As String
'    Dim lngShisan   As Long
'
'    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    lngrow = 1
'    lngcnt = fncGetRowHeader(Sheets(D_PRC_SPCASSET))
'
'    With Sheets(SHEET_UPD3)
'        Do
'            gusrErr.ErrNum = 0
'            curjika = 0
'            lngShisan = 0
'            Set rngFandNo = Nothing
'
'            strFandNo = Trim(.Cells(lngrow, levsCUFundNo))
'            strKouzaNo = Trim(.Cells(lngrow, levsCUKouzaNo))
'
'            strBikou = ""
'            strBikou = strBikou & D_PRC_SPCASSET
'            strBikou = strBikou & ":ファンドNO=" & strFandNo
'            strBikou = strBikou & ":口座番号=" & strKouzaNo
'
'            strFandNo = fncReplaceFandNo(strFandNo)
'
'            '約定受渡区分から約受区分を参照
'            blnRet = fncGetCollectionItem(mcolFILLER, strKouzaNo, strBuff)
'            If blnRet = False Then
'                gusrErr.MsgNaiyou = ERRMSG3_YUKBN & ERRMSG_GET_DATA 'メッセージ内容
'                gusrErr.ErrNum = ERR_NO_DATA_COL3
'                GoTo Continue
'            Else
'                Select Case strBuff
'                Case FILLER_YAKUJYO
'                    strYakUke = YAKUUKE_YAKUJYO
'                Case FILLER_UKEWATASHI
'                    strYakUke = YAKUUKE_UKEWATASHI
'                Case Else
'                    gusrErr.MsgNaiyou = ERRMSG3_YUKBN & ERRMSG_GET_DATA 'メッセージ内容
'                    gusrErr.ErrNum = ERR_NO_DATA_COL3
'                    GoTo Continue
'                End Select
'            End If
'
'            '前月の特定資産の件数を参照
'            blnRet = fncGetCollectionItem(mcolJikaCnt, strKouzaNo, strBuff)
'            If blnRet = False Or strBuff = "0" Then
'                gusrErr.MsgNaiyou = ERRMSG_ZEN_SHIAN_ZERO   'メッセージ内容
'                gusrErr.ErrNum = ERR_OUT_TARGET3
'                GoTo Continue
'            Else
'                If strBuff > "1" Then
'                    gusrErr.MsgNaiyou = ERRMSG_ZEN_SHIAN_HUKU   'メッセージ内容
'                    gusrErr.ErrNum = ERR_OUT_TARGET3
'                    GoTo Continue
'                End If
'            End If
'
'            With Sheets(D_PRC_SPCASSET)
'
'                '既に処理対象のファンドＮＯの場合、２行目に移動しないように１行戻る。
'                Set rngFandNo = .Cells.Find(strFandNo, .Cells(lngcnt - 1, levsCDFandNo))
'                If rngFandNo Is Nothing Then
'                    GoTo Continue
'                Else
'                    lngcnt = rngFandNo.Row
'                End If
'
'                Do
'                    If .Cells(lngcnt, levsCDYakUke) = strYakUke Then
'                        If IsNumeric(.Cells(lngcnt, levsCUHcGaku)) Then
'                            curjika = curjika + CCur(.Cells(lngcnt, levsCUHcGaku))
'                        Else
'                            gusrErr.ErrNum = ERR_NOT_NUMBER
'                            GoTo Continue
'                        End If
'                        lngShisan = lngShisan + 1
'                        If lngShisan > 1 Then
'                            gusrErr.MsgNaiyou = ERRMSG_DATA_SHIAN_NUM   'メッセージ内容
'                            gusrErr.ErrNum = ERR_OUT_TARGET3
'                            GoTo Continue
'                        End If
'                    End If
'                    lngcnt = lngcnt + 1
'                Loop Until strFandNo <> .Cells(lngcnt, levsCCFandNo)
'            End With
'            .Cells(lngrow, levsCUJikaGk) = curjika
'Continue:
'            With gusrErr
'                If .ErrNum = ERR_NOT_NUMBER _
'                Or .ErrNum = ERR_NO_DATA_COL3 _
'                Or .ErrNum = ERR_OUT_TARGET3 Then
'                    .ModuleId = MODULE_NAME         'モージュールID
'                    .Procedure = PROCEDURE_NAME     'プロシージャID
'                    .MsgCode = ERR_MSGCD_USER       'メッセージ区分
'                    .MsgSyousai = strBikou          'メッセージ詳細
'                    .ErrDescript = Err.Description
'                    fncWriteErrSheet
'                    'エラーだったら、行削除
'                    Sheets(SHEET_UPD3).Range(lngrow & ":" & lngrow).Delete
'                Else
'                    lngrow = lngrow + 1
'                End If
'            End With
'
'        Loop Until .Cells(lngrow, levsCCComDat) = vbNullString
'
'        'ファンドＮＯを列削除
'        .Columns("A:A").Delete Shift:=xlToLeft
'
'        '時価列の表示形式を変更
'        .Columns("D:D").NumberFormatLocal = "#,##0"
'
'    End With
'
'    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
'
'    Exit Function
'ErrHandler:
'    fncCalcData = Err.Number
'
'    With gusrErr
'        .ModuleId = MODULE_NAME         'モージュールID
'        .Procedure = PROCEDURE_NAME     'プロシージャID
'        .MsgCode = ERR_MSGCD_VB         'メッセージ区分
'        .MsgNaiyou = ERRMSG_CALC_DATA   'メッセージ内容
'        .MsgSyousai = strBikou          'メッセージ詳細
'        .ErrNum = Err.Number
'        .ErrDescript = Err.Description
'        fncWriteErrSheet
'    End With
'
'
'    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
'End Function
'<2006/12/07 DEL E iida>







