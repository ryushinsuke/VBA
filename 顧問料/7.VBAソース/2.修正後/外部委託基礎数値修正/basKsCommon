Attribute VB_Name = "basKsCommon"
Option Explicit
'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー計算システム・外部委託基礎数値修正
'
'オブジェクト名：basKsCommon
'
'機能概要　    ：内部共通処理
'
'更新履歴　    ：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Private Const MODULE_NAME As String = "basKsCommon"

'*************************************************************************
'関数名　　：行削除
'
'引　　数　：ARG1   I   iKind     long    対象(1:組入PX銘柄情報、2:基礎数値情報)
'　　　　　：ARG2   I   iDelRow   long    対象行番号
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された行を削除する
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnDeleteRow(iKind As Long, iDelRow As Long) As Long
On Error GoTo ErrorHandler

    fncKsCmnDeleteRow = 0

    With ThisWorkbook.Sheets(SHEET_MAIN)
        If .Cells(iDelRow, COLN_DATA_FLAG) = "" Then
            MsgBox "消す行がない！！", vbExclamation
            Exit Function
        End If

        If iKind = 1 Then
            fncCmnDelOptionButton
        ElseIf iKind = 2 Then
            Call fncCmnDelCheckBox
        End If

        .Rows(iDelRow & ":" & iDelRow).Select
        Application.CutCopyMode = False
        Selection.Delete Shift:=xlUp

        .Cells(iDelRow, 3).Select
    End With

    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnDeleteRow = Err.Number

End Function

'*************************************************************************
'関数名　　：明細行位置取得
'
'引　　数　：ARG1   I   iKind     long    対象(1:組入PX銘柄情報、2:基礎数値情報)
'
'戻り値　　：明細行の開始行番号
'
'機能説明　：明細行の開始行番号を返す
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnSearchDataTopRow(iKind As Long) As Long
    Dim lngKindCnt  As Long
    Dim lngCnt      As Long

On Error GoTo ErrorHandler

    fncKsCmnSearchDataTopRow = 0
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
        If iKind = 1 Then
            fncKsCmnSearchDataTopRow = .Range("対象").Row + 2
        ElseIf iKind = 2 Then
            fncKsCmnSearchDataTopRow = .Range("修正額採用").Row + 1
        End If
    
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
'    fncKsCmnSearchDataTopRow = Err.Number

End Function


'*************************************************************************
'関数名　　：指定情報削除
'
'引　　数　：ARG1   I   iKind     long    対象(1:組入PX銘柄情報、2:基礎数値情報)
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された削除対象の行を全て削除する
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnRowDelete(iKind As Long) As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    fncKsCmnRowDelete = 0
    
    Select Case iKind
        Case 1:     '組入PX銘柄情報
                lngCnt = fncKsCmnSearchDataTopRow(1)
    
        Case 2:     '基礎数値情報
                lngCnt = fncKsCmnSearchDataTopRow(2)
    End Select
        
    With ThisWorkbook.Sheets(SHEET_MAIN)
       
        Do While (.Cells(lngCnt, COLN_DATA_FLAG) <> vbNullString)
            fncKsCmnDeleteRow iKind, lngCnt
        Loop
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnRowDelete = Err.Number

End Function

'*************************************************************************
'関数名　　：新規行追加
'
'引　　数　：ARG1   I   iKind       long    対象(1:組入PX銘柄情報、2:基礎数値情報)
'　　　　　：ARG2   I   iInsRow     long    追加先シートの行番号
'　　　　　：ARG3   I   iSrcRow     long    コピー元シートの行番号
'
'戻り値　　：Long       エラー番号
'
'機能説明　：追加先シートの指定行番号に新規行を追加(コピー)する。
'           追加する行はコピー元シートの指定行番号より取得する。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnInsRow(iKind As Long, iInsRow As Long, iSrcRow As Long) As Long
    
On Error GoTo ErrorHandler

    fncKsCmnInsRow = 0
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
    
        ThisWorkbook.Sheets(SHEET_TEMP).Rows(iSrcRow & ":" & iSrcRow).Copy
        .Select
        .Rows(iInsRow & ":" & iInsRow).Select
        Selection.Insert Shift:=xlDown
        Application.CutCopyMode = False

        If iKind = 1 Then
            fncCmnSetOptionButton _
                Replace(.Cells(iInsRow, .Range("修正額採用").Column).Address, "$", vbNullString), _
                RNG_LINKCELL
        ElseIf iKind = 2 Then
            fncCmnSetCheckBox Replace(.Cells(iInsRow, .Range("修正額採用").Column).Address, "$", vbNullString), RNG_CHK_FLG_LINKCELL & iInsRow
        End If
        .Cells(iInsRow, .Range("修正額採用").Column).Select
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnInsRow = Err.Number
    
End Function

'*************************************************************************
'関数名　　：新規行追加(メイン処理)
'
'引　　数　：ARG1   I   iKind       long    対象(1:組入PX銘柄情報、2:基礎数値情報)
'　　　　　：ARG2   I   RowCnt      long    追加行数
'
'戻り値　　：Long       エラー番号
'
'機能説明　：追加対象の新規行を指定された行数追加する。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnAddNrow(iKind As Long, RowCnt As Long) As Long
    
On Error GoTo ErrorHandler
    Dim lngCnt As Long
    Dim lngRow As Long

    fncKsCmnAddNrow = 0
    lngRow = fncKsCmnSearchDataTopRow(iKind)
    
    With ThisWorkbook.Sheets(SHEET_TEMP)
        For lngCnt = 1 To RowCnt
            fncKsCmnInsRow iKind, lngRow, IIf(iKind = 1, .Range("組入PX銘柄情報明細").Row, .Range("基礎数値情報明細").Row)
            lngRow = lngRow + 1
        Next
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnAddNrow = Err.Number
    
End Function


'*************************************************************************
'関数名　　：メイン画面の初期化
'
'引　　数　：ARG1   I   iKind   long    0:全項目クリア
'　　　　　　                           1:組入資産情報クリア
'　　　　　　                           2:基礎数値情報クリア
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnClearField(iKind As Long) As Long
    
On Error GoTo ErrorHandler

    fncKsCmnClearField = 0
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
    
        If iKind = 0 Then
            '全項目クリア
            .Range("外部委託先").Value = vbNullString   '外部委託先
            .Range("口座番号").Value = vbNullString     '口座番号
            .Range("口座名称").Value = vbNullString     '口座名称
            .Range("基準日").Value = vbNullString       '基準日
            '検索ボタンを押せるようにする
            .cmdSearch.Enabled = True
        End If
        
        If iKind = 0 Or iKind = 1 Then
            '全項目クリア or 組入資産情報クリア
            fncKsCmnRowDelete 1
            '表示ボタンを押せなくする
            .cmdDisp.Enabled = False
        End If
        
        If iKind = 0 Or iKind = 2 Then
            '全項目クリア or 基礎数値情報クリア
            fncKsCmnRowDelete 2
            '更新ボタンを押せなくする
            .cmdUpdate.Enabled = False
        End If
    
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnClearField = Err.Number
    
End Function

'*************************************************************************
'関数名　　：メイン画面の退避エリアの初期化
'
'引　　数　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnClearSaveField() As Long
    
On Error GoTo ErrorHandler

    fncKsCmnClearSaveField = 0
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
    
        '外部委託先・口座番号・基準日の退避エリアをクリア
        .Range(RNG_SV_GI_NO).Value = vbNullString
        .Range(RNG_SV_KOUZA_NO).Value = vbNullString
        .Range(RNG_SV_KIJYUNBI).Value = vbNullString
    
    End With
    
    Exit Function

ErrorHandler:
    MsgBox Err.Description
    fncKsCmnClearSaveField = Err.Number
    
End Function


'*************************************************************************
'関数名　　：トランザクション開始
'
'引　　数　：
'
'機能説明　：トランザクションを開始する。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Sub fncKsCmnBeginTrans()
On Error GoTo 0 'ErrHandler
    
    mainmenu.cnAdo.BeginTrans
    
    Exit Sub
ErrHandler:
Dim lng As Long
    lng = Err.Number
    Call subErrProcess(MODULE_NAME, "", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
End Sub

'*************************************************************************
'関数名　　：トランザクションコミット
'
'引　　数　：
'
'機能説明　：トランザクションをコミットする。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Sub fncKsCmnCommitTrans()
On Error GoTo 0 'ErrHandler
    
    mainmenu.cnAdo.CommitTrans
    
    Exit Sub
ErrHandler:
Dim lng As Long
    lng = Err.Number
    Call subErrProcess(MODULE_NAME, "", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
End Sub

'*************************************************************************
'関数名　　：トランザクションロールバック
'
'引　　数　：
'
'機能説明　：トランザクションをロールバックする。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Sub fncKsCmnRollbackTrans()
On Error GoTo 0 'ErrHandler
    
    mainmenu.cnAdo.RollbackTrans
    
    Exit Sub
ErrHandler:
Dim lng As Long
    lng = Err.Number
    Call subErrProcess(MODULE_NAME, "", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
End Sub


'*************************************************************************
'関数名　　：
'
'引　　数　：
'           lngProcess     I         処理フラグ 0=抽出処理 1=追加処理 2=更新処理 3=削除処理
'           strSql         I         SQL文
'           vntRs()        O         取得したデータ(２次元)
'           lngCols        O         列数
'           lngRows        O         行数
'           strErrCode     I/O       エラーコード(入力時は、除外するエラーコードが入ってくる。)
'戻り値　　：Boolean
'
'機能説明　：引数で取得したSQL文を実行し、結果を返す。
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncKsCmnDoExequteSql( _
                             lngProcess As Long, _
                             strSql As String, _
                             vntRs() As Variant, _
                             lngCols As Long, _
                             lngRows As Long, _
                             Optional strErrCode As String = "") As Boolean

'関数説明
' 1.SQL文の実行処理を行う。
' 2.処理フラグが、0の場合、抽出したデータ件数をlngRows引数に返す。
' 3.処理フラグが、0の場合、抽出したデータをstrSql引数に返す。
' 4.処理フラグが、1,2,3の場合、更新したデータ件数をlngRows引数に返す。
' 5.処理フラグが、1,2,3の場合、strSqlに""を返す。
' 6.処理が成功した場合はTrueを返し、終了する。
' 7.エラーが発生した場合はFalseを返し、終了する。


    fncKsCmnDoExequteSql = gclsdb.DoExequteSql(lngProcess, strSql, vntRs, lngCols, lngRows, strErrCode)


Exit Function

'*******************************************************
'* エラーセクション                                　  *
'*******************************************************
ErrSection:

End Function


'*************************************************************************
'関数名　　：DBシステム日付取得
'
'引　　数　：ARG1   O   DbSysdate   String (YYYYMMDD)
'
'戻り値　　：エラー番号
'
'機能説明　：DBのシステム日付(SYSDATE)を取得する
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncGetDbSysdate(DbSysdate As String) As Long

    Const PROCEDURE_NAME As String = "fncGetDbSysdate"
    
    Dim strDay As String

On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    '共通関数よりDBシステム日付取得
    gfunc_GetSvDateTime DbSysdate, strDay
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
ErrHandler:
    fncGetDbSysdate = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：メッセージ表示
'
'引　　数　：ARG1   I   strMsgKbn   String  メッセージ区分(1:情報,2:質問,3:警告,4:エラー)
'　　　　　：ARG2   I   lngMsgId    long    メッセージＩＤ
'　　　　　：ARG3   I   strAddText  String  追加テキスト(項目名)
'　　　　　：ARG4   I   strAddText2 String  追加テキスト
'　　　　　：ARG5   I   blnPopUp    boolean メッセージボックス出力フラグ(デフォルト：True(表示))
'
'戻り値　　：エラー番号
'
'機能説明　：メッセージを出力する
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Function fncKsCmnMessageDisp( _
              ByVal strMsgKbn As String _
            , ByVal lngMsgId As Long _
            , ByVal strAddText As String _
            , Optional ByVal strAddText2 As String _
            , Optional ByVal blnPopUp As Boolean = True) As String

    '共通関数をCALL
    fncKsCmnMessageDisp = gfunc_ErrorMsg( _
                            strMsgKbn, _
                            lngMsgId, _
                            strAddText, _
                            strAddText2, _
                            blnPopUp)


End Function

