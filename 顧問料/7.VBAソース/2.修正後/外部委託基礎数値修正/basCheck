Attribute VB_Name = "basCheck"
Option Explicit
'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー計算システム・外部委託基礎数値修正
'
'オブジェクト名：basCheck
'
'機能概要　    ：チェック処理
'
'更新履歴　    ：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Private Const MODULE_NAME As String = "basCheck"


'*************************************************************************
'関数名　　：口座番号フォーマットチェック
'
'引　　数　：ARG1   I   Target      String 入力テキスト
'
'戻り値　　：エラー番号
'
'機能説明　：入力必須チェック
'　　　　　　レングスチェック(7桁以下)
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncChkKouzaNoFormat(ByVal Target As String) As Long

    Const PROCEDURE_NAME As String = "fncChkKouzaNoFormat"

On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncChkKouzaNoFormat = 0
    
    Select Case Len(Target)
        Case LEN_NULL
            '未入力
            '21005 未入力です。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21005, MSG1_NUMCD, , True
            fncChkKouzaNoFormat = 21005
            Exit Function
            
        Case Is > LEN_KOUZA
            '入力桁数が不正です。
            '21006 桁数不正
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21006, MSG1_NUMCD, MSG2_LEN_KOUZANO, True
            fncChkKouzaNoFormat = 21006
            Exit Function
    
    End Select
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
ErrHandler:
    fncChkKouzaNoFormat = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：口座番号情報チェック
'
'引　　数　：ARG1   I   Target      String 入力テキスト
'　　　　　：ARG2   I   Kijyunbi    String 基準日
'　　　　　：ARG6   O   Kouza_name  String 口座名称
'
'戻り値　　：エラー番号
'
'機能説明　：口座属性(VW_DT001D)の存在チェック(1件のみ存在すること)
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'          ：2013/04/11 GUT 梁賀松 顧問バック更改対応
'
'*************************************************************************
Public Function fncChkKouzaNoInfo(ByVal Target As String, _
                            ByVal Kijyunbi As String, _
                            ByRef Kouza_name As String, _
                            ByRef Settei_date As String, _
                            ByRef Calloff_date As String) As Long

    Const PROCEDURE_NAME As String = "fncChkKouzaNoInfo"

On Error GoTo ErrHandler
    
    Dim blnRet      As Boolean
    
    Dim strSql      As String
    Dim vntRec()    As Variant
    Dim lngCols     As Long
    Dim lngRows     As Long
    Dim strErrCd    As String
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncChkKouzaNoInfo = 0
    
    'VW_DT001D存在チェック
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     PRTCD, NAME_RJ, SETTEI_DATE, CALLOFF_DATE"
    strSql = strSql & " FROM"
    strSql = strSql & "     VW_DT001D"
    strSql = strSql & " WHERE"
    strSql = strSql & "     PRTCD = '" & Format(func_ChkQuoteshon(Target, "'"), "0000000") & "'"
'------------<顧問バック更改対応 2013/04/11 GUT梁賀松 START> ------------
'    strSql = strSql & " AND SETTEI_KBN = '1'"
    strSql = strSql & " AND SETTEI_KBN = '0'"
    strSql = strSql & " AND GENGO = '0'"
'------------<顧問バック更改対応 2013/04/11 GUT梁賀松 END> ------------
    strSql = strSql & " AND (CALLOFF_DATE IS NULL OR"
    strSql = strSql & "     CALLOFF_DATE = '0' OR"
    strSql = strSql & "     CALLOFF_DATE > '" & Trim(Kijyunbi) & "')"

    blnRet = fncKsCmnDoExequteSql(mainmenu.gcSELECT, strSql, vntRec, lngCols, lngRows, strErrCd)
    If blnRet = True Then
        
        If lngRows = 0 Then
            '21007 該当データが存在しない
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21007, MSG1_NUMCD, , True
            fncChkKouzaNoInfo = 21007
            Exit Function
        Else
'            If lngRows > 1 Then
'                '21009 該当データが複数件存在します。
'                fncKsCmnMessageDisp MSGLVL_WARNNING, 21009, MSG1_NUMCD, , True
'                fncChkKouzaNoInfo = 21009
'                Exit Function
'            End If
            
            If IsNull(vntRec(0, 0)) Then
                '21008 該当データが存在しない
                fncKsCmnMessageDisp MSGLVL_WARNNING, 21008, MSG1_NUMCD, , True
                fncChkKouzaNoInfo = 21008
                Exit Function
            Else
                Kouza_name = vntRec(1, 0)
                Settei_date = vntRec(2, 0)
                Calloff_date = vntRec(3, 0)
            End If
        End If
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
ErrHandler:
    fncChkKouzaNoInfo = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：日付チェック
'
'引　　数　：ARG1   I   Target      String 入力テキスト
'　　　　　：ARG2   I   Msg1        String メッセージ出力時の項目名
'
'戻り値　　：エラー番号
'
'機能説明　：以下の日付チェックを行う。
'            ・必須チェック
'            ・YYYYMMDD形式
'            ・桁数(8桁)
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncChkDateFormat( _
                    ByVal Target As String, _
                    ByVal Msg1 As String) As Long

    Const PROCEDURE_NAME As String = "fncChkDateFormat"

On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Select Case Len(Target)
        Case LEN_NULL
            '21010 未入力です。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21010, Msg1, , True
            fncChkDateFormat = 21010
            Exit Function
            
        Case LEN_DATE
            If IsDate(Format(Target, "####/##/##")) Then
            Else
                '形式不正
                '21011 日付として認識できません。YYYYMMDD形式で入力して下さい。
                fncKsCmnMessageDisp MSGLVL_WARNNING, 21011, Msg1, , True
                fncChkDateFormat = 21011
                Exit Function
            End If
            
        Case Else
            '桁数不正
            '21012 入力桁数が不正です。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21012, Msg1, "YYYYMMDD形式で入力して下さい。", True
            fncChkDateFormat = 21012
            Exit Function
    End Select
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    fncChkDateFormat = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：金額チェック
'
'引　　数　：ARG1   I   Target      String 入力テキスト
'　　　　　：ARG2   I   Msg1        String メッセージ出力時の項目名
'
'戻り値　　：エラー番号
'
'機能説明　：以下の金額チェックを行う。
'            ・桁数チェック(15桁以内)
'            ・形式チェック(数値のみ)
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncChkKisoSuchiFormat( _
                    ByVal Target As String, _
                    ByVal Msg1 As String, _
                    ByVal MsgLvl As Long _
                    ) As Long

    Const PROCEDURE_NAME As String = "fncChkKisoSuchiFormat"

On Error GoTo ErrHandler
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncChkKisoSuchiFormat = 0
    MsgLvl = MSGLVL_WARNNING
    
    If Trim(Target) = vbNullString Then GoTo EndProcess
    
    If Len(Trim(Format(Target, "#"))) > LEN_CURRENCY Then
        '21014 入力桁数が不正です。
        fncKsCmnMessageDisp MSGLVL_WARNNING, 21014, Msg1, MSG2_LEN_CURRENCY, True
        fncChkKisoSuchiFormat = 21014
        Exit Function
    End If
'    If Not fncCmnIsNumeric(CStr(Target)) Then
    If Not gkyk_IsNumeric(CStr(Target)) Then
        '形式不正
        '21013 数値で入力して下さい。
        fncKsCmnMessageDisp MSGLVL_WARNNING, 21013, Msg1, , True
        fncChkKisoSuchiFormat = 21013
        Exit Function
    End If
    
EndProcess:

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
ErrHandler:
    MsgLvl = MSGLVL_FATAL
    fncChkKisoSuchiFormat = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：組入PX銘柄オプションボタンチェック
'
'引　　数　：ARG1   O   SelRow      long    選択された行番号
'
'戻り値　　：0:正常終了(選択あり)、0以外:エラー番号
'
'機能説明　：組入PX銘柄オプションボタンが選択されているかをチェックする
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncChkOptionButton(ByRef SelRow As Long) As Long

    Const PROCEDURE_NAME As String = "fncChkOptionButton"

On Error GoTo ErrHandler
    
    Dim lngRow  As Long
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncChkOptionButton = 0
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
        '組入れ情報の先頭行取得
        lngRow = fncKsCmnSearchDataTopRow(1)
        
        If .Range(RNG_LINKCELL) > 0 Then
            SelRow = lngRow + .Range(RNG_LINKCELL) - 1
            Exit Function
        End If
    End With
        
    '21015 対象の組入PX銘柄情報を選択して下さい。
    fncKsCmnMessageDisp MSGLVL_WARNNING, 21015, MSG1_KINF, , True
    fncChkOptionButton = 21015
        
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    fncChkOptionButton = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function


'*************************************************************************
'関数名　　：項目変更チェック
'
'引　　数　：ARG1   O   ErrRow      long    エラーセルの行
'　　　　　：ARG2   O   ErrCol      long    エラーセルの列
'
'戻り値　　：0:正常終了(変更なし)、0以外:エラー番号
'
'機能説明　：検索時の値と更新実行時の値が変更されて
'            いないかをチェックする
'
'更新履歴　：2008/06/20 SRA H.Anpo  新規作成
'
'*************************************************************************
Public Function fncChkDataChange( _
                    ByRef ErrRow As Long, _
                    ByRef ErrCol As Long, _
                    ByRef MsgLvl As Long _
                    ) As Long

    Const PROCEDURE_NAME As String = "fncChkDataChange"

On Error GoTo ErrHandler
    
    Dim lngRet      As Long
    Dim lngSelRow   As Long
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    fncChkDataChange = 0
    MsgLvl = MSGLVL_WARNNING
    
    With ThisWorkbook.Sheets(SHEET_MAIN)
        '外部委託先
        If Trim(.Range("外部委託先").Value) <> .Range(RNG_SV_GI_NO).Value Then
            ErrRow = .Range("外部委託先").Row
            ErrCol = .Range("外部委託先").Column
            '21016 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21016, MSG1_GINO, MSG2_CNG_GINO, True
            fncChkDataChange = 21016
            Exit Function
        End If
        
        '口座番号
        If Format(.Range("口座番号").Value, "0000000") <> .Range(RNG_SV_KOUZA_NO).Value Then
            ErrRow = .Range("口座番号").Row
            ErrCol = .Range("口座番号").Column
            '21016 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21016, MSG1_NUMCD, MSG2_CNG_KOUZANO, True
            fncChkDataChange = 21016
            Exit Function
        End If
        
        '基準日
        If Trim(.Range("基準日").Value) <> Trim(.Range(RNG_SV_KIJYUNBI).Value) Then
            ErrRow = .Range("基準日").Row
            ErrCol = .Range("基準日").Column
            '21017 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21017, MSG1_KIJYUNBI, MSG2_CNG_KIJYUNBI, True
            fncChkDataChange = 21017
            Exit Function
        End If
        
        '組入資産情報の選択行
        lngRet = fncChkOptionButton(lngSelRow)
        If lngSelRow <> .Range(RNG_SV_SELED_ROW).Value Then
            ErrRow = lngSelRow
            ErrCol = .Range("対象").Column
            '21018 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 21018, MSG1_KINF, MSG2_CNG_TAISHOU, True
            fncChkDataChange = 21018
            Exit Function
        End If
        
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    MsgLvl = MSGLVL_FATAL
    fncChkDataChange = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

