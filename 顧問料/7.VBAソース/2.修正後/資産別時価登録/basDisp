Attribute VB_Name = "basDisp"
Option Explicit

'*************************************************************************
'
'プロジェクト名：契約管理システム・資産別時価登録
'
'オブジェクト名：basDisp
'
'機能概要　：   時価情報表示
'
'更新履歴　：2006/07/04 SRA H.Anpo      新規作成
'
'*************************************************************************
Private Const MODULE_NAME As String = "basDisp"

'*************************************************************************
'関数名　　：時価情報の基準日取得(VB版時価取得処理)
'
'引　　数　：ARG1   I   RateTkikanFrom      String  料率適用期間FROM
'　　　　　：ARG2   I   RateTkikanTo        String  料率適用期間TO
'　　　　　：ARG3   I   KeisanHouhou        String  基礎数値計算方法
'　　　　　：ARG4   I   SetteiDate          String  口座開設日
'　　　　　：ARG5   I   CalloffDate         String  口座閉鎖日
'　　　　　：ARG6   O   KijyunbiAry         Variant 基準日配列
'　　　　　：ARG7   O   ErrMsg              String  エラーメッセージ
'
'戻り値　　：Long       エラー番号
'
'機能説明　：時価情報の基準日を取得する
'
'更新履歴　：2006/07/05 SRA H.Anpo    新規作成
'
'*************************************************************************
Function fncGetKijyunbi( _
            ByVal RateTkikanFrom As String, _
            ByVal RateTkikanTo As String, _
            ByVal KeisanHouhou As String, _
            ByVal SetteiDate As String, _
            ByVal CalloffDate As String, _
            ByRef KijyunbiAry As Variant, _
            ByRef ErrMsg As String _
            ) As Long
       
    Const PROCEDURE_NAME As String = "fncGetKijyunbi"

On Error GoTo ErrorHandler

    Dim dtCurDate       As Date
    Dim dtEndDate       As Date
    Dim dtTmpDate       As Date
    
    Dim dtSetteiDate    As Date '口座開設日
    Dim dtCalloffDate   As Date '口座閉鎖日

    Dim lngCnt          As Long
    Dim lngRow          As Long

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncGetKijyunbi = 0
    lngCnt = 0
    With Sheets(SHEET_MAIN)
        If RateTkikanFrom = vbNullString Or _
           RateTkikanTo = vbNullString Then
            '3019 該当データが存在しません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3019, MSG1_JIKAINF, , True
            fncGetKijyunbi = MSGLVL_WARNNING
            Exit Function
        End If
            
        dtCurDate = Format(RateTkikanFrom, "####/##/##")
        dtEndDate = Format(RateTkikanTo, "####/##/##")
            
        Select Case KeisanHouhou
            Case "2":   '2:月中平均
                dtCurDate = DateAdd("m", -1, dtCurDate)
            Case "3":   '3:前月末平均
                dtCurDate = DateAdd("m", -1, dtCurDate)
                dtEndDate = DateAdd("m", -1, dtEndDate)
            Case "4":   '4:前月中平均
                dtCurDate = DateAdd("m", -2, dtCurDate)
                dtEndDate = DateAdd("m", -1, dtEndDate)
        End Select
            
        dtSetteiDate = Format(SetteiDate, "####/##/##")
        If CalloffDate = 0 Then
            '口座閉鎖日が０の場合
            CalloffDate = "99991231"    '日付の最大値をセット
        End If
        dtCalloffDate = Format(CalloffDate, "####/##/##")
            
        dtCurDate = Format(DateAdd("m", 1, dtCurDate), "YYYY/MM/01")
        dtCurDate = DateAdd("d", -1, dtCurDate)
            
        dtEndDate = Format(DateAdd("m", 1, dtEndDate), "YYYY/MM/01")
        dtEndDate = DateAdd("d", -1, dtEndDate)
            
        Do While dtCurDate < dtEndDate
            dtTmpDate = DateAdd("d", -1, DateAdd("m", 1, Format(dtCurDate, "YYYY/MM" & "/01")))
            If dtTmpDate > dtEndDate Then
                Exit Do
            End If
            
            '口座開設日の前月までは処理しない
            If dtTmpDate >= dtSetteiDate Then
            
                If dtTmpDate >= dtCalloffDate Then
                    '口座開設日の月の場合は口座開設日をセット
                    dtTmpDate = dtCalloffDate
                End If
            
                lngCnt = lngCnt + 1
                ReDim Preserve KijyunbiAry(lngCnt)
                KijyunbiAry(lngCnt) = Format(dtTmpDate, "YYYYMMDD")
            
                If dtTmpDate >= dtCalloffDate Then
                    '口座開設日の場合は終了
                    Exit Do
                End If
            
            End If
            
            dtCurDate = DateAdd("m", 1, Format(dtCurDate, "YYYY/MM" & "/01"))
        Loop
    
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    ErrMsg = Err.Description
    fncGetKijyunbi = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function


'*************************************************************************
'関数名　　：時価情報の基準日、時価、PX信託区分取得(ストアドJAVA)
'
'引　　数　：ARG1   I   KouzaNo          String      口座番号("0000000")
'　　　　　：ARG2   I   Kijyunbi         long        基準日(YYYYMMDD)
'　　　　　：ARG3   I   SisanBunrui      String      資産分類
'　　　　　：ARG4   I   SisanCd          String      資産コード
'　　　　　：ARG5   I   Rate_kikan_from  long        料率適用期間FROM
'　　　　　：ARG6   I   Rate_kikan_to    long        料率適用期間TO
'　　　　　：ARG7   I   Px_sin_kbn       String      PX信託区分
'　　　　　：ARG8   I   Ks_keisan_hohhoh String      基礎数値計算方法
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 Start
''　　　　　：ARG9   O   KijyunbiAry      String      基準日配列
''　　　　　：ARG10  O   JikagakuAry      String      時価額配列
''　　　　　：ARG11  O   PxSinKbnAry      String      PX信託配列

'　　　　　：ARG9   I   KishoKimatsu_kbn String      期初期末区分
'　　　　　：ARG10  O   KijyunbiAry      String      基準日配列
'　　　　　：ARG11  O   JikagakuAry      String      時価額配列
'　　　　　：ARG12  O   PxSinKbnAry      String      PX信託配列
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 End
'
'戻り値　　：Long       エラー番号
'
'機能説明　：時価取得プロシジャー(ストアドJAVA)をCALLし、基準日、時価、PX信託区分を取得する
'
'更新履歴　：2006/08/22 SRA H.Anpo    新規作成
'
'*************************************************************************
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 Start
'Function fncGetKijyunbiJikaPxShinKbn( _
'            ByVal KouzaNo As String, _
'            ByVal Kijyunbi As Long, _
'            ByVal SisanBunrui As String, _
'            ByVal SisanCd As String, _
'            ByVal RateKikanFrom As Long, _
'            ByVal RateKikanTo As Long, _
'            ByVal PxSinKbn As String, _
'            ByVal KsKeisanHohhoh As String, _
'            ByRef KijyunbiAry() As String, _
'            ByRef JikagakuAry() As String, _
'            ByRef PxSinKbnAry() As String _
'            ) As Long
            
Function fncGetKijyunbiJikaPxShinKbn( _
            ByVal KouzaNo As String, _
            ByVal Kijyunbi As Long, _
            ByVal SisanBunrui As String, _
            ByVal SisanCd As String, _
            ByVal RateKikanFrom As Long, _
            ByVal RateKikanTo As Long, _
            ByVal PxSinKbn As String, _
            ByVal KsKeisanHohhoh As String, _
            ByVal KishoKimatsu_kbn As String, _
            ByRef KijyunbiAry() As String, _
            ByRef JikagakuAry() As String, _
            ByRef PxSinKbnAry() As String _
            ) As Long
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 End
       
    Const PROCEDURE_NAME As String = "fncGetKijyunbiJikaPxShinKbn"

On Error GoTo ErrorHandler

    Dim strJkijyunbi    As String
    Dim strJjikagaku    As String
    Dim strJpxSinKbn    As String
    Dim lngErrCd        As Long
    Dim strErrMsg       As String

    'プロシジャーCALL用
    Dim objCmd As ADODB.Command
    Dim objPrm As ADODB.Parameter

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncGetKijyunbiJikaPxShinKbn = 0

    '時価取得プロシジャー(ストアドJAVA)をCALL
    Set objCmd = New ADODB.Command
    
    With objCmd
    
        'コマンドの準備
        .ActiveConnection = mainmenu.cnAdo
        .CommandType = adCmdStoredProc
        .CommandText = "SP_JIKA_SHUTOKU" 'SP名
        
        'パラメータの設定
        '戻り値
    '    Set objPrm = objCmd.CreateParameter("pRet", adChar, adParamReturnValue, 10)
    '    objCmd.Parameters.Append objPrm
        
        '口座番号
        Set objPrm = .CreateParameter("ps_kohza_no", adVarChar, adParamInput, 7, KouzaNo)
        .Parameters.Append objPrm
        '基準日
        Set objPrm = .CreateParameter("pn_kijyunbi", adInteger, adParamInput, , Kijyunbi)
        .Parameters.Append objPrm
        '資産分類
        Set objPrm = .CreateParameter("ps_shisan_bunrui", adVarChar, adParamInput, 1, SisanBunrui)
        .Parameters.Append objPrm
        '資産コード
        Set objPrm = .CreateParameter("ps_shisan_code", adVarChar, adParamInput, 4, SisanCd)
        .Parameters.Append objPrm
        '料率適用期間FROM
        Set objPrm = .CreateParameter("pn_rate_kikan_from", adInteger, adParamInput, , RateKikanFrom)
        .Parameters.Append objPrm
        '料率適用期間TO
        Set objPrm = .CreateParameter("pn_rate_kikan_to", adInteger, adParamInput, , RateKikanTo)
        .Parameters.Append objPrm
        'PX信託区分
        Set objPrm = .CreateParameter("ps_px_sin_kbn", adVarChar, adParamInput, 1, PxSinKbn)
        .Parameters.Append objPrm
        '基礎数値計算方法
        Set objPrm = .CreateParameter("ps_ks_keisan_hohhoh", adVarChar, adParamInput, 1, KsKeisanHohhoh)
        .Parameters.Append objPrm

'=== 2007/8/17 Added By T.Ichikawa PH3.5対応 Start
        '期初期末時価
        Set objPrm = .CreateParameter("ps_kisho_kimatsu_kbn", adVarChar, adParamInput, 1, IIf(KishoKimatsu_kbn = "", "0", KishoKimatsu_kbn))
        .Parameters.Append objPrm
'=== 2007/8/17 Added By T.Ichikawa PH3.5対応 End

'=== 2007/08/20 Modified By T.Ichikawa PH3.5対応 Start
'        '時価基準日
'        Set objPrm = .CreateParameter("ps_jika_kijyunbi", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '時価時価額
'        Set objPrm = .CreateParameter("ps_jika_jikagaku", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
'        '時価PX信託区分
'        Set objPrm = .CreateParameter("ps_jika_px_sin_kbn", adVarChar, adParamOutput, 256)
'        .Parameters.Append objPrm
        
        '時価基準日
        Set objPrm = .CreateParameter("ps_jika_kijyunbi", adVarChar, adParamOutput, 8192)
        .Parameters.Append objPrm
        '時価時価額
        Set objPrm = .CreateParameter("ps_jika_jikagaku", adVarChar, adParamOutput, 8192)
        .Parameters.Append objPrm
        '時価PX信託区分
        Set objPrm = .CreateParameter("ps_jika_px_sin_kbn", adVarChar, adParamOutput, 8192)
        .Parameters.Append objPrm
'=== 2007/08/20 Modified By T.Ichikawa PH3.5対応 End

        'エラーステータス
        Set objPrm = .CreateParameter("pn_err_status", adInteger, adParamOutput)
        .Parameters.Append objPrm
        'エラーメッセージ
        Set objPrm = .CreateParameter("ps_err_message", adVarChar, adParamOutput, 1024)
        .Parameters.Append objPrm
        
        '実行
        .Execute
        
        If .Parameters("pn_err_status").Value = 0 Then
        
            'カンマ文字列を配列に変換
            '基準日
            If IsNull(.Parameters("ps_jika_kijyunbi").Value) Then
                '該当データ無し
                fncGetKijyunbiJikaPxShinKbn = 1
                Exit Function
            End If
            strJkijyunbi = .Parameters("ps_jika_kijyunbi").Value
            KijyunbiAry = Split(strJkijyunbi, ",")
            
            '時価額
            If Not IsNull(.Parameters("ps_jika_jikagaku").Value) Then
                strJjikagaku = .Parameters("ps_jika_jikagaku").Value
            End If
            JikagakuAry = Split(strJjikagaku, ",")
            
            'PX/信託区分
            If Not IsNull(.Parameters("ps_jika_px_sin_kbn").Value) Then
                strJpxSinKbn = .Parameters("ps_jika_px_sin_kbn").Value
            End If
            PxSinKbnAry = Split(strJpxSinKbn, ",")
    
        Else
            '3026 JAVAプロシジャーでエラーが発生しました。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3026, MSG1_JIKAINF, IIf(IsNull(.Parameters("ps_err_message").Value), "", .Parameters("ps_err_message").Value), True
            fncGetKijyunbiJikaPxShinKbn = .Parameters("pn_err_status").Value
        End If
    
    End With
    
    '破棄
    Set objCmd = Nothing

    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    fncGetKijyunbiJikaPxShinKbn = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function


'*************************************************************************
'関数名　　：表示ボタン処理
'
'引　　数　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2006/07/05 SRA H.Anpo    新規作成
'            2006/11/22 SRA T.Sato    口座トータル更新対応
'更新履歴　：2008/01/23 SRA Y.Azuma   変更     (PH4)特殊文字バグ対応
'更新履歴　：2008/02/04 SRA Y.Azuma    変更    (PH4)総合障害No.8の対応
'
'*************************************************************************
Function fncDisp() As Long
    
    Const PROCEDURE_NAME As String = "fncDisp"
    
On Error GoTo ErrorHandler

    Dim lngRet          As Long
    Dim strErrMsg       As String
    Dim strTitle        As String
    Dim lngSelRow       As Long
    Dim lngRowCnt       As Long
    Dim lngCnt          As Long
    
    Dim strKijyunbiAry()    As String
    Dim strJikagakuAry()    As String
    Dim strPxSinKbnAry()    As String
    
    Dim strKouza_name   As String
    Dim strKijyunbi     As String
    Dim lngRow          As Long
    Dim lngCol          As Long
    
'------------<Modify Start azuma 2008/01/23 (PH4)> ★★★☆-----------------------
    Dim ErrRow As Long
    Dim ErrCol As Long
'------------<Modify End   azuma 2008/01/23 (PH4)> ★★★☆-----------------------

    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)

    fncDisp = 0
    
    Application.ScreenUpdating = False
    '時価情報 削除
    fncKsCmnClearField 2
    
    '入力チェック
    With Sheets(SHEET_MAIN)
        '組入資産情報のオプションボタンが押されているかチェックする
        lngRet = fncChkOptionButton(lngSelRow)
        If lngRet <> 0 Then
            fncDisp = lngRet
            Exit Function
        End If
    
        'T21の時は時価情報を表示しない
        If .Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value <> "Z" Then
'''            '時価情報の基準日を取得(VB版時価取得時)
'''            lngRet = fncGetKijyunbi( _
'''                        .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
'''                        .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO), _
'''                        .Range(RNG_SV_SETTEI_DATE).Value, _
'''                        .Range(RNG_SV_CALLOFF_DATE).Value, _
'''                        KijyunbiAry, _
'''                        strErrMsg)
        Else
            '3024 該当データが存在しません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3024, MSG1_JIKAINF, , True
            fncDisp = 3024
            Exit Function
        End If
    
        If .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM) = vbNullString Or _
           .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO) = vbNullString Then
            '3025 料率適用期間の範囲外のため時価情報を取得できません。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3025, MSG1_JIKAINF, , True
            fncDisp = 3025
            Exit Function
        End If
    
    End With
    
    
'------------<Modify Start azuma 2008/01/23 (PH4)> ★★★☆-----------------------
    '変更チェック
    '検索ボタン押下後、口座番号が変更されたかをチェックする
    With Sheets(SHEET_MAIN)
        '口座番号
        If Format(.Range(RNG_KOUZA_NO).Value, "0000000") <> .Range(RNG_SV_KOUZA_NO).Value Then
            ErrRow = .Range(RNG_KOUZA_NO).Row
            ErrCol = .Range(RNG_KOUZA_NO).Column
            '3016 検索時の情報と異なります。
            fncKsCmnMessageDisp MSGLVL_WARNNING, 3016, MSG1_NUMCD, MSG2_CNG_KOUZANO, True
            fncDisp = lngRet
            Exit Function
        End If
    End With
'------------<Modify End   azuma 2008/01/23 (PH4)> ★★★☆-----------------------
    
    
    '時価取得プロシジャー(ストアドJAVA)をCALLし、基準日、時価、PX信託区分を取得する
    With Sheets(SHEET_MAIN)
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 Start
''=== 2007/01/12 Modified By H.Anpo Start
''    lngRet = fncGetKijyunbiJikaPxShinKbn( _
''                Format(.Range(RNG_KOUZA_NO).Value, "0000000"), _
''                Trim(.Range(RNG_KIJYUNBI).Value), _
''                Trim(.Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value), _
''                Trim(Mid(.Cells(lngSelRow, COLN_SHISAN_CODE).Value, 2, 4)), _
''                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
''                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO), _
''                .Cells(lngSelRow, COLN_PX_SHINTAKU_KBN), _
''                .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH), _
''                strKijyunbiAry(), _
''                strJikagakuAry(), _
''                strPxSinKbnAry() _
''                )
'    lngRet = fncGetKijyunbiJikaPxShinKbn( _
'                Format(.Range(RNG_KOUZA_NO).Value, "0000000"), _
'                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
'                Trim(.Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value), _
'                Trim(Mid(.Cells(lngSelRow, COLN_SHISAN_CODE).Value, 2, 4)), _
'                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
'                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO), _
'                .Cells(lngSelRow, COLN_PX_SHINTAKU_KBN), _
'                .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH), _
'                strKijyunbiAry(), _
'                strJikagakuAry(), _
'                strPxSinKbnAry() _
'                )
''=== 2007/01/12 Modified By H.Anpo End
    'パラメータに期初期末時価を追加
    lngRet = fncGetKijyunbiJikaPxShinKbn( _
                Format(.Range(RNG_KOUZA_NO).Value, "0000000"), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
                Trim(.Cells(lngSelRow, COLN_SHISAN_BUNRUI_CODE).Value), _
                Trim(Mid(.Cells(lngSelRow, COLN_SHISAN_CODE).Value, 2, 4)), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_FROM), _
                .Cells(lngSelRow, COLN_RATE_TEKIYOH_KIKAN_TO), _
                .Cells(lngSelRow, COLN_PX_SHINTAKU_KBN), _
                .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH), _
                .Cells(lngSelRow, COLN_KISHO_KIMATSU_KBN), _
                strKijyunbiAry(), _
                strJikagakuAry(), _
                strPxSinKbnAry() _
                )
'=== 2007/08/17 Modified By T.Ichikawa PH3.5対応 End
    End With
    If lngRet <> 0 Then
        fncDisp = lngRet
        Exit Function
    End If
    
    lngRowCnt = UBound(strKijyunbiAry) + 1
    
    If lngRowCnt > 0 Then
        
        '時価情報 行追加
        fncKsCmnAddNrow 2, lngRowCnt
        'データセット
        With Sheets(SHEET_MAIN)
            lngRow = fncKsCmnSearchDataTopRow(2)
            
            For lngCnt = LBound(strKijyunbiAry) To UBound(strKijyunbiAry)
                
                '基準日
                If lngCnt <= UBound(strKijyunbiAry) Then
                    .Cells(lngRow, COLN_J_KIJYUNBI).Value = strKijyunbiAry(lngCnt)
                End If
                
                '時価額
                If lngCnt <= UBound(strJikagakuAry) Then
                    .Cells(lngRow, COLN_J_JIKAGAKU).Value = Trim(strJikagakuAry(lngCnt))
                End If
                
'***** DELETE T.Sato 2006/11/22 *****
'口座トータルの時、時価額を入力可能にする
'                '==== 2006/10/06 Added By H.Anpo Start
'                '口座トータルの時は時価額セルの背景色を白、入力不可にする
'                If (.Cells(lngSelRow, COLN_SHISAN_CODE).Value = "00000") Then
'                    .Cells(lngRow, COLN_J_JIKAGAKU).Select
'                    With Selection
'                        .Interior.ColorIndex = xlNone
'                        .Locked = True
'                        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
'                        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
'                        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
'                        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
'                    End With
'                End If
'                '==== 2006/10/06 Added By H.Anpo End
'***** DELETE T.Sato End *****
                
'=== 2007/05/24 Modified By T.Ichikawa Start
'                'PX信託区分
'                If lngCnt <= UBound(strPxSinKbnAry) Then
                
'------------<Modify Start azuma 2008/02/04 (PH4)> ★★★☆-----------------------
'(更新ボタンの有効／無効処理の後ろに移動)
'''                '基礎数値計算方法が「積数平均」「期初」「期中(追加)」「期中(返戻)」の場合
'''                If .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_SEKISU_AVG Or _
'''                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KISHO Or _
'''                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KICHU_ADD Or _
'''                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KICHU_HENREI Then
'''
'''                    '時価額セルの背景色を白、入力不可にする
'''                    .Cells(lngRow, COLN_J_JIKAGAKU).Select
'''                    With Selection
'''                        .Interior.ColorIndex = xlNone
'''                        .Locked = True
'''                        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
'''                        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
'''                        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
'''                        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
'''                    End With
'------------<Modify End   azuma 2008/02/04 (PH4)> ★★★☆-----------------------


'=== 2007/05/31 Modified By H.Anpo Start
'                'PX信託区分
'                ElseIf lngCnt <= UBound(strPxSinKbnAry) Then
'------------<Modify Start azuma 2008/02/04 (PH4)> ★★★☆-----------------------
'''                End If
'------------<Modify End   azuma 2008/02/04 (PH4)> ★★★☆-----------------------
                'PX信託区分
                If lngCnt <= UBound(strPxSinKbnAry) Then
'=== 2007/05/31 Modified By H.Anpo End

'=== 2007/05/24 Modified By T.Ichikawa End
                
                    Select Case strPxSinKbnAry(lngCnt)
'=== 2007/03/13 Modified By H.Anpo Start
'                        Case "1":
'                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = "PX"
'                        Case "2":
'                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = "信託"
                        Case PX_SHINTAKU_KBN_PX:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_PX
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
                        Case PX_SHINTAKU_KBN_SHINTAKU:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_SHINTAKU
                            '更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
                        Case PX_SHINTAKU_KBN_PX_GANPON:
                            .Cells(lngRow, COLN_J_PXSHINKBN).Value = PX_SHINTAKU_KBN_STR_PX_GANPON
                            '元本の時は時価額セルの背景色を白、入力不可にする
                            .Cells(lngRow, COLN_J_JIKAGAKU).Select
                            With Selection
                                .Interior.ColorIndex = xlNone
                                .Locked = True
                                .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
                                .Borders(xlEdgeTop).ColorIndex = xlAutomatic
                                .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
                                .Borders(xlEdgeRight).ColorIndex = xlAutomatic
                            End With
'=== 2007/03/13 Modified By H.Anpo End

'=== 2007/04/03 Modified By T.Ichikawa Start
                        Case PX_SHINTAKU_KBN_NON:
                            'PX信託区分が""でも更新ボタンを押せるようにする
                            .cmdUpdate.Enabled = True
'=== 2007/04/03 Modified By T.Ichikawa End
                    End Select
                End If
                
'------------<Modify Start azuma 2008/02/04 (PH4)> ★★★☆-----------------------
                '基礎数値計算方法が「積数平均」「期初」「期中(追加)」「期中(返戻)」の場合
                If .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_SEKISU_AVG Or _
                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KISHO Or _
                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KICHU_ADD Or _
                   .Cells(lngSelRow, COLN_KISO_SUCHI_KEISAN_HOHHOH) = KISO_SUCHI_KICHU_HENREI Then
                   
                    '時価額セルの背景色を白、入力不可にする
                    .Cells(lngRow, COLN_J_JIKAGAKU).Select
                    With Selection
                        .Interior.ColorIndex = xlNone
                        .Locked = True
                        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
                        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
                        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
                        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
                    End With

                    '更新ボタンを押下できない様にする
                    .cmdUpdate.Enabled = False
                End If
'------------<Modify End   azuma 2008/02/04 (PH4)> ★★★☆-----------------------
                
                
                lngRow = lngRow + 1
            Next

'=== 2007/03/13 Modified By H.Anpo Start
'            '更新ボタンを押せるようにする
'            .cmdUpdate.Enabled = True
'=== 2007/03/13 Modified By H.Anpo End
            
            '選択された行番号を保存
            .Range(RNG_SV_SELED_ROW).Value = lngSelRow
        End With
        
        Application.ScreenUpdating = True
    
    End If
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrorHandler:
    Application.ScreenUpdating = True
    fncDisp = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    
End Function



