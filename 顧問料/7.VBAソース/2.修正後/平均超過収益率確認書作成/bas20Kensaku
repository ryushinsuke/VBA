Attribute VB_Name = "bas20Kensaku"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料計算システム・平均超過収益率確認書作成
'
'オブジェクト名：bas20Kensaku
'
'機能概要　：検索ボタン処理
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Const MODULE_NAME = "bas20Kensaku"

Public blnLockFlg As Boolean

'*************************************************************************
'関数名　　：検索処理メイン処理
'
'引　　数　：
'           objTarget        I           対象のシート
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Sub gsub_KensakuMain(ByRef objTarget As Object)

On Error GoTo ErrorSection

    Dim strDate As String
    Dim strTime As String
    Dim vDate   As Variant
    Dim blnRet As Boolean
    Dim blnLock As Boolean

    '初期値の設定
    blnLockFlg = False
    blnRet = False
    blnLock = False
    
    With objTarget
        '入力チェック処理(検索時)
        blnRet = gfuncKeisan_SearchInputCheck(ThisWorkbook.Worksheets(MAIN_SHEETNAME))
        
        If blnRet = False Then
            '更新ボタンの無効化
            .cmdUp.Enabled = False
            '印刷ボタンの無効化
            .cmdPrint.Enabled = False
            '作成ボタンの無効化
            .cmdSakusei.Enabled = False
            Call gCom01_SheetProtect(ThisWorkbook.Worksheets(MAIN_SHEETNAME), False)
            ThisWorkbook.Worksheets(MAIN_SHEETNAME).Range("口座名称").Value2 = ""
            ThisWorkbook.Worksheets(MAIN_SHEETNAME).Range("協会報告区分") = ""
            Call gCom01_SheetProtect(ThisWorkbook.Worksheets(MAIN_SHEETNAME), True)
            
            Exit Sub
        End If
        
        blnRet = False
        
        '検索処理とデータ設定
        blnRet = gfuncKeisan_DoSearch(ThisWorkbook.Worksheets(MAIN_SHEETNAME))
        
        If blnRet = False Then
            '更新ボタンの無効化
            .cmdUp.Enabled = False
            '印刷ボタンの無効化
            .cmdPrint.Enabled = False
            '作成ボタンの無効化
            .cmdSakusei.Enabled = False
            
            'システムエラー
            Call gfunc_ErrorMsg(4, 27007, "", "")
            
            Exit Sub
        End If
        
        'サーバ日付の取得
        Call gfunc_GetSvDateTime(strDate, strTime)
        
        'データ取得日時の設定
        Call gCom01_SheetProtect(ThisWorkbook.Worksheets(MAIN_SHEETNAME), False)
        ThisWorkbook.Worksheets(MAIN_SHEETNAME).Range("データ取得日時").Value2 = gfunc_YmdFormat(strDate) & " " _
            & Mid(strTime, 1, 2) & ":" & Mid(strTime, 3, 2) & ":" & Mid(strTime, 5, 2)
        Call gCom01_SheetProtect(ThisWorkbook.Worksheets(MAIN_SHEETNAME), True)
        
        If blnLockFlg = False Then
            '更新ボタンの有効化
            .cmdUp.Enabled = True
            '印刷ボタンの有効化
            .cmdPrint.Enabled = True
            '作成ボタンの有効化
            .cmdSakusei.Enabled = True
        Else
            '更新ボタンの無効化
            .cmdUp.Enabled = False
            '印刷ボタンの無効化
            .cmdPrint.Enabled = False
            '作成ボタンの無効化
            .cmdSakusei.Enabled = False
        End If
    
    End With
    
    Exit Sub
    
ErrorSection:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gsub_KensakuMain", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Sub


'*************************************************************************
'関数名　　：入力チェック処理(検索時)
'
'引　　数　：
'           TargetSheets        I           チェック対象のシート
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function gfuncKeisan_SearchInputCheck(ByRef TargetSheets As Object) As Boolean
On Error GoTo ErrorSection

    Dim strKozaNo       As String
    Dim strKikan        As String
    Dim strKijun        As String
    Dim strSeikoFrom    As String
    Dim strSeikoTo      As String
    
    Dim strDate         As String
    Dim strTime         As String
    Dim strCallOff_Date As String
    
    gfuncKeisan_SearchInputCheck = False
    strKozaNo = ""
    strCallOff_Date = "0"   '
    
    ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時口座ＮＯ") = ""    '検索時口座番号の初期化
    
'1.口座番号の入力チェック
    '画面で入力した口座番号を取得
    strKozaNo = Trim(TargetSheets.Range("口座番号"))

    '入力必須チェック
    If Trim(strKozaNo) = "" Then
        '口座番号が未入力の場合、エラーメッセージを表示
        Call gfunc_ErrorMsg(3, 27000, "口座番号", "7桁で入力して下さい。")
        Exit Function
    End If
    
    '桁数チェック
    If Len(strKozaNo) >= 8 Then
        '8桁以上の入力があった場合、エラーメッセージを表示
        Call gfunc_ErrorMsg(3, 27001, "口座番号", "7桁で入力して下さい。")
        Exit Function
    Else
        '7桁未満の場合は、先頭に0を設定する
         strKozaNo = gfunc_KozaNoFormat(strKozaNo)
         TargetSheets.Range("口座番号") = strKozaNo
    End If
    
    '口座の存在チェック
    If func_KozaNoExist(TargetSheets, strKozaNo, strCallOff_Date) = False Then
        'VW_DT001Dテーブルを検索し、該当情報がない場合は、エラーメッセージを表示
        Call gfunc_ErrorMsg(3, 27003, "口座番号", "")
        blnLockFlg = True
        Exit Function
    End If
    
'2.基準日の入力チェック
    '画面で入力した基準日を取得
    strKijun = Trim(TargetSheets.Range("基準日"))

    '入力必須チェック
    If Trim(strKijun) <> "" Then
        '基準日の入力がある場合
        If gfunc_CheckDate(strKijun) = False Then
            '"基準日：入力に誤りがあります。"
            Call gfunc_ErrorMsg(3, 27001, "基準日", "")
            Exit Function
        End If
    Else
        '基準日が未入力の場合、サーバから当日日付を取得
        Call gfunc_GetSvDateTime(strDate, strTime)
        
        If Trim(strDate) <> "" Then
            TargetSheets.Range("基準日") = Mid(strDate, 1, 4) & Mid(strDate, 5, 2) & Mid(strDate, 7, 2)
        Else
            TargetSheets.Range("基準日") = ""
        End If
        
    End If
    
'3.成功報酬期間Fromの入力チェック

    strSeikoFrom = Trim(TargetSheets.Range("成功報酬From"))

    '入力必須チェック
    If Trim(strSeikoFrom) <> "" Then
        '成功報酬期間Fromの入力
        If gfunc_CheckDate(strSeikoFrom) = False Then
            '"成功報酬期間From：入力に誤りがあります。"
            Call gfunc_ErrorMsg(3, 27001, "成功報酬期間From", "")
            Exit Function
        End If
    Else
        '成功報酬期間Fromが未入力の場合
        '"成功報酬期間From：未入力です。"
        Call gfunc_ErrorMsg(3, 27000, "成功報酬期間From", "8桁で入力して下さい。")
        Exit Function
    End If
    
'５．【成功報酬To】

    strSeikoTo = Trim(TargetSheets.Range("成功報酬To"))

    '①入力ﾁｪｯｸ
    If Trim(strSeikoTo) <> "" Then
    '入力あり
        If gfunc_CheckDate(strSeikoTo) = False Then
            '"成功報酬To：入力に誤りがあります。"
            Call gfunc_ErrorMsg(3, 27001, "成功報酬期間To", "")
            Exit Function
        End If
        If strSeikoFrom > strSeikoTo Then
            Call gfunc_ErrorMsg(3, 27002, "成功報酬期間", "")
            Exit Function
        End If
    Else
    '未入力
        If func_SeikohHosyuKikanToExist(strKozaNo, strSeikoFrom, TargetSheets) = False Then
        '"成功報酬期間がToが未入力です。"
            Call gfunc_ErrorMsg(3, 27004, "成功報酬期間To", "成功報酬期間TOの日付を入力して下さい。")
            Exit Function
        End If
    End If

    '検索時の口座番号を退避
    ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時口座ＮＯ") = gfunc_KozaNoFormat(strKozaNo)

    gfuncKeisan_SearchInputCheck = True


    Exit Function
    
ErrorSection:

    gfuncKeisan_SearchInputCheck = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncKeisan_SearchInputCheck", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function
    
'*************************************************************************
'関数名　　：口座番号の存在チェック処理
'
'引　　数　：
'           TargetSheets    I       表示シート
'           strKozaNo       I       口座番号
'           strCallOff_Date O       口座廃止年月日
'
'戻り値　　：Boolean
'
'機能説明　：口座番号の存在チェック
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'          ：2013/04/12 GUT 梁賀松 顧問バック更改対応
'
'*************************************************************************
Public Function func_KozaNoExist(ByRef TargetSheets As Object _
                                , ByVal strKozaNo As String _
                                , ByRef strCallOff_Date As String) As Boolean
On Error GoTo ErrHandler
                                
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim strData1    As String
    Dim strData2    As String

    func_KozaNoExist = False

   strSql = ""
   strSql = strSql & " SELECT"
   strSql = strSql & "     A.NAME_RJ,"      '略称を表示
   strSql = strSql & "     C.VALUE_NAME"
   strSql = strSql & "    ,NVL(A.CALLOFF_DATE,'0') "
   strSql = strSql & " FROM"
   strSql = strSql & "     VW_DT001D A,"
   strSql = strSql & "     KYK_KOHZA_ZOKUSEI B,"
   strSql = strSql & "     KYK_CODE_VALUE C"
   strSql = strSql & " WHERE"
   strSql = strSql & "     A.prtcd='" & func_ChkQuoteshon(strKozaNo, "'") & "'   AND"
   strSql = strSql & "     A.prtcd=B.KOHZA_NO   AND"
   strSql = strSql & "     C.CODE_NO(+) = '41'   AND"
   strSql = strSql & "     B.DATA_TYPE  = C.CODE_VALUE(+) AND"
'------------<顧問バック更改対応 2013/04/12 GUT梁賀松 START> ------------
'   strSql = strSql & "     A.settei_kbn='1' AND"
   strSql = strSql & "     A.settei_kbn='0' AND"
   strSql = strSql & "     A.GENGO='0' AND"
'------------<顧問バック更改対応 2013/04/12 GUT梁賀松 END> ------------
   strSql = strSql & "     B.SAKUJO_FLG = '0'"
   strSql = strSql & " "

    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)


    strData1 = ""
    strData2 = ""
    '取得データがある場合を名称をセルに設定
    If lngRow > 0 Then
         strData1 = vData(0, 0)
         strData2 = CStr(vData(1, 0))
         strCallOff_Date = vData(2, 0)
    Else
        strData1 = ""
        strData2 = ""
        strCallOff_Date = "0"
    End If

    Call gCom01_SheetProtect(TargetSheets, False)
    TargetSheets.Range("口座名称") = strData1
    TargetSheets.Range("協会報告区分") = strData2
    Call gCom01_SheetProtect(TargetSheets, True)

    Erase vData

    'データありの場合のみ正常
    If lngRow > 0 Then
        func_KozaNoExist = True
    End If

    Exit Function

ErrHandler:
    func_KozaNoExist = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_KozaNoExist", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData


End Function
'*************************************************************************
'関数名　　：成功報酬期間取得データチェック処理
'
'引　　数　：
'           strKozaNo       I       口座番号
'           strSeikoFrom    I       成功報酬期間From
'戻り値　　：Boolean
'
'機能説明　：画面で入力した成功報酬FROMを条件に成功報酬期間テーブルを
'            検索し、2件以上取得できるようであれば、メッセージを表示し
'            成功報酬TOの入力を促す。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SeikohHosyuKikanToExist(ByVal strKozaNo As String, _
                                              ByVal strSeikoFrom As String, _
                                              ByRef TargetSheets As Object) As Boolean
On Error GoTo ErrHandler

    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim strData1    As String
    Dim strData2    As String

    func_SeikohHosyuKikanToExist = False

   strSql = ""
   strSql = strSql & " SELECT"
   strSql = strSql & "     KOHZA_NO,"
   strSql = strSql & "     SEIKOH_HOSYU_KIKAN_FROM,"
   strSql = strSql & "     SEIKOH_HOSYU_KIKAN_TO"
   strSql = strSql & " FROM"
   strSql = strSql & "     KYK_SH_SEIKOH_HOHSHU_KIKAN"
   strSql = strSql & " WHERE"
   strSql = strSql & "     KOHZA_NO = " & strKozaNo & "AND"
   strSql = strSql & "     SEIKOH_HOSYU_KIKAN_FROM = " & strSeikoFrom & "AND"
   strSql = strSql & "     SAKUJO_FLG = '0'"
   strSql = strSql & " "

    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)

    '検索結果のレコード数を判定
    If lngRow >= 2 Then
        '成功報酬期間のTO項目の入力を促すメッセージを表示
        func_SeikohHosyuKikanToExist = False
    Else
    '検索データが1件以下の場合は、処理を正常終了させる
        func_SeikohHosyuKikanToExist = True
    End If

    strData1 = ""
    strData2 = ""

    Erase vData
    
    Exit Function

ErrHandler:
    func_SeikohHosyuKikanToExist = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SeikohHosyuKikanToExist", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData


End Function


'*************************************************************************
'関数名　　：検索処理とデータ設定
'
'引　　数　：
'           iKind       I       削除対象
'           AllDel      I       全削除フラグ
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function gfuncKeisan_DoSearch(ByRef TargetSheets As Object) As Boolean
On Error GoTo Error_Section
    
    Dim blnRet          As Boolean
    Dim strKozaNo       As String
    Dim strKikan        As String
    Dim strKikanId      As String       '請求期間ID(顧問料請求期間テーブルから取得)
    
    Dim vDatKeiyaku()   As Variant      '顧問料請求期間情報データ
    Dim lngKeiyakuCnt   As Long         '顧問料請求期間情報データ件数
    Dim vDatKozaNo()    As Variant      '口座属性情報データ
    Dim lngKozaNoCnt    As Long         '口座属性情報データ件数
    Dim vDatSeiko()     As Variant      '成功報酬期間情報データ
    Dim lngSeikoCnt     As Long         '成功報酬期間情報データ件数
    Dim vDatRoring()    As Variant      '年ごと超過収益率情報データ
    Dim lngRoringCnt    As Long         '年ごと超過収益率情報データ件数
    Dim strSeikohId     As String       '成功報酬期間ID
    
    Dim strSeikoFrom    As String
    Dim strSeikoTo      As String
    
    strKikanId = ""
    Erase vDatKeiyaku
    Erase vDatKozaNo
    Erase vDatSeiko
    Erase vDatRoring
       
    gfuncKeisan_DoSearch = False

    ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時成功報酬期間ID") = ""   '検索時の成功報酬期間IDの初期化

'*******************************************************
'* 関数開始　                                        　*
'*******************************************************

    '検索キー情報取得
    strKozaNo = Trim(gfunc_KozaNoFormat(TargetSheets.Range("口座番号")))
    strKikan = Trim(gfunc_YmdFormat(TargetSheets.Range("顧問料請求期間")))

'６．【顧問料請求期間情報の取得】
    blnRet = func_GetKeiyakuInfo(TargetSheets, strKozaNo, Replace(strKikan, "/", "") _
                                   , vDatKeiyaku, lngKeiyakuCnt)
    If blnRet = False Then
        Exit Function
    End If
    '請求期間IDの取得
    If lngKeiyakuCnt > 0 Then
        strKikanId = Trim(vDatKeiyaku(0, 0))
    Else
        blnLockFlg = True
        Call gfunc_ErrorMsg(3, 27005, "基準日", "")
        gfuncKeisan_DoSearch = True
        Exit Function
    End If
     
'７．【口座属性情報の取得】
    blnRet = func_GetKozaNoInfo(TargetSheets, strKozaNo, vDatKozaNo, lngKozaNoCnt)
    If lngKozaNoCnt = 0 Then
        blnLockFlg = True
        Call gfunc_ErrorMsg(3, 27006, "口座番号", "")
        gfuncKeisan_DoSearch = True
        Exit Function
    End If
    If blnRet = False Then
        Exit Function
    End If
    
'８．【成功報酬期間情報の取得】
    strSeikoFrom = Trim(TargetSheets.Range("成功報酬From"))
    strSeikoTo = Trim(TargetSheets.Range("成功報酬To"))
    blnRet = func_GetSeikoInfo(TargetSheets, strKozaNo, Replace(strSeikoFrom, "/", ""), Replace(strSeikoTo, "/", "") _
                                   , vDatSeiko, lngSeikoCnt)
    If blnRet = False Then
        Exit Function
    End If
    '成功報酬期間IDの取得
    If lngSeikoCnt > 0 Then
        strSeikohId = Trim(vDatSeiko(0, 0))
        ThisWorkbook.Worksheets(TEMPLATE_SHEETNAME).Range("検索時成功報酬期間ID") = Trim(vDatSeiko(0, 0))
    End If
    
    
'９．【年ごと超過収益率情報の取得】
    If Trim(strSeikohId) <> "" Then
        blnRet = func_GetRoringInfo(TargetSheets, strKozaNo, strSeikohId, vDatRoring, lngRoringCnt)
        If blnRet = False Then
            Exit Function
        End If
    End If
    
'１０.取得データの表示
    If Trim(strKikanId) <> "" Then
        '　顧問料請求期間情報の画面設定
        blnRet = func_SetKeiyakuInfo(TargetSheets, vDatKeiyaku, lngKeiyakuCnt)
        If blnRet = False Then
            Exit Function
        End If
    End If
    
    If lngKozaNoCnt > 0 Then
        blnRet = False
        '　口座属性情報の画面設定
        blnRet = func_SetKouzaInfo(TargetSheets, vDatKozaNo, lngKozaNoCnt)
        If blnRet = False Then
            Exit Function
        End If
    End If

    If Trim(strSeikohId) <> "" Then
        If lngSeikoCnt > 0 Then
            blnRet = False
            '　成功報酬期間情報の画面設定
            blnRet = func_SetSeikoInfo(TargetSheets, vDatSeiko, lngSeikoCnt)
            If blnRet = False Then
                Exit Function
            End If
        End If

       
        '　ローリング情報の画面設定
        If lngRoringCnt > 0 Then
            blnRet = False
            blnRet = func_SetRoringInfo(TargetSheets, "1", vDatRoring, lngRoringCnt)
            If blnRet = False Then
                Exit Function
            End If
        End If
    
    End If
    
    '取得データをメモリーから破棄
    Erase vDatKozaNo
    Erase vDatSeiko
    Erase vDatRoring
    
    gfuncKeisan_DoSearch = True


    Exit Function

Error_Section:

    gfuncKeisan_DoSearch = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfuncKeisan_DoSearch", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

    Erase vDatKozaNo
    Erase vDatSeiko
    Erase vDatRoring
    
End Function

'*************************************************************************
'関数名　　：顧問料請求期間情報取得処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           strKozaNo       I       口座番号
'           strKikan        I       顧問料請求期間
'           vdata()         O       取得結果
'           lngRow          O       取得件数
'
'戻り値　　：Boolean
'
'機能説明　：顧問料請求期間情報を取得する
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_GetKeiyakuInfo(ByRef TargetSheets As Object _
                                   , ByVal strKozaNo As String _
                                   , ByVal strKikan As String _
                                   , ByRef vData() As Variant _
                                   , ByRef lngRow As Long) As Boolean
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim lngCol      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    
    func_GetKeiyakuInfo = False
    
   strSql = ""
   strSql = strSql & " SELECT"
   strSql = strSql & "     SEIKYU_KIKAN_ID,"
   strSql = strSql & "     SEIKYU_KIKAN_FROM,"
   strSql = strSql & "     SEIKYU_KIKAN_TO,"
   strSql = strSql & "     SHINTAKU_KIKAN_FROM,"
   strSql = strSql & "     SHINTAKU_KIKAN_TO,"
   strSql = strSql & "     KOMON_KEIYAKU_KIKAN_FROM,"
   strSql = strSql & "     KOMON_KEIYAKU_KIKAN_TO,"
   strSql = strSql & "     KEIYAKU_KIN,"
   strSql = strSql & "     NYUKIN_YMD_KBN,"
   strSql = strSql & "     NENKAN_NISSU_KBN  AS KEIYAKUJ"
   strSql = strSql & "    ,SHOKAI_SAISHU_KBN"
   strSql = strSql & "   ,HEIZAN_DANMEN_KBN"        '平残断面区分
   strSql = strSql & "   ,MAE_ATO_BARAI_KBN"       '前払後払区分
   strSql = strSql & "   ,ZEROEN_SEIKYUSHO_KBN"    '０円請求書区分
   strSql = strSql & " FROM"
   strSql = strSql & "     KYK_SEIKYU_KIKAN"
   strSql = strSql & " WHERE"
   strSql = strSql & "     KOHZA_NO = '" & func_ChkQuoteshon(strKozaNo, "'") & "' "
   strSql = strSql & " AND SEIKYU_KIKAN_FROM <= " & strKikan
   strSql = strSql & " AND SEIKYU_KIKAN_TO >= " & strKikan
   strSql = strSql & " AND SAKUJO_FLG = '0'"
    
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        Exit Function
    End If
    
    func_GetKeiyakuInfo = True
    
    Exit Function

ErrHandler:
    func_GetKeiyakuInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetKeiyakuInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function

'*************************************************************************
'関数名　　：口座属性情報取得処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           strKozaNo       I       口座番号
'           vdata()         O       取得結果
'           lngRow          O       取得件数
'
'戻り値　　：Boolean
'
'機能説明　：口座属性情報情報を取得する
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_GetKozaNoInfo(ByRef TargetSheets As Object _
                                   , ByVal strKozaNo As String _
                                   , ByRef vData() As Variant _
                                   , ByRef lngRow As Long) As Boolean
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim lngCol      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    
    func_GetKozaNoInfo = False
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     SEIKOH_HOHSHU_KBN,"
    strSql = strSql & "     SEIKOH_HOHSHU_TYPE,"
    strSql = strSql & "     ANBUN_HOHHOH,"
    strSql = strSql & "     KAMIKI_MISHU_KAKEME_RATE"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_KOHZA_ZOKUSEI"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KOHZA_NO = '" & func_ChkQuoteshon(strKozaNo, "'") & "' "
    strSql = strSql & " AND SAKUJO_FLG = '0'"
    
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        Exit Function
    End If
    
    func_GetKozaNoInfo = True
    
    Exit Function

ErrHandler:
    func_GetKozaNoInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetKeiyakuInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------


End Function

'*************************************************************************
'関数名　　：成功報酬期間情報取得処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           strKozaNo       I       口座番号
'           strSeikoFrom    I       成功報酬期間From
'           strSeikoTo      I       成功報酬期間To
'           vdata()         O       取得結果
'           lngRow          O       取得件数
'
'戻り値　　：Boolean
'
'機能説明　：成功報酬期間情報を取得する
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_GetSeikoInfo(ByRef TargetSheets As Object _
                                   , ByVal strKozaNo As String _
                                   , ByVal strSeikoFrom As String _
                                   , ByVal strSeikoTo As String _
                                   , ByRef vData() As Variant _
                                   , ByRef lngRow As Long) As Boolean
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim lngCol      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    
    func_GetSeikoInfo = False
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     SEIKOH_HOSYU_KIKAN_ID,"
    strSql = strSql & "     MOKUHYO_TYOHKASYUEKI_RITSU_KBN,"
    strSql = strSql & "     MOKUHYO_TYOHKASYUEKI_RITSU,"
    strSql = strSql & "     SEIKOH_HOSYU_KIKAN_TO"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SH_SEIKOH_HOHSHU_KIKAN"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KOHZA_NO = '" & func_ChkQuoteshon(strKozaNo, "'") & "' "
    strSql = strSql & " AND SEIKOH_HOSYU_KIKAN_FROM = " & strSeikoFrom
    If Trim(strSeikoTo) <> "" Then
        strSql = strSql & " AND SEIKOH_HOSYU_KIKAN_TO = " & strSeikoTo
    End If
    strSql = strSql & " AND SAKUJO_FLG = '0'"
    
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        Exit Function
    End If
    
    func_GetSeikoInfo = True
    
    Exit Function

ErrHandler:
    func_GetSeikoInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetSeikoInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function


'*************************************************************************
'関数名　　：年ごと超過収益率情報取得処理
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           strKozaNo       I       口座番号
'           strSeikohId     I       成功報酬期間ID
'           vdata()         O       取得結果
'           lngRow          O       取得件数
'
'戻り値　　：Boolean
'
'機能説明　：年ごと超過収益率情報を取得する
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_GetRoringInfo(ByRef TargetSheets As Object _
                                   , ByVal strKozaNo As String _
                                   , ByVal strSeikohId As String _
                                   , ByRef vData() As Variant _
                                   , ByRef lngRow As Long) As Boolean
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim lngCol      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    
    func_GetRoringInfo = False
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     ROLLING_NEN_NO,"
    strSql = strSql & "     ROLLING_KIKAN_FROM,"
    strSql = strSql & "     ROLLING_KIKAN_TO,"
    strSql = strSql & "     NENRITSU_KANSAN_HOHHO,"
    strSql = strSql & "     NENKAN_NISSU_KBN,"
    strSql = strSql & "     FUND_SYUEKI_RITSU,"
    strSql = strSql & "     BENCHMARK_SYUEKI_RITSU"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SH_NENGOTO_SYUEKI_RITSU"
    strSql = strSql & " WHERE"
    strSql = strSql & "     KOHZA_NO = '" & func_ChkQuoteshon(strKozaNo, "'") & "' "
    strSql = strSql & " AND SEIKOH_HOSYU_KIKAN_ID = " & strSeikohId
    strSql = strSql & " AND SAKUJO_FLG = '0'"
    strSql = strSql & " ORDER BY ROLLING_NEN_NO"
    
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    
    If Trim(strErrCode) <> "" Then
        Exit Function
    End If
    
    func_GetRoringInfo = True
    
    Exit Function

ErrHandler:
    func_GetRoringInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_GetRoringInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：ワークシートに顧問料請求期間情報を設定する
'
'引　　数　：
'           TargetSheets    O       処理対象ワークシート
'           vdata()         I       設定データ
'           lngRow          I       設定データ件数
'
'戻り値　　：Boolean
'
'機能説明　：処理対象ワークシートにデータを設定する。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SetKeiyakuInfo(ByRef TargetSheets As Object _
                                   , ByVal vData As Variant _
                                   , ByVal lngRow As Long) As Boolean
On Error GoTo ErrHandler

    func_SetKeiyakuInfo = False
    
    With TargetSheets
        .Range("顧問請求From") = CStr(vData(1, 0))
        .Range("顧問請求To") = CStr(vData(2, 0))
        .Range("信託From") = CStr(vData(3, 0))
        .Range("信託To") = CStr(vData(4, 0))
        .Range("契約From") = CStr(vData(5, 0))
        .Range("契約To") = CStr(vData(6, 0))
        .Range("入金日区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(8, 0)), "入金日区分リスト")
        .Range("年間日数") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(9, 0)), "年間日数リスト")
        .Range("初回最終区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(10, 0)), "初回最終区分リスト")
        .Range("平残断面区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(11, 0)), "平残断面区分リスト")
        .Range("前払後払区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(12, 0)), "前払後払区分リスト")
        .Range("ゼロ円請求書区分") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                CStr(vData(13, 0)), "ゼロ円請求書区分リスト")
    End With

    func_SetKeiyakuInfo = True

    Exit Function

ErrHandler:
    func_SetKeiyakuInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SetKeiyakuInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：ワークシートに口座属性を設定する
'
'引　　数　：
'           TargetSheets    O       処理対象ワークシート
'           vdata()         I       設定データ
'           lngRow          I       設定データ件数
'
'戻り値　　：Boolean
'
'機能説明　：処理対象ワークシートにデータを設定する。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SetKouzaInfo(ByRef TargetSheets As Object _
                                   , ByVal vData As Variant _
                                   , ByVal lngRow As Long) As Boolean
On Error GoTo ErrHandler

    func_SetKouzaInfo = False
    
    With TargetSheets
        If CStr(vData(0, 0)) = "1" Then
            .chkSeiko = True
        Else
            .chkSeiko = False
        End If
        .Range("成功報酬タイプ") = func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                                        CStr(vData(1, 0)), "成功報酬タイプリスト")
        .Range("上期未収掛け目") = CStr(vData(3, 0))
    End With

    func_SetKouzaInfo = True

    Exit Function

ErrHandler:
    func_SetKouzaInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SetKouzaInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：ワークシートに成功報酬期間を設定する
'
'引　　数　：
'           TargetSheets    O       処理対象ワークシート
'           vdata()         I       設定データ
'           lngRow          I       設定データ件数
'
'戻り値　　：Boolean
'
'機能説明　：処理対象ワークシートにデータを設定する。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SetSeikoInfo(ByRef TargetSheets As Object _
                                   , ByVal vData As Variant _
                                   , ByVal lngRow As Long) As Boolean
On Error GoTo ErrHandler

    func_SetSeikoInfo = False
    
    With TargetSheets
        If CStr(vData(1, 0)) = "1" Then
            '目標超過収益率区分が1(目標超過収益率対象口座)の場合
            .chkMokuhyo = True
            .Range("目標超過収益率2") = CStr(vData(2, 0)) * 100

        Else
            '目標超過収益率区分が0(目標超過収益率対象外口座)の場合
            .chkMokuhyo = False
            .Range("目標超過収益率2") = CStr(vData(2, 0))
        End If
    End With

    func_SetSeikoInfo = True

    Exit Function

ErrHandler:
    func_SetSeikoInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SetSeikoInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：ワークシートに年ごと超過収益率情報を設定する
'
'引　　数　：
'           TargetSheets    O       処理対象ワークシート
'           strType         I       取得タイプ(1:ローリング期間
'           vdata()         I       設定データ
'           lngRow          I       設定データ件数
'
'戻り値　　：Boolean
'
'機能説明　：処理対象ワークシートにデータを設定する。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SetRoringInfo(ByRef TargetSheets As Object _
                                   , ByVal strType As String _
                                   , ByVal vData As Variant _
                                   , ByVal lngRow As Long) As Boolean
On Error GoTo ErrHandler

    Dim lngCnt      As Long
    Dim lngStartRow As Long
    
    Dim strMAXNenNo     As String 'ローリング年番号最大値
    
    func_SetRoringInfo = False
    
    ThisWorkbook.Application.ScreenUpdating = False
    
    '明細行の追加
    With TargetSheets
    For lngCnt = 1 To lngRow
        Select Case strType
        Case "1"
        'ローリング期間のデータ表示
            
            '明細行の追加
            Call gsub_NewClick(1)
            
            'カレント明細行番号取得
            lngStartRow = fncKsCmnSearchNewRow(TargetSheets, 1) - 1

            'データの設定
            .Cells(lngStartRow, 3).Value = vData(0, lngCnt - 1)     '年番号
            strMAXNenNo = vData(0, lngCnt - 1)
            .Cells(lngStartRow, 5).Value = vData(1, lngCnt - 1)     'ローリング期間From
            .Cells(lngStartRow, 7).Value = vData(2, lngCnt - 1)     'ローリング期間To
            .Cells(lngStartRow, 9).Value = _
                            func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                            vData(3, lngCnt - 1), "年率換算方式リスト")    '年率換算方式
            .Cells(lngStartRow, 14).Value = _
                            func_SearchComboItem(ThisWorkbook.Worksheets(DATA_SHEETNAME), _
                            vData(4, lngCnt - 1), "年間日数リスト")   '年間日数
            .Cells(lngStartRow, 18).Value = vData(5, lngCnt - 1) * 100   'ファンド収益率(%)
            .Cells(lngStartRow, 23).Value = vData(6, lngCnt - 1) * 100   'ベンチマーク収益率(%)
            
        End Select
        
    Next lngCnt
    
    'ローリング年数の更新
    .Range("ローリング年数") = strMAXNenNo
    
    End With
    
    func_SetRoringInfo = True

    Exit Function

ErrHandler:
    func_SetRoringInfo = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_SetRoringInfo", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：コンボ表示検索
'
'引　　数　：
'           TargetSheets    I       処理対象ワークシート
'           strCode         I       コード(DBなどから取得したコード)
'           strName         I       サーチするリスト名
'
'戻り値　　：コンボ表示文字列
'
'機能説明　：コード値を入力するとその文字列を返す
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function func_SearchComboItem( _
    ByRef TargetSheets As Object _
  , ByVal strCode As String _
  , ByVal strName As String) As String

    Dim c       As Variant
    Dim lngCut  As Long
    
    func_SearchComboItem = ""
    
    'コードと名称の区切り位置取得
    lngCut = gfunc_Separate(strName)
    
    If lngCut = 0 Then
        func_SearchComboItem = strCode
        Set c = Nothing
        Exit Function
    End If
    
    For Each c In TargetSheets.Range(strName)
        
        If Trim(c.Value) <> "" Then
            If strCode = Left(c.Value, lngCut) Then
                func_SearchComboItem = c.Value
                Exit For
            End If
        End If
    
    Next c
    
    Set c = Nothing

End Function

'*************************************************************************
'関数名　　：コードと名称の区切り位置取得処理
'
'引　　数　：
'           strName     I       対象コンボ名
'
'戻り値　　：コードの桁数
'
'機能説明　：対象コンボ名からコード部桁数を返す
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function gfunc_Separate(ByVal strName As String) As Long

    Dim lngCut As Long
    
    gfunc_Separate = 0
    
    
    Select Case strName
    Case "入金日区分リスト", "年間日数リスト", "初回最終区分リスト", "平残断面区分リスト", "前払後払区分リスト", "ゼロ円請求書区分リスト", "成功報酬タイプリスト", "年率換算方式リスト"
        lngCut = 1
    Case Else
        lngCut = 0
    End Select

    gfunc_Separate = lngCut

End Function
