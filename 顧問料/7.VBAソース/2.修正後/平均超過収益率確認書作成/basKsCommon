Attribute VB_Name = "basKsCommon"
Option Explicit

Const MODULE_NAME = "basKsCommon"


Public Const MAIN_SHEETNAME = "main"
Public Const TEMPLATE_SHEETNAME = "Template"
Public Const TEMPLATE2_SHEETNAME = "Template2"
Public Const DATA_SHEETNAME = "Data"

Private Const mCELLNAME = "B"           'チェックボックスの表示位置
Public Const mLINKCELLNAME = "AQ"      'チェックボックスリンクセルの位置(チェックボックスの値を格納)

Public Const KikanStart = 27

'*************************************************************************
'関数名　　：明細行追加メイン処理
'
'引　　数　：
'           iInsRow       I       追加対象ROW
'           iSrcRow       I       複写元ROW
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の追加を行う。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnInsRow(TargetSheets As Object, iInsRow As Long, iSrcRow As Long) As Long
    
On Error GoTo ErrorHandler

    gKsC_fncKsCmnInsRow = 0
    
    ThisWorkbook.Sheets(TEMPLATE_SHEETNAME).Rows(iSrcRow & ":" & iSrcRow).Copy
    
    'Sheets("メイン画面").Select
    ThisWorkbook.Sheets(MAIN_SHEETNAME).Select
    ThisWorkbook.Sheets(MAIN_SHEETNAME).Rows(iInsRow & ":" & iInsRow).Select
    ThisWorkbook.Sheets(MAIN_SHEETNAME).Rows(iInsRow & ":" & iInsRow).Insert Shift:=xlDown
    ThisWorkbook.Application.CutCopyMode = False

    'チェックボックスの追加
    Call fncCmnSetCheckBox(TargetSheets, mCELLNAME & iInsRow, mLINKCELLNAME & iInsRow)
    
    TargetSheets.Cells(iInsRow, 3).Select
    
    Exit Function

ErrorHandler:
    gKsC_fncKsCmnInsRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnInsRow", Err.Number, Err.Description)
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    On Error GoTo 0
    
End Function

'*************************************************************************
'関数名　　：明細行追加メイン処理（帳票用）
'
'引　　数　：
'           iInsRow       I       追加対象ROW
'           iSrcRow       I       複写元ROW
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の追加を行う。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnInsRow2(TargetSheets As Object, iInsRow As Long, iSrcRow As Long) As Long
    
On Error GoTo ErrorHandler

    gKsC_fncKsCmnInsRow2 = 0
    
    ThisWorkbook.Sheets(TEMPLATE2_SHEETNAME).Rows(iSrcRow & ":" & iSrcRow).Copy
    
    'Sheets("TargetSheets").Select
    TargetSheets.Select
    TargetSheets.Rows(iInsRow & ":" & iInsRow).Select
    TargetSheets.Rows(iInsRow & ":" & iInsRow).Insert Shift:=xlDown

    TargetSheets.Cells(iInsRow, 3).Select
    
    Exit Function

ErrorHandler:
    gKsC_fncKsCmnInsRow2 = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnInsRow2", Err.Number, Err.Description)
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    On Error GoTo 0
    
End Function

'*************************************************************************
'関数名　　：明細行削除メイン処理
'
'引　　数　：
'           iKind       I       削除対象(1:ローリング期間
'           AllDel      I       全削除フラグ(初期値:False)　True:全削除
'
'戻り値　　：Long       エラー番号
'
'機能説明　：明細行の削除を行う。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function gKsC_fncKsCmnCheckRowDelete(TargetSheets As Object, iKind As Long, Optional AllDel As Boolean = False) As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    gKsC_fncKsCmnCheckRowDelete = 0
    
    Select Case iKind
        Case 1:     'ローリング期間
                lngCnt = fncKsCmnSearchDataTopRow(TargetSheets, 1)
        Case Else:
                Call gfunc_ErrorMsg(4, 27007, "", "")
                Exit Function
    End Select
        
    With TargetSheets
        Do While (.Range(mLINKCELLNAME & lngCnt) <> vbNullString)
            If AllDel = False Then
            '選択削除
                If .Range(mLINKCELLNAME & lngCnt) Then
                    Call fncKsCmnDeleteRow(TargetSheets, lngCnt)
                    '年番号の再設定を行う
                    Call fncNenNumber(ThisWorkbook.Worksheets(MAIN_SHEETNAME))
                Else
                    lngCnt = lngCnt + 1
                End If
            Else
            '全削除
                Call fncKsCmnDeleteRow(TargetSheets, lngCnt)
            End If
        Loop
    End With
    
    Exit Function

ErrorHandler:
    gKsC_fncKsCmnCheckRowDelete = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gKsC_fncKsCmnCheckRowDelete", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Function



'*************************************************************************
'関数名　　：明細行削除処理
'
'引　　数　：
'           iDelRow       I       削除対象ROW
'
'戻り値　　：Long       エラー番号
'
'機能説明　：指定された明細行の削除を行う。
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Private Function fncKsCmnDeleteRow(TargetSheets As Object, iDelRow As Long) As Long
On Error GoTo ErrorHandler

    fncKsCmnDeleteRow = 0
    
    If TargetSheets.Range(mLINKCELLNAME & iDelRow) = "" Then
        Exit Function
    End If
    
    'チェックボックスの削除処理
    Call fncCmnDelCheckBox(TargetSheets, mLINKCELLNAME & iDelRow)
    
    '明細行の削除処理
    TargetSheets.Rows(iDelRow & ":" & iDelRow).Select
    ThisWorkbook.Application.CutCopyMode = False
    Selection.Delete Shift:=xlUp

    TargetSheets.Cells(iDelRow, 2).Select

    Exit Function

ErrorHandler:
    fncKsCmnDeleteRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnDeleteRow", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function




'*************************************************************************
'関数名　　：明細行追加位置取得処理
'
'引　　数　：
'           iKind       I       削除対象(1:ローリング期間
'
'戻り値　　：明細行の追加行番号
'
'機能説明　：明細行の追加行番号を返す
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncKsCmnSearchNewRow(TargetSheets As Object, iKind As Long) As Long
    Dim lngKindCnt As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    fncKsCmnSearchNewRow = 0
    
    If iKind <> 1 Then
        Exit Function
    End If
    
'    lngCnt = 18
    lngCnt = 25
    lngKindCnt = 0
    
    With TargetSheets
        Do While (1)
            If .Cells(lngCnt, 2) = "対象" Then
                lngKindCnt = lngKindCnt + 1
                lngCnt = lngCnt + 2
            End If
            
            If lngKindCnt = iKind And .Range(mLINKCELLNAME & lngCnt) = vbNullString Then
                fncKsCmnSearchNewRow = lngCnt
                Exit Function
            End If
            
            lngCnt = lngCnt + 1
        Loop
    End With
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncKsCmnSearchNewRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnSearchNewRow", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：明細行追加位置取得処理（帳票用）
'
'引　　数　：
'           iKind       I       削除対象(1:ローリング期間
'
'戻り値　　：明細行の追加行番号
'
'機能説明　：明細行の追加行番号を返す
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncKsCmnSearchNewRow2(TargetSheets As Object, iKind As Long) As Long
    Dim lngKindCnt As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    fncKsCmnSearchNewRow2 = 0
    
    If iKind <> 1 Then
        Exit Function
    End If
    
    lngCnt = 18
    lngKindCnt = 0
    
    With TargetSheets
        Do While (1)
            If .Cells(lngCnt, 4) = "＜超過収益率詳細＞" Then
                lngKindCnt = lngKindCnt + 1
                lngCnt = lngCnt + 2
                fncKsCmnSearchNewRow2 = lngCnt
                Exit Function
            End If

            lngCnt = lngCnt + 1
        Loop
    End With
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncKsCmnSearchNewRow2 = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnSearchNewRow2", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'*************************************************************************
'関数名　　：明細行位置取得処理
'
'引　　数　：
'           iKind       I       削除対象(1:ローリング期間
'
'戻り値　　：明細行の開始行番号
'
'機能説明　：明細行の開始行番号を返す
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncKsCmnSearchDataTopRow(TargetSheets As Object, iKind As Long) As Long
    Dim lngKindCnt As Long
    Dim lngCnt As Long

On Error GoTo ErrorHandler

    fncKsCmnSearchDataTopRow = 0
    
    lngCnt = 24
    lngKindCnt = 0
    
    With TargetSheets
        Do While (1)
            If .Cells(lngCnt, 2) = "対象" Then
                lngKindCnt = lngKindCnt + 1
                If lngKindCnt = iKind Then
                    fncKsCmnSearchDataTopRow = lngCnt + 2
                    Exit Function
                End If
            End If
            lngCnt = lngCnt + 1
        Loop
    End With
    
    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncKsCmnSearchDataTopRow = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncKsCmnSearchDataTopRow", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Function

'チェックボックスの作成
'*************************************************************************
'関数名　　：チェックボックスの作成
'
'引　　数　：
'           CellName       I       作成対象セル
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncCmnSetCheckBox(ByRef objTarget As Object _
                                , ByVal CellName As String _
                                , ByVal LinkCellName As String) As Long
    
On Error GoTo ErrorHandler
    fncCmnSetCheckBox = 0
    
    Dim lngZoom As Long
    
    lngZoom = ThisWorkbook.Application.ActiveWindow.Zoom
    ThisWorkbook.Application.ActiveWindow.Zoom = 100
    
    With objTarget.Range(CellName)
        ThisWorkbook.Worksheets(MAIN_SHEETNAME).OLEObjects.Add( _
            ClassType:="Forms.CheckBox.1", _
            Link:=False, _
            DisplayAsIcon:=False, _
            Left:=.Left + 6, _
            Top:=.Top + 2.2, _
            Width:=10.5, _
            Height:=10). _
        Select
        Selection.LinkedCell = LinkCellName

        ThisWorkbook.Worksheets(MAIN_SHEETNAME).Range(LinkCellName).Value = False
    End With

    ThisWorkbook.Application.ActiveWindow.Zoom = lngZoom
    Exit Function

ErrorHandler:
    fncCmnSetCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnSetCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    
End Function

'
'*************************************************************************
'関数名　　：チェックボックスの削除
'
'引　　数　：
'           CellName       I       削除対象セル
'
'戻り値　　：
'
'機能説明　：
'
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncCmnDelCheckBox(ByRef objTarget As Object, CellName As String) As Long
Dim c As Object
    
On Error GoTo ErrorHandler
    
    With objTarget
        For Each c In .Shapes
            If Mid(c.Name, 1, 8) = "CheckBox" Then
                .Shapes(c.Name).Select
                If Selection.LinkedCell = CellName Then
                    Selection.Delete
                End If
            End If
        Next
    End With

    Exit Function

ErrorHandler:
'    MsgBox Err.Description
    fncCmnDelCheckBox = Err.Number
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncCmnDelCheckBox", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
End Function

'*************************************************************************
'関数名　　：エクセルファイル削除
'引　　数　：
'           strFName                I　　削除ファイル名
'戻り値　　：処理結果
'機能説明　：エクセルファイルを削除する。
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncDeleteFile(ByVal strFName As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncDeleteFile"

On Error GoTo ErrSection
    
    Dim objFS               As Object

    fncDeleteFile = False

    Set objFS = CreateObject("Scripting.FileSystemObject")
  
    objFS.DeleteFile strFName, True
    
    fncDeleteFile = True
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    fncDeleteFile = False
   
End Function


'*************************************************************************
'関数名　　：帳票ファイル印刷
'引　　数　：
'           strPreFName　　I       帳票名
'           strDir  　　 　I       フォルダ名
'戻り値　　：処理結果
'機能説明　：該当帳票ファイルを印刷する。
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncPrintBook(ByVal strPreFName As String, ByVal strDir As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncPrintBook"

On Error GoTo ErrSection

    Dim strOutFName     As String
    Dim objFS           As Object         ' オブジェクト型で宣言します。

    Dim wkPrintBook As Workbook

    Dim lngSheetCnt As Long
    Dim lngSheetMax As String
    Dim lngCnt  As Long
    Dim arySheetName

    Call subBeginProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)

    fncPrintBook = False
    strOutFName = ""

    ' 該当フォルダから最新のファイル名称を取得する。
    Set objFS = Application.FileSearch
    With objFS
        .LookIn = strDir
        .FileType = msoFileTypeAllFiles

        .Filename = strPreFName & "_*.xls"
        If .Execute(SortBy:=msoSortByFileName, SortOrder:=msoSortOrderDescending) > 0 Then
            strOutFName = .FoundFiles(1)
        Else
            fncPrintBook = False
            
            ' 該当ファイルが存在しません。
            Call gfunc_ErrorMsg(3, 27018, strPreFName, "")
            Exit Function
       End If
    End With
    
    ' ファイル印刷
    Set wkPrintBook = Workbooks.Open(Filename:=strOutFName, ReadOnly:=True)

  
    lngSheetMax = wkPrintBook.Sheets.Count
    ReDim arySheetName(0)
    lngCnt = 0
    For lngSheetCnt = 1 To lngSheetMax
        If lngCnt > 0 Then
            ReDim Preserve arySheetName(lngCnt)
        End If
        arySheetName(lngCnt) = wkPrintBook.Worksheets(lngSheetCnt).Name
        lngCnt = lngCnt + 1
    Next lngSheetCnt
    
    wkPrintBook.Sheets(arySheetName).Select
    DoEvents
    wkPrintBook.Application.ActiveWindow.SelectedSheets.PrintOut
    DoEvents

    Erase arySheetName
    
    wkPrintBook.Close SaveChanges:=False
    Set wkPrintBook = Nothing
    fncPrintBook = True
    
    ' 印刷確認ダイアログボックスの部分が更新されない為追加する。
    Application.ScreenUpdating = True    '！！！ 削除しない事。
    Application.ScreenUpdating = False   '！！！ 削除しない事。
    ' 印刷確認ダイアログボックスの部分が更新されない為追加する。
    
    Set objFS = Nothing
    
    Call subEndProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    Set objFS = Nothing
    Workbooks(Workbooks.Count).Close SaveChanges:=False
    fncPrintBook = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'   Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    
End Function

'*************************************************************************
'関数名　　：エクセルファイルコピー
'引　　数　：
'           strSourceFName          I　　ソースファイル名
'           strDestinationFName     I　　ターゲットファイル名
'戻り値　　：処理結果
'機能説明　：エクセルファイルをコピーする。
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncCopyBook(ByVal strSourceFName As String, _
                       ByVal strDestinationFName As String) As Boolean
    
    Const PROCEDURE_NAME As String = "fncCopyBook"

On Error GoTo ErrSection
    
    Dim strInFName          As String
    Dim strOutFName         As String
    Dim objFS               As Object

    fncCopyBook = False

    Set objFS = CreateObject("Scripting.FileSystemObject")

    strInFName = Application.ActiveWorkbook.Path & "\template\" & strSourceFName
  
    objFS.CopyFile strInFName, strDestinationFName
    
    fncCopyBook = True
    
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    fncCopyBook = False

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
   
End Function

'*************************************************************************
'関数名　　：年番号再設定
'引　　数　：
'           lngAddRow      I       設定ROW
'戻り値　　：処理結果
'機能説明　：新規ボタン押下時または、削除ボタン押下時に
'　　　　　　年番号の再設定を行う
'更新履歴　：2011/02/01 SRA 宮嵜     新規作成
'
'*************************************************************************
Public Function fncNenNumber(ByRef TargetSheets As Object) As Boolean
    
    Const PROCEDURE_NAME As String = "fncNenNumber"

On Error GoTo ErrSection
    
    Dim IngCnt As Integer
    Dim IngRow As Integer
    
    IngRow = fncKsCmnSearchNewRow(TargetSheets, 1) - 1
    
    'ローリング期間の開始位置(27行目)から存在する行まで
    '繰り返し年番号の再設定を行う
    For IngCnt = KikanStart To IngRow
        With TargetSheets
            '年番号を再設定する
            .Cells(IngCnt, 3).Value = IngCnt - (KikanStart - 1)
        End With
    Next IngCnt
     
    Exit Function
    
'*******************************************************
'* エラーセクション                                 　  *
'*******************************************************
ErrSection:

    fncNenNumber = False
   
End Function

