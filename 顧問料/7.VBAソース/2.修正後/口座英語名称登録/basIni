Attribute VB_Name = "basIni"
Option Explicit

'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー算出システム・口座英語名称登録
'
'オブジェクト名：basIni
'
'機能概要　：アプリケーション初期処理
'
'更新履歴　：2008/06/18 NRI堀江   新規作成
'
'*************************************************************************

Private Const MODULE_NAME As String = "basIni"

'*************************************************************************
'
'関数名　　：起動処理
'
'引　数　　：なし
'
'戻り値　　：なし
'
'機能説明　：アプリケーション起動処理
'
'更新履歴　：2008/06/19 NRI堀江　　新規作成
'
'*************************************************************************
Public Sub subInit()
Attribute subInit.VB_ProcData.VB_Invoke_Func = "i\n14"

    Const PROCEDURE_NAME As String = "subInit"

On Error GoTo ErrHandler
    
    Dim lngRet  As Long
    Dim strMsg  As String
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Application.DisplayAlerts = False
    Application.ScreenUpdating = False
    
    Do
        
        lngRet = fncIniBook
        If lngRet <> 0 Then
            Exit Do
        End If
        
        strMsg = vbNullString
        
    Loop Until True
    
    Application.ScreenUpdating = True
    
    If strMsg <> vbNullString Then
        '1 システムエラー
        fncKsCmnMessageDisp MSGLVL_FATAL, 1, 1, , True
    End If
        
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Sub

ErrHandler:
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Sub

'*************************************************************************
'
'関数名　　：ブックの初期化
'
'引　数　　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：リリースされた状態に戻す。
'
'更新履歴　：2008/06/23 NRI堀江   新規作成
'
'*************************************************************************
Public Function fncIniBook() As Long

    Const PROCEDURE_NAME As String = "fncIniBook"

On Error GoTo ErrHandler
    
    Dim lngRet  As Long

    fncIniBook = 0
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    With Sheets(SHEET_MAIN)
        .Select
    
        Call fncSetSheetsVisible
    
        lngRet = fncIniMain
    
        If lngRet <> 0 Then
            fncIniBook = lngRet
            Exit Function
        End If
    
        .Select
        .Range("口座番号").Select
    End With
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：シートの可視切り替え
'
'引　数　　：なし
'
'戻り値　　：なし
'
'機能説明　：各シートの可視を切り替える
'
'更新履歴　：2008/06/20 NRI堀江   新規作成
'
'*************************************************************************
Public Function fncSetSheetsVisible()
    
    Const PROCEDURE_NAME As String = "fncSetSheetsVisible"
    
On Error GoTo ErrHandler
    
    Dim lngCnt      As Long
    Dim blnVisible  As Boolean
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    For lngCnt = 1 To Sheets.Count
    
        Select Case Sheets(lngCnt).Name
        Case SHEET_MAIN                                     '"メイン画面"
            blnVisible = True
        Case Else
            blnVisible = False
        End Select
        
        Sheets(lngCnt).Visible = CBool(blnVisible Or (gintDebugLvl <> 0))
        
    Next lngCnt
    
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'
'関数名　　：メイン画面の初期化
'
'引　数　　：なし
'
'戻り値　　：Long       エラー番号
'
'機能説明　：入力フィールドの初期化
'
'更新履歴　：2008/06/23 NRI堀江   新規作成
'
'*************************************************************************
Private Function fncIniMain() As Long

    Const PROCEDURE_NAME As String = "fncIniMain"

On Error GoTo ErrHandler
    
    fncIniMain = 0
    
    Call subBeginProcess(MODULE_NAME, PROCEDURE_NAME)
    
    With Sheets(SHEET_MAIN)
        'シート保護解除
        gCom01_SheetProtect ActiveSheet, False
        
        '全フィールドクリア
        fncKsCmnClearField 0
        
        'シート保護
        gCom01_SheetProtect ActiveSheet, True
    End With
        
    'コンボ項目の初期化
    Call keisanIniCombo
        
    Call subEndProcess(MODULE_NAME, PROCEDURE_NAME)
    
    Exit Function

ErrHandler:
    fncIniMain = Err.Number
    Call subErrProcess(MODULE_NAME, PROCEDURE_NAME, Err.Number, Err.Description)
End Function

'*************************************************************************
'関数名　　：コンボ項目の初期化
'
'引　数　　：なし
'
'戻り値　　：Boolean（True:異常なし False:異常検出）
'
'機能説明　：コンボ項目のリストデータを取得する
'
'更新履歴　：2008/06/26 NRI堀江    新規作成
'
'*************************************************************************
Private Function keisanIniCombo() As Boolean

    Dim strErrMsg As String
    
    keisanIniCombo = False      '異常値で初期化
    
    strErrMsg = ""

    '外部委託先のデータ取得
    If fncGet_GI_INFO = False Then
        Exit Function
    End If
    
    '外部委託先の名前定義
    Call subNameDefine
    
    keisanIniCombo = True       '正常値セット

End Function
'*************************************************************************
'関数名　　：コード値テーブル抽出処理（契約区分 = 外部委託先）
'
'引　数　　：なし
'
'戻り値　　：Boolean
'
'機能説明　：コード値テーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2008/06/23 NRI堀江   新規作成
'
'*************************************************************************
Private Function fncGet_GI_INFO() As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim strErrCode  As String
    Const strConnErrCd As String = "この操作を実行する"
    Dim blnRet      As Boolean
    
    fncGet_GI_INFO = False

    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "       CODE_VALUE || ':' || VALUE_NAME"
    strSql = strSql & " FROM  KYK_CODE_VALUE"
    strSql = strSql & " WHERE CODE_NO = '56' AND SAKUJO_FLG = '0'"
    strSql = strSql & " ORDER BY CODE_VALUE"

    'データ取得
    strErrCode = strConnErrCd
    blnRet = gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow, strErrCode)
    If Not blnRet Then
        If strErrCode = strConnErrCd Then   'DB接続エラー
        '接続失敗(メッセージテーブルは使用不可注意)
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_GI_INFO", 0, _
            "ＤＢ接続エラー。設定を確認してください。")
            Exit Function
        Else                                'その他エラー
            Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_GI_INFO", 0, _
            "システムエラー。管理者に連絡してください。")
            Exit Function
        End If
    End If
    
    With ThisWorkbook.Worksheets(SHEET_DATA)
        .Activate
        '「外部委託先」のデータセル範囲をクリア
        .Range("A2:A65536").ClearContents
        '取得データをセルに設定
        If lngRow = 0 Then
            .Cells(3, 1).Value = "1:RAFI"
        Else
            For lngCnt = 0 To lngRow - 1
                .Cells(3 + lngCnt, 1).Value = vData(0, lngCnt)
            Next lngCnt
        End If
    End With
    
    Erase vData
    
    fncGet_GI_INFO = True
    
    Exit Function

ErrHandler:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_GI_INFO", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------
    Erase vData

End Function

'*************************************************************************
'関数名　　：外部委託先の名前定義設定
'
'引　数　　：なし
'
'戻り値　　：なし
'
'機能説明　：外部委託先の名前定義を再設定する。
'
'更新履歴　：2008/06/23 NRI堀江   新規作成
'
'*************************************************************************
Private Sub subNameDefine()

    Dim rowcnt  As Long

    '*** 外部委託先の名前定義
    For rowcnt = 4 To 65536
        If ThisWorkbook.Worksheets(SHEET_DATA).Cells(rowcnt, 1).Value = "" Then
            rowcnt = rowcnt - 1
            Exit For
        End If
    Next rowcnt
    
    '再定義
    ThisWorkbook.Names.Add Name:="外部委託先コードリスト", _
    RefersToR1C1:="=data!R2C1:R" & rowcnt & "C1"

End Sub




