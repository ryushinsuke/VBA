Attribute VB_Name = "basListSearch"
Option Explicit

Const MODULE_NAME = "basListSearch"

Public Const LIST_SEPARATER = "："
Public Const NENKAN_NISSU_LIST = "年間日数リスト"
Public Const SHISAN_LIST = "資産リスト"
Public Const RATE_CODE_LIST = "料率コードリスト"
Public Const PX_SHINTAKU_LIST = "基礎数値種類リスト"
Public Const KISO_SUCHI_KH_LIST = "基礎数値計算方法リスト"
Public Const KEISAN_HOHHOH_LIST = "顧問料計算方法リスト"
Public Const SHOKAI_SAISHU_LIST = "初回最終区分リスト"
Public Const SHINTAKU_BK_LIST = "信託銀行コードリスト"




'*************************************************************************
'関数名　　：コードリストサーチ
'
'引　　数　：
'           strItemAll      I       サーチソース文字列
'           strBookName     I       サーチ対象リストが定義されているブック名
'           strListSheet    I       サーチ対象リストが定義されているデータシート名
'           strListName     I       サーチ対象リスト文字列(リスト定義名)
'           blnDataFlg      O       該当フラグ(あり：True、なし：False)
'
'戻り値　　：
'           リストに該当なし    ：NULL
'           リストに該当あり    ：該当文字列
'　　　　　　　　　　　　　　　　※但し該当文字列とソース文字列が一致する場合NULL
'           その他エラーなし    ：NULL
'
'機能説明　：ソース文字列でリストを検索し該当するリストの文字列を戻す。
'
'更新履歴　：2007/01/11 SRA Y.Azuma    新規作成
'更新履歴　：2007/01/17 SRA Y.Azuma    変更     (仕変)総No.185 信託銀行リストのコード入力対応
'
'*************************************************************************
Public Function func_CodeListSearch(ByVal strItemAll As String _
                                  , ByVal strBookName As String _
                                  , ByVal strListSheet As String _
                                  , ByVal strListName As String _
                                  , ByRef blnDataFlg As Boolean) As String

On Error GoTo Error_Section
    
    Dim strCode         As String
    Dim strR1C1Cd       As String
    Dim strA1Cd         As String
    Dim lngRow          As Long
    Dim lngCdLen        As Long     'コード長さ
    Dim strResult       As String
    Dim strListCode     As String
    
    
    func_CodeListSearch = ""
    blnDataFlg = False
    
    'コード長さの設定
    Select Case strListName
        Case NENKAN_NISSU_LIST
        '年間日数リスト
            lngCdLen = 1
            
        Case SHISAN_LIST
        '資産リスト
            lngCdLen = 5
            
        Case RATE_CODE_LIST
        '料率コードリスト
            lngCdLen = 3
            
        Case PX_SHINTAKU_LIST
        '基礎数値種類リスト
            lngCdLen = 1
            
        Case KISO_SUCHI_KH_LIST
        '基礎数値計算方法リスト
            lngCdLen = 1
            
        Case KEISAN_HOHHOH_LIST
        '顧問料計算方法リスト
            lngCdLen = 1
            
        Case SHOKAI_SAISHU_LIST
        '初回最終区分リスト
            lngCdLen = 1
        
        Case SHINTAKU_BK_LIST
        '信託銀行コードリスト
            lngCdLen = 6
        
        Case Else
            Exit Function
    End Select
    
    If strListName = SHINTAKU_BK_LIST Then
    '信託銀行コード
    
        'コード(半角大文字)＋半角スペースの６文字
        If InStr(1, strItemAll, LIST_SEPARATER) > 0 And Len(strItemAll) > 0 Then
            strCode = Mid(strItemAll, 1, InStr(1, strItemAll, LIST_SEPARATER) - 1)
        Else
            strCode = strItemAll
        End If
        strCode = StrConv(strCode, vbNarrow + vbUpperCase)
        strCode = Left(strCode & String(lngCdLen, " "), lngCdLen)
    
    Else
    'その他一般
        'ソース文字列からコードを取り出す(ゼロパディング)
        strCode = Right(String(lngCdLen, "0") & Trim(Mid(strItemAll, 1, lngCdLen)), lngCdLen)
    End If

    With Workbooks(strBookName).Worksheets(strListSheet)
        If Trim(strCode) <> "" And Len(strItemAll) <= lngCdLen Then
            strR1C1Cd = "R" & .Range(strListName).Row & "C" & .Range(strListName).Column
            strA1Cd = Application.ConvertFormula(strR1C1Cd, xlR1C1, xlA1, xlRelative)
            
            'リストをサーチする
            For lngRow = 1 To .Range(strListName).Count - 1
                strListCode = ""
                If strListName = SHINTAKU_BK_LIST Then
                '信託銀行コード
                    'コード(半角大文字)＋半角スペースの６文字
                    strListCode = Mid(.Range(strA1Cd).Offset(lngRow, 0).Text, 1, InStr(1, .Range(strA1Cd).Offset(lngRow, 0).Text, LIST_SEPARATER) - 1)
                    strListCode = StrConv(strListCode, vbNarrow + vbUpperCase)
                    strListCode = Left(strListCode & String(lngCdLen, " "), lngCdLen)
                Else
                    strListCode = Mid(.Range(strA1Cd).Offset(lngRow, 0).Text, 1, lngCdLen)
                End If

                If strCode = strListCode Then
                    Exit For
                End If
            Next lngRow
            
            If lngRow <= .Range(strListName).Count Then
                strResult = .Range(strA1Cd).Offset(lngRow, 0).Text
                blnDataFlg = True
            Else
                strResult = ""
                blnDataFlg = False
            End If
            
            'ソース文字列と検索結果が同じ場合は結果にnullを返す
            If Trim(strResult) = Trim(strItemAll) Then
                strResult = ""
            End If
            
            func_CodeListSearch = strResult
        End If
    End With
    
    Exit Function

Error_Section:
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "func_CodeListSearch", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    func_CodeListSearch = ""
    blnDataFlg = False

End Function


