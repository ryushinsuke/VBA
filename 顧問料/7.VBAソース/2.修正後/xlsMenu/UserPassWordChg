VERSION 5.00
Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} UserPassWordChg 
   Caption         =   "パスワード変更"
   ClientHeight    =   2355
   ClientLeft      =   45
   ClientTop       =   435
   ClientWidth     =   5985
   OleObjectBlob   =   "UserPassWordChg.frx":0000
   StartUpPosition =   1  'オーナー フォームの中央
End
Attribute VB_Name = "UserPassWordChg"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False

Option Explicit

'*******************************************************
'* キャンセルボタン押下時                          　  *
'*******************************************************
Private Sub cmd_Cancel_Click()
    'パスワード変更画面を閉じる
    Unload UserPassWordChg
End Sub

'*******************************************************
'* ＯＫボタン押下時                                　  *
'*******************************************************
Private Sub cmd_OK_Click()
    
    Dim strNumCheck    As String   'パスワードに数値が使用されているかフラグ
    Dim strChrCheck    As String   'パスワードに文字が使用されているかフラグ
    Dim strCheck       As String   'パスワード使用文字チェックフラグ
    Dim strPass_Rireki As String   '同一パスワードを何世代前まで許さないか
    Dim strSedai_no    As String   '現在のパスワードの世代数
    Dim strKengenKbn   As String   'ログインユーザの権限(管理者/一般)
    Dim strLockKbn     As String   'ログインミスした場合、ロックするかどうか(未使用)
    Dim strErr_Count   As String   'ログインユーザがログインミスした回数(未使用)
    
    'DB接続用変数
    Dim Conn           As New ADODB.Connection        '# Connection
    Dim RS             As New ADODB.Recordset         '# Recordset
    Dim strDBConnect   As String
    Dim Ret            As String
    
    Dim i              As Long     'For文での繰り返し回数変数
    Dim j              As Long     'For文での繰り返し回数変数
    
    '新パスワード､新パスワード確認未入力チェック-----------------------------------------------------------------
    If Trim(txt_PassWord) = "" And _
       Trim(txt_PassWord2) = "" Then
        ' 新パスワード、新パスワード確認共に未入力の場合
        MsgBox "新パスワードを入力してください。", vbCritical
        '新パスワードテキストボックスにセットフォーカス
        txt_PassWord.SelStart = 0
        txt_PassWord.SelLength = Len(txt_PassWord.Text)
        txt_PassWord.SetFocus
        Exit Sub
    ElseIf Trim(txt_PassWord) = "" Or _
           Trim(txt_PassWord2) = "" Then
        '新パスワード、または、新パスワード確認が未入力の場合
        MsgBox "新パスワード、新パスワード確認はどちらも必須です。", vbCritical
        If Trim(txt_PassWord) = "" Then
            '新パスワードテキストボックスにセットフォーカス
            txt_PassWord.SelStart = 0
            txt_PassWord.SelLength = Len(txt_PassWord.Text)
            txt_PassWord.SetFocus
            Exit Sub
        End If
        If Trim(txt_PassWord2) = "" Then
            '新パスワード確認テキストボックスにセットフォーカス
            txt_PassWord2.SelStart = 0
            txt_PassWord2.SelLength = Len(txt_PassWord2.Text)
            txt_PassWord2.SetFocus
            Exit Sub
        End If
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    '新パスワード桁数チェック-------------------------------------------------------------------------------------
    'パスワードは半角8桁以上64桁以内でなければいけない
    If Len(txt_PassWord) < 8 Or _
       Len(txt_PassWord) > 64 Then
        MsgBox "パスワードルールに準拠していません。", vbCritical
        '新パスワードテキストボックスにセットフォーカス
        txt_PassWord.SelStart = 0
        txt_PassWord.SelLength = Len(txt_PassWord.Text)
        txt_PassWord.SetFocus
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    '英数文字存在チェックロジック---------------------------------------------------------------------------------
    'パスワードは英数文字が混在していなければいけない
    strNumCheck = "NG"  '数値が使用されているかフラグ
    strChrCheck = "NG"  '文字が使用されているかフラグ
    For i = 1 To Len(txt_PassWord)
            
        strCheck = "NG"  '文字別チェックフラグ
        
        '数値チェック
        For j = 0 To 9
            If j = Mid(txt_PassWord, i, 1) Then
                strNumCheck = "OK"  'パスワードに数値が使用されていることを確認
                strCheck = "OK"
                Exit For
            End If
        Next
        '英文字チェック (大文字) ASCIIコード
        'Chr(65)="A" , Chr(66)="B" , ・・・ , Chr(89)="Y" , Chr(90)="Z"
        If strCheck = "NG" Then
            For j = 65 To 90
                If Chr(j) = Mid(txt_PassWord, i, 1) Then
                    strChrCheck = "OK"  'パスワードに文字(大文字)が使用されていることを確認
                    strCheck = "OK"
                    Exit For
                End If
            Next
        End If
        '英文字チェック (小文字) ASCIIコード
        'Chr(97)="a" , Chr(98)="b" , ・・・ , Chr(121)="y" , Chr(122)="z"
        If strCheck = "NG" Then
            For j = 97 To 122
                If Chr(j) = Mid(txt_PassWord, i, 1) Then
                    strChrCheck = "OK"  'パスワードに文字(小文字)が使用されていることを確認
                    strCheck = "OK"
                    Exit For
                End If
            Next
        End If
        '上の全てのチェックを経て、strCheckが"NG"のままであれば、
        '使用不可能文字(記号)が使用されている
        If strCheck = "NG" Then
            MsgBox "パスワードルールに準拠していません。", vbCritical
            '新パスワードテキストボックスにセットフォーカス
            txt_PassWord.SelStart = 0
            txt_PassWord.SelLength = Len(txt_PassWord.Text)
            txt_PassWord.SetFocus
            Exit Sub
        End If
    Next
    
    If strNumCheck = "NG" Or _
       strChrCheck = "NG" Then
       'パスワードが英数字混在していないためエラー
        MsgBox "パスワードルールに準拠していません。", vbCritical
        '新パスワードテキストボックスにセットフォーカス
        txt_PassWord.SelStart = 0
        txt_PassWord.SelLength = Len(txt_PassWord.Text)
        txt_PassWord.SetFocus
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------

    'パスワード内にユーザIDと同じ文字列が含まれていてはいけない---------------------------------------------------
    If InStr(txt_PassWord, txt_UserID.Value) <> 0 Then
       'パスワードにユーザIDが含まれているためエラー
        MsgBox "パスワードルールに準拠していません。", vbCritical
        '新パスワードテキストボックスにセットフォーカス
        txt_PassWord.SelStart = 0
        txt_PassWord.SelLength = Len(txt_PassWord.Text)
        txt_PassWord.SetFocus
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'DB接続文字列作成---------------------------------------------------------------------------------------------
    Ret = DBAccessString(strDBConnect)
    If Ret = "False" Then
        MsgBox "ワークブックを終了します", vbInformation
        Workbook_Close Conn, RS
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'DB接続-------------------------------------------------------------------------------------------------------
    Ret = DBOpen(strDBConnect, Conn)
    If Ret = "False" Then
        MsgBox "ワークブックを終了します", vbInformation
        Workbook_Close Conn, RS
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'ログインパラメータを取得④     "同一パスワードのチェックをする履歴数"----------------------------------------
    Ret = ParamGet4(strPass_Rireki, _
                    Conn, _
                    RS)
    'Ret = "False"の場合、ログインパラメータを取得中システムエラー発生したので処理を終了する
    If Ret = "False" Then Exit Sub
    '-------------------------------------------------------------------------------------------------------------
    
    'パスワード最新世代番号と登録日取得---------------------------------------------------------------------------
    Ret = UserInfoGet2(Trim(UserCertification.txt_UsrId), _
                       strSedai_no, _
                       "", _
                       "", _
                       Conn, _
                       RS)
    'Ret = "False"の場合、パスワード最新世代番号と登録日取得中システムエラー発生したので処理を終了する
    If Ret = "False" Then Exit Sub
    '-------------------------------------------------------------------------------------------------------------
    
    '新パスワードの世代チェック-----------------------------------------------------------------------------------
    'strPass_Rirekiの履歴数値以内に同じパスワードを使用していたらエラーとする
    j = strSedai_no
    For i = strPass_Rireki To 1 Step -1
    
        'パスワード存在チェック
        '入力されたパスワードを暗号化し、テーブル登録されている暗号パスワードと照合する
        Ret = Pswd_Check(Trim(UserCertification.txt_UsrId), _
                         j, _
                         Trim(UserPassWordChg.txt_PassWord), _
                         Conn, _
                         RS)
        If Ret = "True" Then
            'Trueが帰ってきたら、世代履歴内に同じパスワードを使用しているためエラーとする
            MsgBox "パスワードルールに準拠していません。", vbCritical
            '新パスワードテキストボックスにセットフォーカス
            txt_PassWord.SelStart = 0
            txt_PassWord.SelLength = Len(txt_PassWord.Text)
            txt_PassWord.SetFocus
            Exit Sub
        End If
        
        j = j - 1
        '世代Noがマイナス値となったら終了(For文を抜ける)
        If j < 0 Then Exit For
            
    Next
    '-------------------------------------------------------------------------------------------------------------
    
    '新パスワード、新パスワード確認不一致チェック-----------------------------------------------------------------
    If Trim(UserPassWordChg.txt_PassWord) <> Trim(UserPassWordChg.txt_PassWord2) Then
        MsgBox "新パスワードと新パスワード確認の内容が異なっています。", vbCritical
        '新パスワードテキストボックスにセットフォーカス
        txt_PassWord.SelStart = 0
        txt_PassWord.SelLength = Len(txt_PassWord.Text)
        txt_PassWord.SetFocus
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'トランザクションを開始する-----------------------------------------------------------------------------------
    If Not gblnDbBeginTrans(Conn, RS) Then Exit Sub
    '-------------------------------------------------------------------------------------------------------------
    
    '新パスワード登録確認-----------------------------------------------------------------------------------------
    If MsgBox("パスワードを変更します。よろしいですか？", vbOKCancel + vbQuestion) = vbOK Then
        '新パスワードへ更新する
        Ret = NewPassCng(Trim(UserCertification.txt_UsrId), _
                         strSedai_no + 1, _
                         Trim(UserPassWordChg.txt_PassWord), _
                         Conn, _
                         RS)
        'Ret = "False"の場合、パスワード変更処理中システムエラー発生したのでロールバックし処理を終了する
        If Ret = "False" Then
            'ロールバック処理
            If Not gblnDbRollback(Conn, RS) Then Exit Sub
            Exit Sub
        End If
    Else
        'よろしいですか？の問いに対して「いいえ」
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'パスワード暗号化処理-----------------------------------------------------------------------------------------
    Ret = PassCipher(Trim(UserCertification.txt_UsrId), _
                     strSedai_no + 1, _
                     Conn, _
                     RS)
    'Ret = "False"の場合、パスワード暗号化処理中システムエラー発生したのでロールバックし処理を終了する
    If Ret = "False" Then
        'ロールバック処理
        If Not gblnDbRollback(Conn, RS) Then Exit Sub
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'ユーザテーブルの最終パスワード更新日を更新する---------------------------------------------------------------
    Ret = PswdCngDayUpdate(Trim(UserCertification.txt_UsrId), _
                           Conn, _
                           RS)
    'Ret = "False"の場合、最終パスワード更新日の更新中システムエラー発生したのでロールバックし処理を終了する
    If Ret = "False" Then
        'ロールバック処理
        If Not gblnDbRollback(Conn, RS) Then Exit Sub
        Exit Sub
    End If
    '-------------------------------------------------------------------------------------------------------------

    '新パスワード登録が完了したことをログに残す-------------------------------------------------------------------
    '※引数2番目の"0"はERR_COUNT：("0"を渡す)
    '※引数3番目の"5"はログ区分 ：(新パスワード登録)
    Ret = UserLog_Out(Trim(UserCertification.txt_UsrId), _
                      "0", _
                      "5", _
                      Conn, _
                      RS)
    'ログテーブルへの登録に失敗した場合はロールバックし処理を終了する
    If Ret = "False" Then
        'ロールバック処理
        If Not gblnDbRollback(Conn, RS) Then Exit Sub
        Exit Sub
    End If
    
    '成功の場合はコミットする
    If Not gblnDbCommitTrans(Conn, RS) Then Exit Sub
    
    MsgBox "パスワードを変更しました。", vbInformation
    '-------------------------------------------------------------------------------------------------------------
    
    'ログインユーザの権限チェック---------------------------------------------------------------------------------
    'ログインしたユーザの権限により、パスワード変更後の動作を変化させる
    '　→一般ユーザがログインした場合、xlsMenuシートを表示する
    '　→管理者ユーザがログインした場合、管理者画面を表示する
    Ret = UserInfoGet(Trim(UserPassWordChg.txt_UserID), _
                      strKengenKbn, _
                      strLockKbn, _
                      strErr_Count, _
                      Conn, _
                      RS)
    'Ret = "False"の場合、ログインユーザの権限チェック中システムエラー発生したので処理を終了する
    If Ret = "False" Then Exit Sub
    '-------------------------------------------------------------------------------------------------------------

    'DB切断-------------------------------------------------------------------------------------------------------
    Ret = DBClose(Conn, RS)
    If Ret = "False" Then
        MsgBox "ワークブックを終了します", vbInformation
        Workbook_Close Conn, RS
    End If
    '-------------------------------------------------------------------------------------------------------------
    
    'パスワード変更終了(権限区分により処理を変更する)-------------------------------------------------------------
    If strKengenKbn = "A" Then
        '管理者用Book(別ブック)オープン
        '※当ファイル(xlsMenu.xls)と同じフォルダに用意しておく必要がある
        Ret = ManagementBookOpen
        'Ret = "False"の場合、管理者用Bookオープン中システムエラー発生したので処理を終了する
        If Ret = "False" Then Exit Sub
        
        Workbook_Close Conn, RS
        Exit Sub
    Else
        'パスワード変更画面を閉じる
        Unload UserPassWordChg
        'ユーザ認証画面を閉じる
        Unload UserCertification
    End If
    '-------------------------------------------------------------------------------------------------------------

End Sub

'*******************************************************
'* 画面オープン処理                                　  *
'*******************************************************
Private Sub UserForm_Initialize()
    'ログインユーザIDをテキストボックスに表示する
    UserPassWordChg.txt_UserID = UserCertification.txt_UsrId
    Frame1.Enabled = False
End Sub

'*******************************************************
'* 新パスワードをテーブルに登録する                　  *
'*******************************************************
Private Function NewPassCng(ByVal argUSER_ID As String, _
                            ByVal argSedai_no As String, _
                            ByVal argNewPassWd As String, _
                            ByVal Conn As ADODB.Connection, _
                            ByVal RS As ADODB.Recordset) As String
    On Error GoTo ErrProc
    
    Dim strSql As String
    
    '戻り値をFalseで初期化
    NewPassCng = "False"
            
    strSql = ""
    strSql = strSql & " insert into KYK_LOGIN_PSWD_ZOKUSEI "
    strSql = strSql & "         (user_id,                  "
    strSql = strSql & "          sedai_no,                 "
    strSql = strSql & "          pswd,                     "
    strSql = strSql & "          shoki_pswd_flg,           "
    strSql = strSql & "          tohroku_ymd,              "
    strSql = strSql & "          kohshin_pgm_id,           "
    strSql = strSql & "          kohshin_tantohsha)        "
    strSql = strSql & " VALUES ( '" & argUSER_ID & "',"
    strSql = strSql & "          '" & argSedai_no & "',"
    strSql = strSql & "          '" & argNewPassWd & "',"
    strSql = strSql & "          '0',"
    strSql = strSql & "          sysdate,"
    strSql = strSql & "          '国内顧問料計算システム　契約管理メニュー',"
    strSql = strSql & "          '" & argUSER_ID & "') "

    'SQL文実行
    Conn.Execute strSql

    '戻り値Trueへ更新
    NewPassCng = "True"
    
    Exit Function

'*******************************************************
'* エラーセクション                                　  *
'*******************************************************
ErrProc:

    Call subErrProcess(ThisWorkbook.Name & "." & "UserPassWordChg", "NewPassCng", Err.Number, _
                       "新パスワード登録処理失敗しました。" & vbCrLf & Err.Description)

    On Error GoTo 0

End Function

'*******************************************************
'* パスワードの暗号化を行う                        　  *
'*******************************************************
Private Function PassCipher(ByVal argUSER_ID As String, _
                            ByVal argSedai_no As String, _
                            ByVal Conn As ADODB.Connection, _
                            ByVal RS As ADODB.Recordset) As String
    On Error GoTo ErrProc
    
    Dim strSql As String

    '戻り値をFalseで初期化
    PassCipher = "False"

    'パスワード暗号化PL/SQL
    strSql = ""
    strSql = strSql & "DECLARE "
    strSql = strSql & "    w_user_id           VARCHAR2(64);"
    strSql = strSql & "    w_sedai             NUMBER;"
    strSql = strSql & "    w_user_pswd         VARCHAR2(64);"
    strSql = strSql & "    key_str             VARCHAR2(8) := 'namnamna';"
    strSql = strSql & "    encrypted_str       VARCHAR2(64);"
    strSql = strSql & "    error_in_update     EXCEPTION;"
    strSql = strSql & "BEGIN"
    strSql = strSql & "    SELECT user_id, sedai_no, pswd INTO w_user_id, w_sedai, w_user_pswd FROM kyk_login_pswd_zokusei"
    strSql = strSql & "     WHERE user_id = '" & argUSER_ID & "'"
    strSql = strSql & "       AND sedai_no  = " & argSedai_no & ";"
    strSql = strSql & "    w_user_pswd := RPAD(w_user_pswd, 64, ' ');"
    strSql = strSql & "    dbms_obfuscation_toolkit.DESEncrypt( input_string => w_user_pswd, key_string => key_str, encrypted_string => encrypted_str );"
    strSql = strSql & "    Update kyk_login_pswd_zokusei"
    strSql = strSql & "        Set pswd = encrypted_str"
    strSql = strSql & "        WHERE     user_id = '" & argUSER_ID & "'"
    strSql = strSql & "          AND     sedai_no  = " & argSedai_no & ";"
    strSql = strSql & "END;"
    
    'SQL文実行
    'レコードセットオープン
    Conn.Execute strSql

    'エラーへ飛ばなければ、照合成功
    PassCipher = "True"
    
    Exit Function

'*******************************************************
'* エラーセクション                                　  *
'*******************************************************
ErrProc:

    Call subErrProcess(ThisWorkbook.Name & "." & "UserPassWordChg", "PassCipher", Err.Number, _
                       "パスワード暗号化処理失敗しました。" & vbCrLf & Err.Description)
    
    On Error GoTo 0

End Function

'*******************************************************
'* パスワード更新日の更新処理                      　  *
'*******************************************************
Public Function PswdCngDayUpdate(ByVal argUSER_ID As String, _
                                 ByVal Conn As ADODB.Connection, _
                                 ByVal RS As ADODB.Recordset) As String
    
    On Error GoTo ErrProc

    Dim strSql As String

    '戻り値をFalseで初期化
    PswdCngDayUpdate = "False"
    
    strSql = ""
    strSql = strSql & " Update kyk_login_user_zokusei"
    strSql = strSql & " SET pswd_machigai_cnt = 0 ,"
    strSql = strSql & "     saishu_pswd_kohshin_ymd = "
    strSql = strSql & "     (SELECT b.tohroku_ymd"
    strSql = strSql & "      FROM   (SELECT  User_ID,MAX(sedai_no) AS sedai_no"
    strSql = strSql & "              FROM kyk_login_pswd_zokusei"
    strSql = strSql & "              WHERE   user_id = '" & argUSER_ID & "'"
    strSql = strSql & "              GROUP   BY User_ID) a,"
    strSql = strSql & "              kyk_login_pswd_zokusei b"
    strSql = strSql & "      WHERE"
    strSql = strSql & "      b.user_id = a.user_id AND"
    strSql = strSql & "      b.sedai_no = a.sedai_no"
    strSql = strSql & "      )"
    strSql = strSql & " WHERE user_id = '" & argUSER_ID & "'"
    
    'SQL文実行
    Conn.Execute strSql

    '戻り値Trueへ更新
    PswdCngDayUpdate = "True"
    
    Exit Function

'*******************************************************
'* エラーセクション                                　  *
'*******************************************************
ErrProc:

    Call subErrProcess(ThisWorkbook.Name & "." & "basUserPassWordChg", "PswdCngDayUpdate", Err.Number, _
                       "パスワード更新日の更新処理を失敗しました。" & vbCrLf & Err.Description)

    On Error GoTo 0

End Function
