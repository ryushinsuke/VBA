Attribute VB_Name = "basError"
Option Explicit

Const MODULE_NAME = "basError"

'*************************************************************************
'関数名　　：SEC_MSGテーブルのエラーメッセージ取得
'
'引　　数　：
'
'戻り値　　：Boolean
'
'機能説明　：SEC_MSGの全メッセージを取得する。
'
'更新履歴　：2006/07/06 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_GetErrMsgList() As Boolean
On Error GoTo ErrHandler

    Dim strSql      As String
    Dim lngCol      As Long
    Dim lngRow      As Long
'    Dim lngCnt      As Long
    
    gfunc_GetErrMsgList = False
    
'*******************************************************
'* 関数開始　                                        　*
'*******************************************************
    
''   strSql = ""
''   strSql = strSql & " SELECT"
''   strSql = strSql & "     MSG_KBN,"
''   strSql = strSql & "     MSG_ID,"
''   strSql = strSql & "     MSG_TXT"
''   strSql = strSql & " FROM"
''   strSql = strSql & "     SEC_MSG"
''   strSql = strSql & " ORDER BY"
''   strSql = strSql & "     MSG_KBN,"
''   strSql = strSql & "     MSG_ID"
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     MSG1.MSG_KBN,"
    strSql = strSql & "     MSG1.MSG_ID,"
    strSql = strSql & "     MSG2.MSG_TXT"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_SEC_MSG MSG1,"
    strSql = strSql & "     KYK_SEC_MSG MSG2"
    strSql = strSql & " WHERE"
    strSql = strSql & "     MSG1.MSG_KBN = MSG2.MSG_KBN  AND"
    strSql = strSql & "     MSG1.MSG_SRC = MSG2.MSG_ID"
    strSql = strSql & " "
    'データ取得
    Call gclsDB.DoExequteSql(gcSELECT, strSql, gErrorMsg, lngCol, lngRow)
    
    
    gfunc_GetErrMsgList = True
    
    Exit Function
    
ErrHandler:
    gfunc_GetErrMsgList = False

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "", Err.Number, Err.Description)
    On Error GoTo 0
    Err.Raise lng
'---- エラーログ出力 End  ---------------------------------

    Erase gErrorMsg
    
    MsgBox "Error:fncGet_KYKSHISAN" & vbCrLf & Err.Description
    
End Function


'*************************************************************************
'関数名　　：エラーメッセージ表示・取得関数
'
'引　　数　：
'           strMsgKbn       I       メッセージ区分(1:情報,2:質問,3:警告,4:エラー)
'           lngMsgId        I       メッセージＩＤ
'           strAddText      I       追加テキスト(項目名)
'           strAddText2     I       追加テキスト(付加メッセージ)
'           blnPopUp        I       メッセージボックス出力フラグ(デフォルト：True(表示))
'
'戻り値　　：
'
'機能説明　：メッセージ区分、ＩＤからメッセージＢＯＸを表示する。取得のみも可能
'
'更新履歴　：2006/07/06 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Function gfunc_ErrorMsg(ByVal strMsgKbn As String _
                             , ByVal lngMsgId As Long _
                             , ByVal strAddText As String _
                             , Optional ByVal strAddText2 As String _
                             , Optional ByVal blnPopUp As Boolean = True) As String
On Error GoTo ErrSection
                             
    Dim lngKbnCnt       As Long
    Dim lngIdCnt        As Long
    
    Dim lngCnt          As Long
    Dim strMsg          As String
    Dim lngMark         As Long
    Dim vRet            As Variant
    
    gfunc_ErrorMsg = ""
    strMsg = ""
    
    'エラーメッセージ一覧からメッセージを取得する。
    For lngCnt = 0 To UBound(gErrorMsg, 2)
        If gErrorMsg(0, lngCnt) = strMsgKbn And gErrorMsg(1, lngCnt) = lngMsgId Then
            strMsg = gErrorMsg(2, lngCnt)
            Exit For
        End If
    Next lngCnt
    
    vRet = InStr(1, strMsg, "\n", vbTextCompare)
    If vRet <> 0 And IsNull(vRet) = False Then
        strMsg = Mid(strMsg, 1, vRet - 1) & vbCrLf & Mid(strMsg, vRet + 2, Len(strMsg))
    End If
    
    '項目があればメッセージに追加する。
    If Trim(strMsg) <> "" And Trim(strAddText) <> "" Then
        strMsg = strAddText & " ： " & strMsg
    ElseIf Trim(strMsg) = "" Then
        strMsg = "メッセージID" & "(" & lngMsgId & ")" _
               & "に対するメッセージが設定されてません。" & vbCrLf & strAddText
    End If
    
    '付加メッセージがあればメッセージに追加する。
    If Trim(strAddText2) <> "" Then
        strMsg = strMsg & vbCrLf & strAddText2
    End If
    
    'メッセージＩＤの付加
    If gErrorMsg(0, lngCnt) = "3" Or gErrorMsg(0, lngCnt) = "4" Then
        strMsg = strMsg & vbCrLf & "(" & lngMsgId & ")"
    '    strMsg = strMsg & vbCrLf & Space(LenB(StrConv(Mid(strMsg, 1, InStr(1, strMsg, vbCrLf) - 7), vbFromUnicode))) & "(" & lngMsgId & ")"
    End If
    
    If UBound(gErrorMsg, 2) >= lngCnt Then
        'ポップアップ用のメッセージアイコン
        Select Case gErrorMsg(0, lngCnt)
        Case 1  '情報
            lngMark = vbInformation
        Case 2  '質問
            lngMark = vbQuestion    ' + vbYesNo
        Case 3  '警告
            lngMark = vbExclamation
        Case 4  'エラー
            lngMark = vbCritical
        End Select
    End If
    
    'メッセージボックス出力 ※blnPopUpがTRUEの時のみ
    If blnPopUp = True Then
        Call MsgBox(strMsg, lngMark, Mid(Application.ActiveWorkbook.Name, 1, Len(Application.ActiveWorkbook.Name) - 4))
'        Call MsgBox(strMsg, lngMark, sub_GetMsgBoxTitle(strMsgKbn))
    End If
    
    '取得したエラーメッセージ復帰値へ
    gfunc_ErrorMsg = strMsg
    
    Exit Function
ErrSection:

    gfunc_ErrorMsg = ""
    
    ' 配列からエラーメッセージが消えた場合の回避
    If Err.Number = 9 Then
        If gfunc_GetErrMsgList = True Then
            Resume Next
        End If
    End If

'---- エラーログ出力 Start --------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "gfunc_ErrorMsg", Err.Number, Err.Description)
    
    On Error GoTo 0
    Err.Raise lng
'---- エラーログ出力 End  ---------------------------------

    Erase gErrorMsg
    
'    MsgBox "Error:gfunc_ErrorMsg" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：メッセージボックスのタイトル取得
'
'引　　数　：
'           strMsgKbn   I       メッセージ区分
'
'戻り値　　：メッセージボックスタイトル
'
'機能説明　：メッセージ区分からメッセージボックスのタイトル返す
'
'更新履歴　：2006/07/06 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Function sub_GetMsgBoxTitle(ByVal strMsgKbn As String) As String

    Dim strbuf      As String
    
    strbuf = ""
    
    Select Case strMsgKbn
        Case "1"
            strbuf = "情報"
        Case "2"
            strbuf = "質問"
        Case "3"
            strbuf = "警告"
        Case "4"
            strbuf = "エラー"
        Case Else
            strbuf = ""
    End Select
    
    sub_GetMsgBoxTitle = strbuf
End Function


