Attribute VB_Name = "bas10Initialize"
Option Explicit

'*************************************************************************
'
'プロジェクト名：国内顧問料・資産登録
'
'オブジェクト名：bas10Initialize
'
'機能概要　：初期処理
'
'更新履歴　：2008/02/22 SRA 東       新規作成
'　　　　　：2009/01/19 SRA Y.Azuma    変更   自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Const MODULE_NAME = "bas10Initialize"

'*************************************************************************
'関数名　　：初期化メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：初期起動時に行われる初期処理のメイン
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub g_subInitialize()

    'コンボ項目の初期化
    Call subIniCombo
    
    '画面の初期化
    Call g_subRateCodeIniScreenH(Worksheets(MAIN_SHEETNAME))   'ヘッダー部
    Call g_subCodeIniScreenD(Worksheets(MAIN_SHEETNAME))   '明細部
    
End Sub


'*************************************************************************
'関数名　　：資産登録画面のクリア処理(ヘッダー部)
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：ヘッダー部のセルをクリアする
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'          ：2009/10/15 SRA T.Mizutani 資産登録画面における資産コード削除対応
'
'*************************************************************************
Public Sub g_subRateCodeIniScreenH(ByRef TargetSheets As Object)
On Error GoTo ErrHandler

    ' ヘッダー部の初期化
    With TargetSheets

        .Range("資産コード").Value = ""
        .cmdSearch.Enabled = True
        .cmdUp.Enabled = False
'------------<Modify Start T.Mizutani 2009/10/15> 資産登録画面における資産コード削除対応------------
        .cmdDel.Enabled = False
'------------<Modify End   T.Mizutani 2009/10/15> 資産登録画面における資産コード削除対応------------
    End With
    
Exit Sub

ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "g_subRateCodeIniScreenH", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------

End Sub

'*************************************************************************
'関数名　　：資産登録画面のクリア処理(明細部)
'
'引　　数　：TargetSheets       I       処理対象シート
'
'戻り値　　：なし
'
'機能説明　：明細部行を全て削除する
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'更新履歴　：2008/03/25 SRA Y.Azuma    修正     資産登録仕様変更
'
'*************************************************************************
Public Sub g_subCodeIniScreenD(ByRef TargetSheets As Object)
On Error GoTo ErrHandler

    
    
    ' 明細部の初期化
    With TargetSheets
'------------<資産登録20080218 20080325 SRA東 START> -----------------------
        .Range("区分名").Value = ""
'------------<資産登録20080218 20080325 SRA東 END  > -----------------------
        .Range("資産名").Value = ""
        .Range("帳票資産名").Value = ""
        
        Call subInit_Ippan(TargetSheets, False, False)      '一般資産
        Call subInit_Chohsei(TargetSheets, False, False)    '調整資産
        Call subInit_T21(TargetSheets, False, False)        'T21調整資産
        Call subInit_Gohsei(TargetSheets, False, False)     '合成資産
        
    End With
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("検索時資産コード") = ""
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Range("資産更新日付") = ""
Exit Sub
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "g_subCodeIniScreenD", Err.Number, Err.Description)
    On Error GoTo 0
'---- Error Log End   ----------------------------------------------------

End Sub


'*************************************************************************
'関数名　　：資産登録画面のクリア処理(一般資産)
'
'引　　数　：TargetSheets       I       処理対象シート
'          ：blnOptValue        I       オプションボタンのON／OFF
'          ：blnLock            I       オプションボタンと入力エリアの有効／無効
'
'戻り値　　：なし
'
'機能説明　：オプションボタン、入力エリアのクリアと状態設定
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub subInit_Ippan(ByRef TargetSheets As Object, ByVal blnOptValue As Boolean, ByVal blnLock As Boolean)
    
    With TargetSheets.OptIppan
        .Value = blnOptValue
        
        If blnLock = False Then
            .Enabled = True
        Else
            .Enabled = False
            .Value = False
        End If
        
    End With
    
    Call sub_MergeAreaControl(TargetSheets, "一般PX銘柄コード", blnLock)
        
End Sub

'*************************************************************************
'関数名　　：資産登録画面のクリア処理(調整資産)
'
'引　　数　：TargetSheets       I       処理対象シート
'          ：blnOptValue        I       オプションボタンのON／OFF
'          ：blnLock            I       オプションボタンと入力エリアの有効／無効
'
'戻り値　　：なし
'
'機能説明　：オプションボタン、入力エリアのクリアと状態設定
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub subInit_Chohsei(ByRef TargetSheets As Object, blnOptValue As Boolean, ByVal blnLock As Boolean)
    With TargetSheets.OptChohsei
        .Value = blnOptValue
        
        If blnLock = False Then
            .Enabled = True
        Else
            .Enabled = False
            .Value = False
        End If
    End With
    Call sub_MergeAreaControl(TargetSheets, "調整PX銘柄コード", blnLock)
End Sub

'*************************************************************************
'関数名　　：資産登録画面のクリア処理(T21調整資産)
'
'引　　数　：TargetSheets       I       処理対象シート
'          ：blnOptValue        I       オプションボタンのON／OFF
'          ：blnLock            I       オプションボタンと入力エリアの有効／無効
'
'戻り値　　：なし
'
'機能説明　：オプションボタン、入力エリアのクリアと状態設定
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'          ：2009/01/19 SRA Y.Azuma    変更   自己設定投信の委託者報酬額の内訳管理
'
'*************************************************************************
Public Sub subInit_T21(ByRef TargetSheets As Object, blnOptValue As Boolean, ByVal blnLock As Boolean)
    With TargetSheets.OptT21
        .Value = blnOptValue
        
        If blnLock = False Then
            .Enabled = True
        Else
            .Enabled = False
            .Value = False
        End If
    End With
    
    Call sub_MergeAreaControl(TargetSheets, "T21PX銘柄コード", blnLock)
    Call sub_MergeAreaControl(TargetSheets, "T21委託者報酬率", blnLock)
'------------<Modify Start azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    Call sub_MergeAreaControl(TargetSheets, "T21運用報酬率", blnLock)
'------------<Modify End   azuma 2009/01/19 > 自己設定投信の委託者報酬額の内訳管理---------------
    Call sub_MergeAreaControl(TargetSheets, "T21時価単位口数", blnLock)
    Call sub_MergeAreaControl(TargetSheets, "T21口座番号", blnLock)
    
End Sub

'*************************************************************************
'関数名　　：資産登録画面のクリア処理(合成資産)
'
'引　　数　：TargetSheets       I       処理対象シート
'          ：blnOptValue        I       オプションボタンのON／OFF
'          ：blnLock            I       オプションボタンと入力エリアの有効／無効
'
'戻り値　　：なし
'
'機能説明　：オプションボタン、入力エリアのクリアと状態設定
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub subInit_Gohsei(ByRef TargetSheets As Object, blnOptValue As Boolean, ByVal blnLock As Boolean)
    Dim lngCnt      As Long
    
    With TargetSheets.OptGohsei
        .Value = blnOptValue
        
        If blnLock = False Then
            .Enabled = True
        Else
            .Enabled = False
            .Value = False
        End If
    End With
    
    For lngCnt = 1 To 6
        Call sub_MergeAreaControl(TargetSheets, "合成子資産名" & lngCnt, True)
        Call sub_MergeAreaControl(TargetSheets, "合成加減" & lngCnt, blnLock)
        Call sub_MergeAreaControl(TargetSheets, "合成子資産コード" & lngCnt, blnLock)
    Next lngCnt
End Sub

'*************************************************************************
'関数名　　：入力マージセルのクリア処理
'
'引　　数　：TargetSheets       I       処理対象シート
'          ：strCellName        I       連結セルの名前
'          ：blnLock            I       入力エリアの有効／無効
'
'戻り値　　：なし
'
'機能説明　：入力エリアのクリアと状態設定
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規作成
'
'*************************************************************************
Private Sub sub_MergeAreaControl(ByRef TargetSheets As Object, ByVal strCellName As String, ByVal blnLock As Boolean)
    Dim lngInteriorColorIndex   As Long
    Dim lngBordersColorIndex    As Long
    
    With TargetSheets
        .Range(strCellName).Value = ""
        .Range(strCellName).MergeArea.Locked = blnLock
        
        If blnLock = False Then
            lngInteriorColorIndex = 35
            lngBordersColorIndex = 10
        Else
            lngInteriorColorIndex = xlNone
            lngBordersColorIndex = xlAutomatic
        End If
        
        With .Range(strCellName).MergeArea
            .Interior.ColorIndex = lngInteriorColorIndex
            
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = lngBordersColorIndex
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = lngBordersColorIndex
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = lngBordersColorIndex
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = lngBordersColorIndex
            End With
        End With
        
    End With

End Sub


'コンボ項目の初期化
Public Sub subIniCombo()

    Dim strErrMsg As String
    
    strErrMsg = ""

    '資産コードのデータ取得
    If fucGetShisanCodeList(SHISAN_LIST, strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 17001, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(SHISAN_LIST)

    '加減区分リスト作成
    If fucGetComboCodeList(KAGEN_LIST, strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 17002, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(KAGEN_LIST)

    '子資産リスト作成
    If fucGetShisanCodeList(KO_SHISAN_LIST, strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 17003, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    '名前定義
    Call subNameDefine(KO_SHISAN_LIST)
    
    

End Sub

'*************************************************************************
'関数名　　：資産テーブル抽出処理
'
'引　　数　：strListName    I       取得するリスト名
'          ：strErrMsg      O       エラーメッセージ
'
'戻り値　　：Boolean
'
'機能説明　：資産テーブルから資産一覧を取得し「data」シートに記入
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規
'
'*************************************************************************
Private Function fucGetShisanCodeList(ByVal strListName As String, ByRef strErrMsg As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql          As String
    Dim vData()         As Variant
    Dim lngCol          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long
    Dim lngListCol      As Long
    Dim lngListRow      As Long
    
    fucGetShisanCodeList = False
    
    '資産テーブル検索SQL作成
    Call sub_ShisanSqlCreate(strListName, strSql)
    
    strSql = strSql & "  ORDER BY SHISAN_BUNRUI "
    strSql = strSql & "          ,SHISAN_CODE"
    
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Activate
    
    
    'データセル範囲をクリア
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
        lngListCol = .Range(strListName).Column
        .Range(.Cells(2, lngListCol), .Cells(65536, lngListCol)).ClearContents
    End With
    
    lngListRow = 0
    '取得データをセルに設定
    For lngCnt = 0 To lngRow - 1
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(2 + lngListRow, lngListCol).Value = CStr(vData(0, lngCnt))
        lngListRow = lngListRow + 1
    Next lngCnt
    
    Erase vData
    
    
    fucGetShisanCodeList = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fucGetShisanCodeList", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    strErrMsg = "fucGetShisanCodeList" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：資産テーブル検索SQL作成
'
'引　　数　：strListName    I       取得するリスト名
'          ：strsql         O       作成したSQL
'
'戻り値　　：Boolean
'
'機能説明　：資産テーブルの検索SQLを作成
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規
'更新履歴　：2008/04/16 SRA Y.Azuma    修正     資産登録仕様変更
'
'*************************************************************************
Public Sub sub_ShisanSqlCreate(ByVal strListName As String, ByRef strSql As String)
    Dim strWhere        As String

    Select Case strListName
        Case SHISAN_LIST    '資産リスト
            strWhere = ""
            strWhere = strWhere & "    AND SHISAN_BUNRUI IN('" & Replace(SHISAN_ICHIRAN_BUNRUI, ",", "','") & "')"
            
        Case KO_SHISAN_LIST '子資産リスト
            strWhere = ""
'------------<資産登録20080218 20080416 SRA東 START> -----------------------
            strWhere = strWhere & "    AND KANJOH_MEIGARA_OYA_KBN != '" & OYA_KBN & "'"

''------------<資産登録20080218 20080317 SRA東 START> -----------------------
'''            strWhere = strWhere & "    AND KANJOH_MEIGARA_OYA_KBN != '" & OYA_KBN & "'"
''------------<資産登録20080218 20080317 SRA東 END  > -----------------------
'------------<資産登録20080218 20080416 SRA東 END  > -----------------------
            strWhere = strWhere & "    AND SHISAN_BUNRUI IN('" & Replace(KO_SHISAN_ICHIRAN_BUNRUI, ",", "','") & "')"
        Case Else
            strWhere = ""
    End Select
    
    strSql = ""
    strSql = strSql & " SELECT SHISAN_BUNRUI||SHISAN_CODE,SHISAN_NAME"
    strSql = strSql & "       ,SHISAN_NAME "
    strSql = strSql & "   FROM " & TBL_SHISAN
    strSql = strSql & "  WHERE SAKUJO_FLG              = '0'"
    strSql = strSql & strWhere

End Sub


'*************************************************************************
'関数名　　：コンボ用リスト抽出処理
'
'引　　数　：strListName    I       取得するリスト名
'          ：strErrMsg      O       エラーメッセージ
'
'戻り値　　：Boolean
'
'機能説明　：コードテーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規
'
'*************************************************************************
Private Function fucGetComboCodeList(ByVal strListName As String, ByRef strErrMsg As String) As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql          As String
    Dim vData()         As Variant
    Dim lngCol          As Long
    Dim lngRow          As Long
    Dim lngCnt          As Long
    Dim lngListCol      As Long
    
    fucGetComboCodeList = False
    
    
    strSql = ""
    strSql = strSql & " SELECT SUBSTR(CODE_VALUE,1,1)"
    strSql = strSql & "   FROM KYK_CODE_VALUE "
    strSql = strSql & "  WHERE CODE_NO = '102'"
    strSql = strSql & "    AND SAKUJO_FLG = '0'"
    strSql = strSql & " "
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    ThisWorkbook.Worksheets(DATA_SHEETNAME).Activate
    
    
    'データセル範囲をクリア
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
        lngListCol = .Range(strListName).Column
        .Range(.Cells(2, lngListCol), .Cells(65536, lngListCol)).ClearContents
    End With
    
    
    '取得データをセルに設定
    For lngCnt = 0 To lngRow - 1
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(2 + lngCnt, lngListCol).Value = Trim(vData(0, lngCnt))
    Next lngCnt
    
    Erase vData
    
    
    fucGetComboCodeList = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fucGetComboCodeList", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
    strErrMsg = "fucGetComboCodeList" & vbCrLf & Err.Description

End Function


'*************************************************************************
'関数名　　：dataシートのセル名再定義
'
'引　　数　：strListName    I       取得するリスト名
'
'戻り値　　：無し
'
'機能説明　：名前定義を再設定する。
'
'更新履歴　：2008/02/22 SRA Y.Azuma    新規
'
'*************************************************************************
Private Sub subNameDefine(ByVal strListName As String)

    Dim RowCnt          As Long
    Dim lngListCol      As Long
    
    lngListCol = ThisWorkbook.Worksheets(DATA_SHEETNAME).Range(strListName).Column
    
    '*** 名前定義
        
    For RowCnt = 2 + 0 To 65536
        If Trim(ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(RowCnt, lngListCol).Value) = "" Then
            RowCnt = RowCnt - 1
            Exit For
        End If
    Next RowCnt
    
    '再定義
    If RowCnt = 1 Then
        RowCnt = 2
    Else
        'nothing
    End If
    
    ThisWorkbook.Names.Add Name:=strListName, _
     RefersToR1C1:="=data!R2C" & lngListCol & ":R" & RowCnt & "C" & lngListCol
    
End Sub

