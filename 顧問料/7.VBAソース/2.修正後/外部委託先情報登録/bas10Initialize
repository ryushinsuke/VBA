Attribute VB_Name = "bas10Initialize"
Option Explicit

'*************************************************************************
'
'プロジェクト名：外部委託ライセンスフィー計算システム
'
'オブジェクト名：bas10Initialize
'
'機能概要　：初期処理
'
'更新履歴　：2008/08/03 SRA H.Anpo      新規作成
'
'*************************************************************************
Const MODULE_NAME = "bas10Initialize"


'*************************************************************************
'関数名　　：初期化メイン
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：初期起動時に行われる初期処理のメイン
'
'更新履歴　：2008/08/03 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Sub g_subKeisanInitialize()

    With ThisWorkbook
        '画面の初期化
        Call gCom01_SheetProtect(.Worksheets(MAIN_SHEETNAME), False)
        
        .Worksheets(MAIN_SHEETNAME).Range("外部委託先").Value = mC_INIT_VALUE_GINO
        .Worksheets(MAIN_SHEETNAME).Range("支払期間").Value = ""
        .Worksheets(TEMPLATE_SHEETNAME).Range("検索時外部委託先").Value = ""
        .Worksheets(TEMPLATE_SHEETNAME).Range("検索時支払期間ID").Value = ""
        
        Call g_subKeisanIniScreenH(.Worksheets(MAIN_SHEETNAME))   'ヘッダー部
        Call g_subKeisanIniScreenD(.Worksheets(MAIN_SHEETNAME))   '明細部
    End With
    
    'サインエリアの非表示
    Call gfunc_VisibleSignArea(False)
    
    'コンボ項目の初期化
    Call keisanIniCombo
    
    
End Sub


'*************************************************************************
'関数名　　：ヘッダー部のクリア処理
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：ヘッダー部のセルをクリアする
'
'更新履歴　：2008/06/03 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Sub g_subKeisanIniScreenH(ByRef TargetSheets As Object)

    ' ヘッダー部の初期化
    With ThisWorkbook.Worksheets(MAIN_SHEETNAME)

        Call gCom01_SheetProtect(TargetSheets, False)
        
        .Range("支払期間FROM").Value = ""
        .Range("支払期間TO").Value = ""
        .Range("契約期間FROM").Value = ""
        .Range("契約期間TO").Value = ""
        .Range("年間日数").Value = ""
        .Range("源泉税").Value = ""
        .Range("源泉税率").Value = ""
        .Range("消費税").Value = ""
        .Range("消費税率").Value = ""
        .Range("支払割合分子").Value = ""
        .Range("支払割合分母").Value = ""
        .Range("送付日").Value = ""
        .Range("支払予定日").Value = ""
        .Range("支払日").Value = ""
        
        Call gCom01_SheetProtect(TargetSheets, True)
    
    End With
End Sub

'*************************************************************************
'関数名　　：組入れ情報部のクリア処理
'
'引　　数　：なし
'
'戻り値　　：なし
'
'機能説明　：組入れ情報部を全て削除する
'
'更新履歴　：2008/06/03 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Sub g_subKeisanIniScreenD(ByRef TargetSheets As Object)
        
    Call gCom01_SheetProtect(TargetSheets, False)
        
    Call gKsC_fncKsCmnCheckRowDelete(ThisWorkbook.Worksheets(MAIN_SHEETNAME), True) '全行削除
    
    Call gCom01_SheetProtect(TargetSheets, True)

End Sub

'コンボ項目の初期化
Private Sub keisanIniCombo()

    Dim strErrMsg As String
    
    strErrMsg = ""

    'コード値と料率のデータ取得
    If fucGetCodeRyouritu(strErrMsg) = False Then
        Call gfunc_ErrorMsg(3, 18100, "", "(" & strErrMsg & ")")
        Exit Sub
    End If
    
    'コード値と料率の名前定義
    Call subNameDefine

End Sub


'資産と料率データの取得
Private Function fucGetCodeRyouritu(ByRef strErrMsg As String) As Boolean

    fucGetCodeRyouritu = False

    '資産テーブルの抽出
    If fncGet_Code = False Then
        strErrMsg = "コード値テーブル取得で失敗"
        Exit Function
    End If


    '料率テーブルの抽出
    If fncGet_Rate = False Then
        strErrMsg = "料率テーブル取得で失敗"
        Exit Function
    End If

    fucGetCodeRyouritu = True

End Function


'*************************************************************************
'関数名　　：コード値テーブル抽出処理
'
'引　　数　：無し
'
'戻り値　　：Boolean
'
'機能説明　：コード値テーブルからコンボ項目を取得し「data」シートに記入
'
'更新履歴　：2008/06/04 SRA H.Anpo     新規作成
'
'*************************************************************************
Private Function fncGet_Code() As Boolean
       
On Error GoTo ErrHandler
    
    Dim vCodeNo(mC_CODENO_CNT)  As Variant
    Dim lngCnt                  As Long
    Dim lngCnt2                 As Long
    
    Dim strSql                  As String
    Dim vData()                 As Variant
    Dim lngCol                  As Long
    Dim lngRow                  As Long
    
    fncGet_Code = False
    
    '1)契約区分           コードNO: 56
    '2)外部委託計算方法   コードNO: 57
    '3)消費税フラグ       コードNO: 58
    '4)源泉税フラグ       コードNO: 59
    '5)年間日数区分       コードNO:  7
    '6)外部委託最終区分   コードNO: 63
    '7)国内顧問日付種類   コードNO:  9
    vCodeNo(mC_DATASHEET_COLNO_KEIYAKU_KBN) = mC_CODENO_KEIYAKU_KBN             '契約区分
    vCodeNo(mC_DATASHEET_COLNO_KEISAN_HOHHOH) = mC_CODENO_KEISAN_HOHHOH         '外部委託計算方法
    vCodeNo(mC_DATASHEET_COLNO_SHOUHI_ZEI_FLG) = mC_CODENO_SHOUHI_ZEI_FLG       '消費税フラグ
    vCodeNo(mC_DATASHEET_COLNO_GENSEN_ZEI_FLG) = mC_CODENO_GENSEN_ZEI_FLG       '源泉税フラグ
    vCodeNo(mC_DATASHEET_COLNO_NENKAN_NISSU_KBN) = mC_CODENO_NENKAN_NISSU_KBN   '年間日数区分
    vCodeNo(mC_DATASHEET_COLNO_SAISHU_KBN) = mC_CODENO_SAISHU_KBN               '外部委託最終区分
    vCodeNo(mC_DATASHEET_COLNO_HIZUKE_SHURUI) = mC_CODENO_HIZUKE_SHURUI         '国内顧問日付種類
    
    For lngCnt = 1 To UBound(vCodeNo())
    
        strSql = ""
        strSql = strSql & " SELECT"
        strSql = strSql & "     CODE_VALUE || ':' || NVL(VALUE_NAME,'')"
        strSql = strSql & " FROM"
        strSql = strSql & "     KYK_CODE_VALUE"
        strSql = strSql & " WHERE"
        strSql = strSql & "     SAKUJO_FLG ='0'"
        strSql = strSql & " AND CODE_NO    = '" & vCodeNo(lngCnt) & "'"
        
        'コードNOが 年間日数区分,国内顧問日付種類,外部委託計算方法 の場合はコード値 "0" を表示しない
        If vCodeNo(lngCnt) = mC_CODENO_NENKAN_NISSU_KBN Or _
           vCodeNo(lngCnt) = mC_CODENO_HIZUKE_SHURUI Or _
           vCodeNo(lngCnt) = mC_CODENO_KEISAN_HOHHOH Then
            strSql = strSql & " AND CODE_VALUE    >= '1' "
        End If
        
        strSql = strSql & " ORDER BY "
        strSql = strSql & "     CODE_VALUE "
        'データ取得
        Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
        
''------------<Modify Start azuma 2007/05/31 (PH3)> -----------------------
        ThisWorkbook.Worksheets(DATA_SHEETNAME).Activate
''------------<Modify End   azuma 2007/05/31 (PH3)> -----------------------
        
        'データセル範囲をクリア
        With ThisWorkbook.Worksheets(DATA_SHEETNAME)
            .Range(.Cells(2, lngCnt), .Cells(65536, lngCnt)).ClearContents
        
            '取得データをセルに設定
            For lngCnt2 = 0 To lngRow - 1
                 .Cells(2 + lngCnt2 + 0, lngCnt).Value = vData(0, lngCnt2)
            Next lngCnt2
        
        End With
        
        Erase vData
    
    Next lngCnt
    
    Erase vCodeNo
    
    fncGet_Code = True
    
    Exit Function
ErrHandler:

'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_Code", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
'    MsgBox "Error:fncGet_Code" & vbCrLf & Err.Description

End Function


'*************************************************************************
'関数名　　：料率テーブル抽出処理
'
'引　　数　：無し
'
'戻り値　　：Boolean
'
'機能説明　：料率テーブルからコンボ項目(料率)を取得し「data」シートに記入
'
'更新履歴　：2008/06/04 SRA H.Anpo     新規作成
'
'*************************************************************************
Private Function fncGet_Rate() As Boolean
       
On Error GoTo ErrHandler
    
    Dim strSql      As String
    Dim vData()     As Variant
    Dim lngCol      As Long
    Dim lngRow      As Long
    Dim lngCnt      As Long
    Dim lngColCnt   As Long
    
    fncGet_Rate = False
    
    strSql = ""
    strSql = strSql & " SELECT"
    strSql = strSql & "     RATE_CODE||':'||NVL(RATE_NAME,'')"
    strSql = strSql & " FROM"
    strSql = strSql & "     KYK_RATE"
    strSql = strSql & " WHERE"
    strSql = strSql & "     SAKUJO_FLG='0'"
    strSql = strSql & " ORDER BY"
    strSql = strSql & "     RATE_CODE"
    'データ取得
    Call gclsdb.DoExequteSql(gcSELECT, strSql, vData, lngCol, lngRow)
    
    With ThisWorkbook.Worksheets(DATA_SHEETNAME)
    
'------------<Modify Start azuma 2007/05/31 (PH3)> -----------------------
        .Activate
'------------<Modify End   azuma 2007/05/31 (PH3)> -----------------------
    
        'データセル範囲をクリア
        .Range("H2:H65536").ClearContents
        
        '取得データをセルに設定
        For lngCnt = 0 To lngRow - 1
            .Cells(1 + lngCnt + 1, 8).Value = vData(0, lngCnt)
        Next lngCnt
    
    End With
    
    Erase vData
    
    fncGet_Rate = True
    
    Exit Function
ErrHandler:
    fncGet_Rate = False
'---- Error Log Start ----------------------------------------------------
    Dim lng As Long
    lng = Err.Number
    Call subErrProcess(ThisWorkbook.Name & "\" & MODULE_NAME, "fncGet_Rate", Err.Number, Err.Description)
    On Error GoTo 0
'    Err.Raise lng
'---- Error Log End   ----------------------------------------------------
    Erase vData
'MsgBox "Error:fncGet_Rate" & vbCrLf & Err.Description

End Function

'*************************************************************************
'関数名　　：名前定義設定
'
'引　　数　：無し
'
'戻り値　　：無し
'
'機能説明　：リストデータの名前定義を再設定する。
'
'更新履歴　：2008/06/04 SRA H.Anpo     新規作成
'
'*************************************************************************
Private Sub subNameDefine()
    
    Dim lngRowCnt                           As Long
    Dim lngListCol                          As Long
    Dim vListName(mC_DATASHEET_COLNO_END)   As Variant
    
    '1)契約区分
    '2)外部委託計算方法
    '3)消費税フラグ
    '4)源泉税フラグ
    '5)年間日数区分
    '6)外部委託最終区分
    '7)国内顧問日付種類
    '8)料率
    vListName(mC_DATASHEET_COLNO_KEIYAKU_KBN) = mC_NAME_LIST_KEIYAKU_KBN
    vListName(mC_DATASHEET_COLNO_KEISAN_HOHHOH) = mC_NAME_LIST_KEISAN_HOHHOH
    vListName(mC_DATASHEET_COLNO_SHOUHI_ZEI_FLG) = mC_NAME_LIST_SHOUHI_ZEI_FLG
    vListName(mC_DATASHEET_COLNO_GENSEN_ZEI_FLG) = mC_NAME_LIST_GENSEN_ZEI_FLG
    vListName(mC_DATASHEET_COLNO_NENKAN_NISSU_KBN) = mC_NAME_LIST_NENKAN_NISSU_KBN
    vListName(mC_DATASHEET_COLNO_SAISHU_KBN) = mC_NAME_LIST_SAISHU_KBN
    vListName(mC_DATASHEET_COLNO_HIZUKE_SHURUI) = mC_NAME_LIST_HIZUKE_SHURUI
    vListName(mC_DATASHEET_COLNO_RATE) = mC_NAME_LIST_RATE
    
    For lngListCol = 1 To mC_DATASHEET_COLNO_END
        
        For lngRowCnt = 2 To 65536
            If Trim(ThisWorkbook.Worksheets(DATA_SHEETNAME).Cells(lngRowCnt, lngListCol).Value) = "" Then
                lngRowCnt = lngRowCnt - 1
                Exit For
            End If
        Next lngRowCnt
        
        '再定義
        ThisWorkbook.Names.Add Name:=vListName(lngListCol), _
         RefersToR1C1:="=data!R2C" & lngListCol & ":R" & IIf(lngRowCnt < 2, 2, lngRowCnt) & "C" & lngListCol
'        ThisWorkbook.Names.Add Name:=vListName(lngListCol), _
'         RefersToR1C1:="=data!R2C" & lngListCol & ":R" & lngRowCnt & "C" & lngListCol
    Next lngListCol
    
    Erase vListName
    
End Sub


'*************************************************************************
'関数名　　：サインエリアの表示・非表示設定
'
'引　　数　：
'           blnType       I       表示：True、非表示：False
'
'戻り値　　：なし
'
'機能説明　：サインエリア上シェイプ背景を透明、不透明の設定する。
'
'更新履歴　：2006/07/07 SRA Y.Azuma    新規作成
'
'*************************************************************************
Public Sub gfunc_VisibleSignArea(blnType As Boolean)

Dim lngRow  As Long
Dim lngCol  As Long
    
    Call gCom01_SheetProtect(Worksheets(MAIN_SHEETNAME), False)
    
    With ThisWorkbook.Worksheets(MAIN_SHEETNAME)
        If blnType Then
            With .Range("承認欄")
                .Borders(xlDiagonalDown).LineStyle = xlNone
                .Borders(xlDiagonalUp).LineStyle = xlNone
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With .Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With .Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With .Borders(xlInsideVertical)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With .Borders(xlInsideHorizontal)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With

                '先頭の行、列を取得
                lngRow = .Row
                lngCol = .Column

            End With
                
            .Cells(lngRow, lngCol).Value = "担当印"         '担当印
            .Cells(lngRow, lngCol + 2).Value = "承認印"     '承認印
            
            .Range(.Cells(lngRow + 1, lngCol), .Cells(lngRow + 3, lngCol + 1)).ClearContents            '担当サイン欄
            .Range(.Cells(lngRow + 1, lngCol + 2), .Cells(lngRow + 3, lngCol + 2 + 1)).ClearContents    '承認サイン欄
            
            .Range("印刷日時") = Format(.Range("データ取得日時"), "yyyy/mm/dd hh:mm:ss")                '印刷日時
            
        Else
            
            With .Range("承認欄")
                '先頭の行、列を取得
                lngRow = .Row
                lngCol = .Column
            End With
            .Range(.Cells(lngRow, lngCol), .Cells(lngRow, lngCol + 1)).ClearContents                    '担当印
            .Range(.Cells(lngRow, lngCol + 2), .Cells(lngRow, lngCol + 2 + 1)).ClearContents            '承認印
                
            .Range(.Cells(lngRow + 1, lngCol), .Cells(lngRow + 3, lngCol + 1)).ClearContents            '担当サイン欄
            .Range(.Cells(lngRow + 1, lngCol + 2), .Cells(lngRow + 3, lngCol + 2 + 1)).ClearContents    '承認サイン欄
            
            With .Range("印刷日時")
                '先頭の行、列を取得
                lngRow = .Row
                lngCol = .Column
            End With
            .Range(.Cells(lngRow, lngCol), .Cells(lngRow, lngCol + 4)).ClearContents                    '印刷日時
            
            With .Range("承認欄")
                .Borders(xlDiagonalDown).LineStyle = xlNone
                .Borders(xlDiagonalUp).LineStyle = xlNone
                .Borders(xlEdgeLeft).LineStyle = xlNone
                .Borders(xlEdgeTop).LineStyle = xlNone
                .Borders(xlEdgeBottom).LineStyle = xlNone
                .Borders(xlEdgeRight).LineStyle = xlNone
                .Borders(xlInsideVertical).LineStyle = xlNone
                .Borders(xlInsideHorizontal).LineStyle = xlNone
            End With
        End If
    
    End With
    
    Call gCom01_SheetProtect(ThisWorkbook.Worksheets(MAIN_SHEETNAME), True)

End Sub


'*************************************************************************
'関数名　　：コマンドボタンの表示・非表示設定
'
'引　　数　：
'           blnType       I       表示：True、非表示：False
'
'戻り値　　：なし
'
'機能説明　：コマンドボタン表示・非表示の設定をする。
'
'更新履歴　：2008/06/09 SRA H.Anpo    新規作成
'
'*************************************************************************
Public Sub gfunc_VisibleCommandBtn(blnType As Boolean)

    With ThisWorkbook.Worksheets(MAIN_SHEETNAME)
    
        .cmdAdd.Visible = blnType
        .cmdDel.Visible = blnType
        
        .cmdSearch.Visible = blnType
        .cmdUp.Visible = blnType
        .cmdPrint.Visible = blnType
                
    End With

End Sub
